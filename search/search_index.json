{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"body { color:black; background-color: #424242; background-image: linear-gradient( 45deg, #2b2b2b 25%, transparent 25%, transparent 75%, #2b2b2b 75%, #2b2b2b ), linear-gradient( -45deg, #2b2b2b 25%, transparent 25%, transparent 75%, #2b2b2b 75%, #2b2b2b ); background-size: 60px 60px; background-position: 0 0; animation: slide 5s infinite linear; } @keyframes slide { from { background-position: 0 0; } to { background-position: -120px 60px; } } /* Application header should be static for the landing page */ .md-header { position: initial; } /* Remove spacing, as we cannot hide it completely */ .md-main__inner { margin: 0; } /* Hide table of contents */ @media screen and (min-width: 60em) { .md-sidebar--secondary { display: none; } } /* Hide navigation */ @media screen and (min-width: 76.25em) { .md-sidebar--primary { display: none; } } .modal { position: absolute; left: 50%; top: 55%; transform: translate(-50%, -50%); width: 370px; display: inline-flex; flex-direction: column; align-items: center; padding: 1.4rem 1rem; border: 3px solid black; border-radius: 5px; background: white; box-shadow: 8px 8px 0 rgba(0, 0, 0, 0.2); } .message { font-size:2em; margin: 0px 0px 0px; position: relative; top: -8px; } .btn { color:inherit; font-family:inherit; font-size: inherit; background-image: linear-gradient(130deg, #00C0FF 0%, #FFCF00 49%, #FC4F4F 100%); padding: 0.3rem 3.4rem; border: 3px solid black; border-radius: 3px; margin-right: 2.6rem; box-shadow: 0 0 0 black; transition: all 0.2s; } .btn:last-child { margin: 0; } .btn:hover { box-shadow: 0.4rem 0.4rem 0 #141414; transform: translate(-0.4rem, -0.4rem); } .btn:active { box-shadow: 0 0 0 black; transform: translate(0, 0); } .options { display: flex; flex-direction: row; justify-content: space-between; margin-top: 0.85rem; } .container { position: relative; } .container img { width: auto; height: auto; border-radius: 3px; box-shadow: 0 6px 10px 6px rgba(0, 0, 0, 0.1); } .container .info { position: absolute; top: 6.5%; left: 6.5%; transform: translate(-50%, -50%); -ms-transform: translate(-50%, -50%); background-color: white; color: white; font-size: 19px; padding: 0px 4px; border-radius: 10%; cursor: pointer; } .container .info:hover { background-color: #5466ce; } .container .tooltip{ position: absolute; display: inline; top: 6.5%; left: 6.5%; transform: translate(-50%, -50%); -ms-transform: translate(-50%, -50%); } .container .tooltip:after{ display: block; visibility: hidden; position: absolute; bottom: 0; left: 20%; opacity: 0; content: attr(tool-tips); /* might also use attr(title) */ height: auto; min-width: 250px; padding: 5px 8px; z-index: 999; color: #fff; text-decoration: none; text-align: center; background: rgba(0,0,0,0.85); -webkit-border-radius: 5px; -moz-border-radius: 5px; border-radius: 5px; } .container .tooltip:before { position: absolute; visibility: hidden; width: 0; height: 0; left: 50%; bottom: 0px; opacity: 0; content: \"\"; border-style: solid; border-width: 6px 6px 0 6px; border-color: rgba(0,0,0,0.85) transparent transparent transparent; } .container .tooltip:hover:after{ visibility: visible; opacity: 1; bottom: 20px; } .container .tooltip:hover:before{ visibility: visible; opacity: 1; bottom: 14px; } a.tooltip.left:after { left: auto; right: 100%; bottom: -45%; } a.tooltip.left:hover:after { right: 110%; bottom: -45%; } a.tooltip.left:before { border-width: 5px 0 5px 10px; border-color: transparent transparent transparent rgba(0,0,0,0.85); left: auto; right: 90%; bottom: 2%; } a.tooltip.left:hover:before { right: 100%; bottom: 2%; } Welcome to My Site! \u24d8 About Me","title":"Home"},{"location":"feed/","text":"[data-md-color-scheme=\"default\"] { --cover-color: white; } [data-md-color-scheme=\"slate\"] { --cover-color: #212226; } .post { display: flex; flex-direction: column; margin: 1rem auto; box-shadow: 0 5px 9px 2px rgba(0, 0, 0, 0.4); margin-bottom: 1.6%; background: inherit; line-height: 1.4; border-radius: 5px; overflow: hidden; z-index: 0; } .post:hover .photo { transform: scale(1.08) rotate(1deg); } .post .meta { position: relative; z-index: 0; height: 200px; } .post .photo { position: absolute; top: 0; right: 0; bottom: 0; left: 0; background-size: cover; background-position: center; transition: transform 0.2s; } .post .details a { -webkit-text-decoration: dotted underline; text-decoration: dotted underline; } .post .details .tags li { margin-right: 2px; } .post .details .tags li:first-child { margin-left: -4px; } .post .description { padding: 1rem; background: inherit; position: relative; z-index: 1; } .post .description h1 { line-height: 1; margin: 0; color: inherit; font-size: 1.7rem; } .post .description h2 { font-size: 1rem; font-weight: 300; color: inherit; margin-top: 5px; } .post .description .read-more { float: right; text-align: right; margin-top: -1.25em; height: 1.45em; width: 6.5em; } .post .description .con { position: relative; margin-top: 1em; height: 1.45em; width: 9em; } .post .description .con .share { float:left; font-size: 1.1em; } .post .description .con .share a { color: inherit; } .post .description .read-more a { color: #5466ce; display: inline-block; position: relative; } .post .description .read-more a:after { font-weight: 1000; content: \"-->\"; margin-left: -10px; opacity: 0; vertical-align: middle; transition: margin 0.3s, opacity 0.3s; } .post .description .read-more a:hover:after { margin-left: 5px; opacity: 1; } .twitter { padding-left: 0.2em; padding-right: 0.2em; } .con .share a.twitter:hover { color: #00acee; } .fb { padding-right: 0.2em; } .con .share a.fb:hover { color: #3b5998; } .pin { padding-left: 0.2em; padding-right: 0.2em; } .con .share a.pin:hover { color: #E60023; } .ln { padding-left: 0.2em; padding-right: 0.2em; } .con .share a.ln:hover { color: #0e76a8; } .email { padding-left: 0.2em; } .con .share a.email:hover { color: #5466ce; } .post p { position: relative; color: inherit; margin: 1rem 0 0; } .post p:first-of-type { margin-top: 1.25rem; } .post p:first-of-type:before { content: \"\"; position: absolute; height: 4.5px; background-color: #5466ce; width: 55px; top: -0.75rem; border-radius: 5px; } .post:hover .details { left: 0%; } .time { position: relative; float:right; font-size: 0.95em; margin-top: -2.41em; margin-right: 0.5em; color: inherit; } .title { margin-top: -1.3em; font-size: 3.5em; font-weight: 500; font-style: oblique; } @media (min-width: 640px) { .post { flex-direction: row; max-width: 700px; } .post .meta { flex-basis: 40%; height: auto; } .post .description { flex-basis: 60%; } .post .description:before { transform: skewX(-3deg); background: var(--cover-color); content: \"\"; width: 40px; position: absolute; left: -10px; top: 0; bottom: 0; z-index: -1; } .post.alt { flex-direction: row-reverse; } .post.alt .description:before { left: inherit; right: -10px; transform: skew(3deg); } .post.alt .details { padding-left: 25px; } } Project Feed Adaptable Aquaponics - Summer, 2022 - 18-23 minutes A Theoretical Confrontation to Contemporary Farming Challenges. Adaptive Aquaponics is the scaled successor to my Assistive Aquaponics Fish Tank & my entry into Autodesk Instructable's Make It Modular student design scholarship. Read More CNC Milling Workflows - Spring-Summer, 2022 - X-X min A guide for CNC milling, covering machinist jargon, material standards, feeds and speeds, CAM workflows with Autodesk Fusion 360 & Vetric Aspire, and milling workflows for Shopbot & Bantam Tools machines - all through a collection of milling micro-projects ranging from a 1 to 1.9 Million scale mill of Mars's Gale Crater to brass wax seals. Read More 8-Bit Computer - Winter, 2021 - X-X min Build Log and Documentation of my take on Ben Eater's 8-Bit Computer, a 'simple-as-possible' microcontroller built upon breadboards with only simple logic gates. A dive into computer logic, and processor workings. Read More UPDI Serial Programming - Summer-Winter, 2021 - 24-31 min Programming via the megaTinyCore library, enabling your IDE for serial UPDI programming via a portable python implementation and temporary hardware, or one of two designated serial programmer options. Each UPDI serial programmer enables switching between serial programming and monitoring without any rewiring. Read More Bottle Cap Generator - Fall, 2021 - 6-7 min Lost a lid or just want a more functional cap? Generate and print your own, compatible with any existing threads! Uses metric thread standards via equasions in fusions parameters, allowing for the generation of a threaded cap with only 3 required measurements. Read More Lithophane Experiments - 2019-Present - 1-2 min A Lithophane is a piece of art made out of a thin translucent material designed to show an image in a \u201cgrisaille\u201d color format when held up to light, an art medium I use to test slicer changes with. Read More Octoprint Setup - Fall, 2021 - 9-11 min Complete Octoprint Setup Documentation, including hardware setup, software installation, machine mounting, and a list of great plugins to expand Octoprint's capabilities. Read More Assistive Aquaponics Tank - Winter & Spring, 2021 - 1-2 min A monitored aquaponics ecosystem, expanding the accessibility of successful & thriving aquaponics ecosystems. - my Fab Academy final project. Read More Klipper Enabled Ender 3 - Spring & Summer, 2021 - 10-12 min A modified Ender 3 with printer electronics rehoused, carriage reworked to direct drive, motherboard & screen swapped, and Klipper firmware installed. Read More Project Portfolio Site - Summer, 2021 - 6-7 min The behind the scenes of the site you are on right now :) - Static site generation with Mkdocs, and hosting via GitHub Pages. Read More Corner Desk - Spring, 2020 - 6-8 min A desk for the corner of my bedroom with integrated cable management and laptop mounting, allowing for super-clean cable routing. Read More","title":"Projects"},{"location":"test/","text":"var supportsCssVars = function() { var e, t = document.createElement(\"style\"); return t.innerHTML = \"root: { --tmp-var: bold; }\", document.head.appendChild(t), e = !!(window.CSS && window.CSS.supports && window.CSS.supports(\"font-weight\", \"var(--tmp-var)\")), t.parentNode.removeChild(t), e}; supportsCssVars() || alert(\"Please view this page in a modern browser that supports CSS Variables :).\"); window.onload = function() { if(!window.location.hash) { window.location = window.location + '#/'; window.location.reload(); } } window.addEventListener( \"pageshow\", function ( event ) { var historyTraversal = event.persisted || ( typeof window.performance != \"undefined\" && window.performance.navigation.type === 2 ); if ( historyTraversal ) { window.location.reload(); (function ($) { preloaderFadeOutInit(); })(jQuery); } }); function preloaderFadeOutInit(){ $('.preloader').delay(1800).fadeOut(525); $('.main-content').hide().delay(2500).fadeIn(160); $('.preloaderbg').delay(2500).fadeOut(160); $('body').attr('id',''); } jQuery(window).on('load', function () { (function ($) { preloaderFadeOutInit(); })(jQuery); }); const element = document.body; let lastScroll = 0; scroll.on('scroll', (instance) => { document.documentElement.setAttribute('data-direction', instance.direction); document.documentElement.setAttribute('data-speed', instance.speed); document.documentElement.setAttribute('data-scrollY', instance.scroll.y); const currentScroll = instance.scroll.y; if (currentScroll <= 0) { element.classList.remove(\"scrollUp\"); return; } if (currentScroll > lastScroll && !element.classList.contains(\"scrollDown\")) { element.classList.remove(\"scrollUp\"); element.classList.add(\"scrollDown\"); } else if ( currentScroll < lastScroll && element.classList.contains(\"scrollDown\") ) { element.classList.remove(\"scrollDown\"); element.classList.add(\"scrollUp\"); } lastScroll = currentScroll; }); function togglemenu() { var element = document.body; element.classList.toggle(\"toggle\"); element.classList.add(\"scrollUp\"); } function leftrevon() { var element = document.body; element.classList.add(\"revleft\"); } function leftrevoff() { var element = document.body; element.classList.remove(\"revleft\"); } .scrollDown .md-header { transform: translate3d(0, -100%, 0); } .scrollUp .md-header { transform: none; } :root { --duration: 1s; --nav-duration: calc(var(--duration) / 4); --ease: cubic-bezier(0.215, 0.61, 0.355, 1); --space: 1rem; --font-size: 1.125rem; --line-height: 1.5; --inputicon: hsla(0, 0%, 0%, 0.87); --toggledinputicon: white; --formbg: hsla(0, 0%, 0%, 0.25); --formhover: hsla(0, 0%, 0%, 0.32); --toggledform: hsla(0, 0%, 100%, 0.12); --toggledformhover: hsla(0, 0%, 100%, 0.3); } [data-md-color-scheme=\"slate\"] { /*--md-default-bg-color: hsla(228, 7%, 14%, 1);*/ --inputicon: white; --toggledinputicon: hsla(0, 0%, 0%, 0.87); --formhover: hsla(0, 0%, 100%, 0.3); --toggledform: hsla(0, 0%, 0%, 0.2); --toggledformhover: hsla(0, 0%, 0%, 0.32); } @font-face { font-family: \"montchauve\"; src: url(\"../fonts/montchauve/montchauve.eps\"); src: url(\"../fonts/montchauve/montchauve.sfd\") format(\"woff\"), url(\"../fonts/montchauve/Montchauve.otf\") format(\"opentype\"), url(\"../fonts/montchauve/montchauve.svg#filename\") format(\"svg\"); } @media screen and (min-width: 60em) { .md-sidebar--secondary { display: none; } } @media screen and (min-width: 76.25em) { .md-sidebar--primary { display: none; } } .preloader { position: absolute; top: 50vh; left: 50vw; transform: translate(-50%, -50%); width: 700px; z-index: 99999999 !important; } .preloaderbg { position: absolute; top: 0; left: 0; width: 100%; height: 100vh; z-index: 99999998 !important; background-color: white; background-position: center; } .md-main__inner { margin: 0; } .md-footer { display: none; } .md-source { color: var(--md-default-fg-color); } .toggle .logo { display: none; } .toggle .socialsparent { display: none; } .close { display: none; } .toggle .close { display: flex; } .toggle .menu { display: none; } .md-header__button.md-icon[for=\"__search\"] { color: var(--md-default-fg-color); } .toggle .md-header__button.md-icon[for=\"__search\"] { color: var(--md-default-bg-color); } .md-search__input + .md-search__icon { color: var(--inputicon); } .toggle .md-search__input + .md-search__icon { color: var(--toggledinputicon); } .md-search__form { background-color: var(--formbg); } .md-search__form:hover { background-color: var(--formhover); } .toggle .md-search__form { background-color: var(--toggledform); } .toggle .md-search__form:hover { background-color: var(--toggledformhover); } header{ padding-top: 1.5em; } .menu { color: var(--md-default-fg-color); } .close { color: var(--md-default-bg-color); } .md-header__option { color: var(--md-default-fg-color); } .toggle .md-header__option { color: var(--md-default-bg-color); } .md-header[data-md-state=shadow]{ box-shadow:0 0 0 rgba(0,0,0,0),0 0 0 rgba(0,0,0,0); } .md-header { background: none; box-shadow:0 0 0 transparent,0 0 0 transparent; } .md-tabs { display: none; } .logo { padding-left: 0; } section { height: 100vh; z-index: 2; } .o-layout { font-size: 0; height: 100vh; list-style: none; margin: 0; padding: 0; } .o-layout_item { display: inline-block; font-size: 1rem; padding-left: 0; vertical-align: top; width: 100% } .o-image_wrapper { background-color: var(--md-default-bg-color); overflow: hidden; position: relative } .o-image_wrapper.-full { align-content: center; display: flex; height: 100%; margin: 0 6.25rem } @media (max-width:699px) { .o-image_wrapper.-full { margin: 1.875rem 0 } } .o-image { opacity: .8 } .o-image img { opacity: 0; transform: scale(1.4); transition: opacity 1.2s cubic-bezier(.215, .61, .355, 1), transform 1.2s cubic-bezier(.215, .61, .355, 1); width: 100% } .o-image.is-inview img { opacity: 1; transform: scale(1); transition-delay: .6s } html.has-scroll-smooth { overflow: hidden; } html.has-scroll-dragging { -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; } .has-scroll-smooth body { overflow: hidden; } .has-scroll-smooth [data-scroll-container] { min-height: 100vh; } [data-scroll-direction=\"horizontal\"] [data-scroll-container] { height: 100vh; display: inline-block; white-space: nowrap; } [data-scroll-direction=\"horizontal\"] [data-scroll-section] { display: inline-block; vertical-align: top; white-space: nowrap; height: 100%; } .c-scrollbar { position: absolute; right: 0; top: 0; width: 7px; height: 100%; transform-origin: center right; transition: transform 0.3s, opacity 0.3s; opacity: 0; } .c-scrollbar:hover { transform: scaleX(1.25); } .c-scrollbar:hover, .has-scroll-scrolling .c-scrollbar, .has-scroll-dragging .c-scrollbar { opacity: 1; } [data-scroll-direction=\"horizontal\"] .c-scrollbar { width: 100%; height: 7px; top: auto; bottom: 0; transform: scaleY(1); } [data-scroll-direction=\"horizontal\"] .c-scrollbar:hover { transform: scaleY(1.3); } .c-scrollbar_thumb { position: absolute; top: 0; right: 0; background-color: black; opacity: 0.5; width: 5px; border-radius: 3px; margin: 2px; cursor: -webkit-grab; cursor: grab; } .has-scroll-dragging .c-scrollbar_thumb { cursor: -webkit-grabbing; cursor: grabbing; } [data-scroll-direction=\"horizontal\"] .c-scrollbar_thumb { right: auto; bottom: 0; } .has-scroll-dragging .c-scrollbar_thumb { cursor: -webkit-grabbing; cursor: grabbing } [data-scroll-direction=horizontal] .c-scrollbar_thumb { bottom: 0; right: auto } .c-fixed_wrapper { background-color: var(--md-default-bg-color); overflow: hidden; position: relative } @media (min-width:1000px) { .c-fixed_wrapper { height: 100vh } } @media (max-width:999px) { .c-fixed_wrapper { height: 50vh } } .c-fixed_target { bottom: -100vh } .c-fixed, .c-fixed_target { left: 0; position: absolute; right: 0; top: -100vh } .c-fixed { background-position: 50%; background-size: cover; height: 100%; opacity: .8 } html:not(.has-scroll-smooth) .c-fixed { top: 0 } .c-section { height: 100vh; position: relative; z-index: -2; } .c-direction-block { left: 0; position: absolute; right: 0; } .c-direction-block_item span { background: none; display: block; padding: 0 20px; white-space: nowrap } .u-2\\:1:before { padding-bottom: 50% } .u-4\\:3:before { padding-bottom: 75% } .u-16\\:9:before { padding-bottom: 56.25% } .u-1\\/1 { width: 100% !important } .u-1\\/2 { width: 50% !important } .u-2\\/2 { width: 100% !important } .u-1\\/3 { width: 33.33333% !important } .u-2\\/3 { width: 66.66667% !important } .u-3\\/3 { width: 100% !important } .u-1\\/4 { width: 25% !important } .u-2\\/4 { width: 50% !important } .u-3\\/4 { width: 75% !important } .u-4\\/4 { width: 100% !important } .u-1\\/5 { width: 20% !important } .u-2\\/5 { width: 40% !important } .u-3\\/5 { width: 60% !important } .u-4\\/5 { width: 80% !important } .u-5\\/5 { width: 100% !important } @media (min-width:700px) { .u-1\\/2\\@from-small { width: 50% } } @media (min-width:1000px) { .u-1\\/3\\@from-medium { width: 33.33333% } .u-1\\/2\\@from-medium { width: 50% } .u-2\\/5\\@from-medium { width: 40% } .u-3\\/5\\@from-medium { width: 60% } } #toptitle { font-size: 18vw; font-family: 'montchauve', Arial, sans-serif; font-weight:normal; font-style:normal; } .introabt { float: right; margin-right: 1.2em; width: 48em; } .introabt h3 { margin-left: 0.35em; width: 93%; } #circle { top: -3.5em; left: 24.75em; position: relative; padding-bottom: 100%; overflow: hidden; } .abtbtn { width: 92px; height: 92px; } #circle text { font-family: 'Fira Sans', sans-serif; font-size: 17.6px; font-weight: 500; } .textrev { position: absolute; left: 0; top: 0; overflow: hidden; animation: rightrev 5s linear 0s infinite normal; } .revleft .textrev{ animation: leftrev 5s linear 0s infinite normal; } @keyframes leftrev { from { transform: rotate(0deg); } to { transform: rotate(360deg); } } @keyframes rightrev { from { transform: rotate(360deg); } to { transform: rotate(0deg); } } .main-navigation { position: fixed; top: 0; left: 0; display: flex; align-items: center; width: 100%; height: 100%; transform: translateX(-100%); transition: transform var(--nav-duration); background-color: var(--md-default-fg-color); z-index: 3; } .main-navigation:after { content: \"\"; position: absolute; top: 0; left: 0; width: 100%; height: 100%; background-color: inherit; transform-origin: 0 50%; z-index: 3; } .main-navigation ul { font-size: 9vmin; width: 100%; z-index: 4; } .main-navigation li { display: flex; align-items: center; position: relative; overflow: hidden; z-index: 4; } .main-navigation li:after { content: \"\"; position: absolute; bottom: 0; left: 0; width: 100%; height: 1vmin; background-color: inherit; transform-origin: 0 50%; transform: translateX(-100%) skew(15deg); z-index: 4; } .main-navigation a { display: inline-block; width: 100%; max-width: 1200px; margin: 0 auto; color: var(--md-default-bg-color); line-height: 1.08; text-decoration: none; user-select: none; padding: auto; transform: translateY(100%); z-index: 4; } .main-content { z-index: 1; } .home:hover { color: #5466CE; font-style: italic; } .about:hover { color: #5466CE; font-style: italic; } .proj:hover { color: #5466CE; font-style: italic; } .mach:hover { color: #5466CE; font-style: italic; } .fab:hover { color: #5466CE; font-style: italic; } .navnum { font-size:0.35em; font-weight: lighter; font-style: italic; } .abtparent { position: absolute; top: 98%; -ms-transform: translateY(-35%); transform: translateY(-35%); right: 7.5em; height: 1.3em; color: inherit; } .abtparent a { font-weight: 400; font-size: 1.3em; color: inherit; display: inline-block; position: relative; } .abtparent a:hover { color: var(--md-default-fg-color); } .abtparent a:after { font-weight: 400; content: \"-->\"; margin-left: -10px; opacity: 0; vertical-align: middle; transition: margin 0.3s, opacity 0.3s; } .abtparent a:hover:after { margin-left: 5px; opacity: 1; } .toggle .main-navigation { transition-duration: 0.35; transform: translateX(0); } .toggle .main-navigation a { animation: link-appear calc(var(--duration) * 1.5) var(--ease) forwards; } @keyframes link-appear { 0%, 25% { transform: translateY(100%); } 50%, 100% { transform: translateY(0); } } @media (max-width: 76em) { .logo { padding-left: 1em; } } @media (max-width: 45em) { .logo { padding-left: 1em; } header{ padding-top: 1.25em; } .preloader { width: 300px; } } @media (max-width: 59.892857142857146em) { .toggle .md-search__icon.md-icon:first-of-type { color: var(--md-default-fg-color); } .preloader { width: 500px; } } @media (max-width: 55.357142857142854em) { .introabt { float: left; margin-left: 2%; margin-right: 2%; width: 96%; } .introabt h2 { font-size: 1.3em; } .introabt h3 { font-weight: 425; font-size: 1em; } } @media (min-width: 59.892857142857146em) { .md-grid { margin-left: auto; margin-right: auto; max-width: 100vw; } .md-header__inner { margin-left: 5vw; margin-right: 5vw; } } 01 Home 02 About Me 03 Projects 04 Machine Profiles 05 Fab Academy Digital Fabricator a student. a maker. a developer. an award winning designer. a graduate of the Fab Academy . Hey! I\u2019m Teddy Warner, I'm a senior in highschool, currently located in \ud83c\uddfa\ud83c\uddf8 Charlotte, NC . As a graduate of the Fab Academy , I have a great interest in contemporary fabrication technologies & a passion to spread the reaches of digital fabrication. I'm a 'Full-Stack' Digital Fabricator, utilizing plethoras of fabrication processes to produce mixed-media projects equipped with additive & subtractive parts, custom electronics & software integration. My personal work encompasses my hope to inspire & showcase the vast potential of digital fabrication. When I'm not studying, I love to lose myself in the internet or pick up a new book, hit a mountain bike trail with my friends, and foremost, continue work on a project. Regardless of the activity, you'll always find me listing to some music. - More About Me - More About Me - More About Me 01. Speed control Each element can be animated at a different speed. You get to choo-choo-choose! 04. Fixed elements Create slides that stick and untick to the viewport while scrolling through. test const scroller = new LocomotiveScroll({ el: document.querySelector('[data-scroll-container]'), smooth: true }); var typed = new Typed('#typed', { stringsElement: '#typed-strings', startDelay: 1000, loop: true }); var typed = new Typed('#typed2', { stringsElement: '#typed-strings2', startDelay: 1000, });","title":"Teddy Warner | Digital Fabricator"},{"location":"About-Me/about/","text":":root { --lightdisplaystyle: inline; --darkdisplaystyle: none; } [data-md-color-scheme=\"slate\"] { --lightdisplaystyle: none; --darkdisplaystyle: inline; } .stuff { height: 100%; width: 100%; } .stuff__container { display: flex; flex-direction: column; justify-content: space-between; padding: 2em; overflow-y: auto; } .stuff__content { padding: 2em 0; } .stuff__header { overflow: hidden; } .stuff__content h2 { margin-top: 0px; } .sidebarparent { height: 100vh; width: 100%; } .sidebar { width: 100%; position: sticky; top: 112px; left: -22em; height: auto; } .sidebar h1 { margin-bottom: -37px; } .sidebar h2 { margin-bottom: -14px; } .profilepic { margin-bottom: -12px; width: 255px; height: 255px; border-radius: 50%; } .socials { margin-top: -25px; } .ln { padding-left: 0.3em; padding-right: 0.3em; } .fa-linkedin:hover { color: #0e76a8; } .git { padding-left: 0.3em; padding-right: 0.3em; } .fa-github:hover { background: linear-gradient(155deg, #ff2400, #e81d1d, #e8b71d, #e3e81d, #1de840, #1ddde8, #2b1de8, #dd00f3, #dd00f3); -webkit-background-clip: text; -webkit-text-fill-color: transparent; } .insta { padding-left: 0.3em; padding-right: 0.3em; } .fa-instagram:hover { background: radial-gradient(circle farthest-corner at 35% 90%, #fec564, transparent 50%), radial-gradient(circle farthest-corner at 0 140%, #fec564, transparent 50%), radial-gradient(ellipse farthest-corner at 0 -25%, #5258cf, transparent 50%), radial-gradient(ellipse farthest-corner at 20% -50%, #5258cf, transparent 50%), radial-gradient(ellipse farthest-corner at 100% 0, #893dc2, transparent 50%), radial-gradient(ellipse farthest-corner at 60% -20%, #893dc2, transparent 50%), radial-gradient(ellipse farthest-corner at 100% 100%, #d9317a, transparent), linear-gradient(#6559ca, #bc318f 30%, #e33f5f 50%, #f77638 70%, #fec66d 100%); -webkit-background-clip: text; -webkit-text-fill-color: transparent; } .twitter { padding-left: 0.3em; padding-right: 0.3em; } .fa-twitter:hover { color: #00acee; } .discord { padding-left: 0.3em; padding-right: 0.3em; } .fa-discord:hover { color: #5865F2; } .spotify { padding-left: 0.3em; padding-right: 0.3em; } .fa-spotify:hover { color: #1DB954; } .email { padding-left: 0.3em; padding-right: 0.3em; } .fa-paper-plane:hover { color: #5466ce; } .logo { float:left; height: 42px; margin-right: 7px; } .resume { float:right; margin-top: 9px; } .resume a { color: inherit; } .date{ float:right; height: 50px; width: 100px; margin-top: 0px; margin-bottom: -45px; text-align: right; } .underline{ height: 4.5px; width: 55px; background-color: #5466ce; margin-top: -35px; border-radius: 5px; } .instafeed { margin-top: -1em; height: 31.3em; overflow-y: hidden; } .instalight { display: var(--lightdisplaystyle); } .instadark { display: var(--darkdisplaystyle); } .music { margin-bottom: -50px; } .coffeelarge { width: 175px; height: 35px; font-size: 16px; font-weight: 600; color: #fff; cursor: pointer; margin-top: 12px; text-align:center; border: none; background-size: 300% 100%; background-image: linear-gradient(315deg, #7183f0, #5466ce, #000000, #000000); border-radius: 50px; moz-transition: all .4s ease-in-out; -o-transition: all .4s ease-in-out; -webkit-transition: all .4s ease-in-out; transition: all .4s ease-in-out; } .coffeesmall { width: 35px; height: 35px; font-size: 16px; font-weight: 600; color: #fff; cursor: pointer; margin-top: 12px; text-align:center; border: none; background-size: 300% 100%; background-image: linear-gradient(315deg, #7183f0, #5466ce, #000000, #000000); border-radius: 50px; moz-transition: all .4s ease-in-out; -o-transition: all .4s ease-in-out; -webkit-transition: all .4s ease-in-out; transition: all .4s ease-in-out; } .coffeelarge:hover { background-position: 100% 0; moz-transition: all .4s ease-in-out; -o-transition: all .4s ease-in-out; -webkit-transition: all .4s ease-in-out; transition: all .4s ease-in-out; } .coffeesmall:hover { background-position: 100% 0; moz-transition: all .4s ease-in-out; -o-transition: all .4s ease-in-out; -webkit-transition: all .4s ease-in-out; transition: all .4s ease-in-out; } @media (min-width: 68em) { .stuff { display: flex; height: 100%; min-height: 40em; } } .stuff > *:first-child { position: relative; height: 23.5em; } @media (min-width: 30em) { .stuff > *:first-child { height: 23.5em; } } @media (min-width: 68em) { .stuff > *:first-child { flex-basis: 50%; max-width: 50%; height: auto; } } @media (min-width: 35em) { .stuff > *:last-child { flex-basis: 100%; max-width: 100%; } } @media (min-width: 76.5em) { .stuff > *:last-child { flex-basis: 85%; max-width: 85%; } } @media (min-width: 68em) { .coffeesmall { display: none; } } @media (max-height: 40em) { .sidebar { width: 100%; position: absolute; top: 0; left: 0; height: auto; } } @media (max-width: 125.1em) { .instafeed { height: 32.5em; } } @media (max-width: 100em) { .instafeed { height: 34em; } } @media (max-width: 76em) { .instafeed { height: 34em; } } @media (max-width: 72.3em) { .instafeed { height: 24em; } } @media (max-width: 68em) { .sidebar { position: absolute; top: -25px; left: 0; } .coffeesmall { position: absolute; top: -16px; right: 0; } .coffeelarge { display: none; } .instafeed { height: 61vw; } } @media (max-width: 59.892857142857146em) { .instafeed { height: 64vw; } } @media (max-width: 52em) { .instafeed { height: 67vw; } } @media (max-width: 49.69em) { .instafeed { height: 50vw; } } @media (max-width: 41.1em) { .instafeed { height: 42vw; } .instatext { display: none; } } Teddy Warner Charlotte,NC Student/Maker Buy Me a Coffee Export Resume About Me Hey! I\u2019m Teddy Warner, a junior in high school enrolled at Charlotte Latin School in Charlotte, North Carolina. I have a great interest in modern fabrication technologies such as 3d printing & CNC machines. I love using these interests to benefit my community through volunteering. Experience - YOUNG ENGINEERS OF TODAY 2020-Present Teaching Assistant Co-Instructing a fabrication course for middle & high school students. Facilitating STEAM summer classes for children ages 4 to 16. CHARLOTTE LATIN FAB LAB 2020-Present Freelance Research and Development General Lab Maintenance and Development Print farm setup and maintenance PC Building, Setup, and installation Machine workflow writing Epilog Laser Setup and Maintenance Education - CHARLOTTE LATIN SCHOOL 2018-Present High School Diploma, Class of 2023 Fab Academy 2020-2021 Principles and Applications of Digital Fabrication Diploma OUTWARD BOUND SCHOOL Fall 2019 4 Day Course in the North Carolina Mountains ARMY EDUCATION OUTREACH PROGRAM 2018-2019 2nd Place, eCYBERMISSION STEM competition for 6th through 9th grade students Honors & Awards - Autodesk Construction Solutions Scholarship Award , 1st Place. (July 2022) Instructables Digital Fabrication Student Design Challenge , 1st Place. (July 2022) The University of Virginia\u2019s Jefferson Book Award (May 2022) Instructables New Year, New Skill Student Design Challenge , 2nd Place. (Feb 2022) CLS Fab Lab Student Spotlight (Jan 2022) eCYBERMISSION , regional finalist. (Oct 2018 - Feb 2019) Appalachian SumoBot Competition, 1st Place. (Oct 2018 - Dec 2018) Featured - Autodesk Learn Lab - Upskilling for the Future (July 2022) Fab Academy - Final Project Presentation , 1:10:33 through 1:13:45. (June 2021) Charlotte Latin School - Fab Lab Covid Response (May 2021) Fab Academy - Introduction & Idea , 00:00 through 17:52. (Jan 2021) Chicago Tribune - St. Francis students gain skills... (Jan 2016) Where I'm Located - Community Involvement - Charlotte Latin School Engineering Club Leader , Planning and facilitating club meetings (Aug 2020 - Present) Charlotte Latin Fab Lab Community member, student & volunteer. (Aug 2018 - Present / 70.5 Volunteer Hours) Toe Hawks , Custom shoe insole aiming towards helping out youth affected by idiopathic toe walking. (Oct 2018 - Feb 2019) YEOT Summer Camp Counselor , Volunteer summer camp counselor for Young Engineers of Today's Racing Drones & Starwars Camps. (July 2020 / 57 Volunteer Hours) Covid-19 Shields , Designing, manufacturing, and delivering of shields and barriers to prevent the spread of Covid-19 through the school year in our FabLab. (Jul 2020 \u2013 Aug 2020 / 72 Volunteer Hours) D is for Desk , A friend of mine's Eagle Scout Project, we built Toe Hawks for the D is for Desk charity. (Nov 2020 / 17 Volunteer Hours) --- Total Service - 218.0 Hours --- @Teddymakesstuff On Instagram - What I'm Listening To -","title":"About"},{"location":"Machine-Profiles/FusionPro48/","text":"Epliog Fusion Pro 48 \u00b6 Machine Manual \u00b6 Machine Workflow \u00b6 Written by Kai Vincent (a colleague of mine) and I in 2020 Importing Files from CorelDRAW to Epilog Dashboard, and preparing for the printer- \u00b6 Open your .CDR file in CorelDRAW on the pc connected to the Fusion Pro Print your file using Ctrl + P Select Epilog Engraver under the Printer options Select \u201cUse printer default (Custom, Landscape)\u201d under the Page options Check your Preferences by going on to Preferences < Advanced < Paper Size has to pe \u201cPostScript Custom Page Size\u201d Then Click ok until your back to the Print page Click on the Color tab at the top of the Print page Set the Color to RGB Click on the PostScript tab at the top of the Print page Make sure that \u201cConvert True Type to Type 1\u201d is NOT checked Click Apply on the bottom of the Print page Click Print on the bottom of the Print page, this will pull up the Epilog Dashboard with your file Before doing anything else, properly align the Two integrated FusionPro cameras by selecting the on machines Touch Interface (see Icons on the FusionPro Touch Interface) NOTE: The camera video feed will not appear accurately if the machine is not focused for the material on the bed. This is a critical step for EVERY single print job. Jog < Then Jog the machines lens to somewhere on your material Click the Auto Focus button and wait until the FusionPro is done Then Click the Park Axis Button If your design isn\u2019t centered/positioned how you want it to be, Click on your design and drag and drop in into the correct position (you will have video feed coming in from the FusionPro to help with design placement) Alternatively, while you have your design selected, you can use the blue bar on the left of the window to position your design using X & Y values in correspondence to a point on the workplane Here you can also rotate and scale your design to fit your needs Go to the Right side of the window As long as you have jogged and focused using the machine\u2019s touchscreen, you can turn off Auto Focus in the Epilog Dashboard menu. Setting up your Material settings - \u00b6 Select your Material and Put in into the FusionPro On the Right side of the window under the Auto Focus tab, you have your Processes Make sure your Processes view is set to combined, unless planning on just Vectoring or just Engraving Click on the Process you intend on cutting -Under Process Type, Select Engrave or Vector depending on which you intend that process to be (the Off Process Type can be used in that specific process does not need to be sent to the printer, this is just like clicking \u201cdon\u2019t print\u201d in corel) Next, Click the file folder with the down arrow next to the Process name, to Import the Material Settings Find the Right Material and Resolution, Click it, and It will be used on that Process Alternatively, you can Color Map your design by clicking on the process you want to Color Map, and then selecting Color under the Split By setting Then Repeat all steps under the \u201cSetting up your Material settings\u201d for any remaining Processes Sending Prints to Job Manager and the FusionPro- \u00b6 At the very top of the Epilog Dashboard, you can select how the FusionPro is connected If the FusionPro is plugged into the PC via a USB cord, you can select USB Connection If Not, or if having problems with wired connection, select Web Connection under the same dropdown Under that bar you have the ability to change the file name before you send it to the laser, if wanted When your File is Prepared, and your Material settings are correct, click \u201cSend to JM\u201d and then \u201cPrint\u201d in the bottom left hand corner, this will send the File from Dashboard to Job Manager, save your settings in Job Manager, and then to the FusionPro Icons on the FusionPro Touch Interface- \u00b6 Starting your Cut on the FusionPro- \u00b6 If you are ever in doubt of where the FusionPro is going to cut your design, click the Trace icon on the Touch Interface and the laser will trace an outline of the area of the work surface Check to Make sure that all Blower switches are on before proceeding Check to make sure that your material is aligned correctly -On the Touch Interface, click on the job menu, and then select your Print (the most recent file is always at the top) the file chosen will be highlighted in blue Then click the Play button to the left of the joystick to start your print The FusionPro will show all of your settings set on the Touch Interface, as well as a ETA while printing FusionPro Safety Precautions- \u00b6 Check to Make sure that all Blower switches are on before proceeding with your print Stay with the laser, Never operate the laser system while unattended Use Air Assist, Always use the system\u2019s Air Assist feature when vector cutting. Ensure that the sweep air assist (the air assist that comes out of the metal nozzle next to the laser) is always on for all vector cuts. The small switch over the nozzle should be facing the front of the machine for the air assist to be on If you are ever in doubt of where the FusionPro is going to cut your design, click the Trace icon on the Touch Interface and the laser will trace an outline of the area of the work surface Clean the laser. A buildup of cutting and engraving residue and debris is dangerous and can create a fire hazard in its own right DO NOT Run the Laser Unvented Never operate the machine without a properly operating vent to the outside or to a filtration unit, Most material will only produce an irritating smoke when engraved Some materials, including but not limited to paint, varnish, composition board and plastics, produce compounds that can be harmful if concentrated Never engrave or cut any material containing PVC or Vinyl There is a red button above the FusionPro Touch Interface labeled Emergency Stop that should be pressed if any Hazards or Errors occur during the operation of the laser Term Definition Focus The distance between the lens that focuses the laser beam and the position where the beam has its smallest diameter. It is where the beam has its highest concentration of energy. Source Power The laser output/ how intense the laser is per unit area (1-100), frequently measured by watts per square centimeter (W/cm^2) Source Speed The rate at which the laser moves. Depending on the material settings, the laser may be required to move slowly for thicker materials while other materials like cardboard can be easily cut at high speed. Source Rate Cutting rate (also known as production rate) is the rate at which is the frequency of the laser hitting the material. Some materials (like wood or cardboard) require low frequencies while others (such as acrylic) require higher cutting rates. Source Kerf The width of the cutting area or the laser. Its properties are dependent on the laser properties, the thickness of the workpiece, and the type of material being used, and the width ranges from around .08mm to 1mm. In other words, this is the amount of material that the laser burns away. Source Operation 1/8\u201d Plywood 1/8\u201d Cardboard Focus 0.456 mm 0.396 mm Power 100% 70% Speed 50% 65% Rate 85% 85% Kerf (When Focused) 0.05\u201d 0.05\u201d","title":"Epliog Fusion Pro 48"},{"location":"Machine-Profiles/FusionPro48/#epliog-fusion-pro-48","text":"","title":"Epliog Fusion Pro 48"},{"location":"Machine-Profiles/FusionPro48/#machine-manual","text":"","title":"Machine Manual"},{"location":"Machine-Profiles/FusionPro48/#machine-workflow","text":"Written by Kai Vincent (a colleague of mine) and I in 2020","title":"Machine Workflow"},{"location":"Machine-Profiles/FusionPro48/#importing-files-from-coreldraw-to-epilog-dashboard-and-preparing-for-the-printer-","text":"Open your .CDR file in CorelDRAW on the pc connected to the Fusion Pro Print your file using Ctrl + P Select Epilog Engraver under the Printer options Select \u201cUse printer default (Custom, Landscape)\u201d under the Page options Check your Preferences by going on to Preferences < Advanced < Paper Size has to pe \u201cPostScript Custom Page Size\u201d Then Click ok until your back to the Print page Click on the Color tab at the top of the Print page Set the Color to RGB Click on the PostScript tab at the top of the Print page Make sure that \u201cConvert True Type to Type 1\u201d is NOT checked Click Apply on the bottom of the Print page Click Print on the bottom of the Print page, this will pull up the Epilog Dashboard with your file Before doing anything else, properly align the Two integrated FusionPro cameras by selecting the on machines Touch Interface (see Icons on the FusionPro Touch Interface) NOTE: The camera video feed will not appear accurately if the machine is not focused for the material on the bed. This is a critical step for EVERY single print job. Jog < Then Jog the machines lens to somewhere on your material Click the Auto Focus button and wait until the FusionPro is done Then Click the Park Axis Button If your design isn\u2019t centered/positioned how you want it to be, Click on your design and drag and drop in into the correct position (you will have video feed coming in from the FusionPro to help with design placement) Alternatively, while you have your design selected, you can use the blue bar on the left of the window to position your design using X & Y values in correspondence to a point on the workplane Here you can also rotate and scale your design to fit your needs Go to the Right side of the window As long as you have jogged and focused using the machine\u2019s touchscreen, you can turn off Auto Focus in the Epilog Dashboard menu.","title":"Importing Files from CorelDRAW to Epilog Dashboard, and preparing for the printer-"},{"location":"Machine-Profiles/FusionPro48/#setting-up-your-material-settings-","text":"Select your Material and Put in into the FusionPro On the Right side of the window under the Auto Focus tab, you have your Processes Make sure your Processes view is set to combined, unless planning on just Vectoring or just Engraving Click on the Process you intend on cutting -Under Process Type, Select Engrave or Vector depending on which you intend that process to be (the Off Process Type can be used in that specific process does not need to be sent to the printer, this is just like clicking \u201cdon\u2019t print\u201d in corel) Next, Click the file folder with the down arrow next to the Process name, to Import the Material Settings Find the Right Material and Resolution, Click it, and It will be used on that Process Alternatively, you can Color Map your design by clicking on the process you want to Color Map, and then selecting Color under the Split By setting Then Repeat all steps under the \u201cSetting up your Material settings\u201d for any remaining Processes","title":"Setting up your Material settings -"},{"location":"Machine-Profiles/FusionPro48/#sending-prints-to-job-manager-and-the-fusionpro-","text":"At the very top of the Epilog Dashboard, you can select how the FusionPro is connected If the FusionPro is plugged into the PC via a USB cord, you can select USB Connection If Not, or if having problems with wired connection, select Web Connection under the same dropdown Under that bar you have the ability to change the file name before you send it to the laser, if wanted When your File is Prepared, and your Material settings are correct, click \u201cSend to JM\u201d and then \u201cPrint\u201d in the bottom left hand corner, this will send the File from Dashboard to Job Manager, save your settings in Job Manager, and then to the FusionPro","title":"Sending Prints to Job Manager and the FusionPro-"},{"location":"Machine-Profiles/FusionPro48/#icons-on-the-fusionpro-touch-interface-","text":"","title":"Icons on the FusionPro Touch Interface-"},{"location":"Machine-Profiles/FusionPro48/#starting-your-cut-on-the-fusionpro-","text":"If you are ever in doubt of where the FusionPro is going to cut your design, click the Trace icon on the Touch Interface and the laser will trace an outline of the area of the work surface Check to Make sure that all Blower switches are on before proceeding Check to make sure that your material is aligned correctly -On the Touch Interface, click on the job menu, and then select your Print (the most recent file is always at the top) the file chosen will be highlighted in blue Then click the Play button to the left of the joystick to start your print The FusionPro will show all of your settings set on the Touch Interface, as well as a ETA while printing","title":"Starting your Cut on the FusionPro-"},{"location":"Machine-Profiles/FusionPro48/#fusionpro-safety-precautions-","text":"Check to Make sure that all Blower switches are on before proceeding with your print Stay with the laser, Never operate the laser system while unattended Use Air Assist, Always use the system\u2019s Air Assist feature when vector cutting. Ensure that the sweep air assist (the air assist that comes out of the metal nozzle next to the laser) is always on for all vector cuts. The small switch over the nozzle should be facing the front of the machine for the air assist to be on If you are ever in doubt of where the FusionPro is going to cut your design, click the Trace icon on the Touch Interface and the laser will trace an outline of the area of the work surface Clean the laser. A buildup of cutting and engraving residue and debris is dangerous and can create a fire hazard in its own right DO NOT Run the Laser Unvented Never operate the machine without a properly operating vent to the outside or to a filtration unit, Most material will only produce an irritating smoke when engraved Some materials, including but not limited to paint, varnish, composition board and plastics, produce compounds that can be harmful if concentrated Never engrave or cut any material containing PVC or Vinyl There is a red button above the FusionPro Touch Interface labeled Emergency Stop that should be pressed if any Hazards or Errors occur during the operation of the laser Term Definition Focus The distance between the lens that focuses the laser beam and the position where the beam has its smallest diameter. It is where the beam has its highest concentration of energy. Source Power The laser output/ how intense the laser is per unit area (1-100), frequently measured by watts per square centimeter (W/cm^2) Source Speed The rate at which the laser moves. Depending on the material settings, the laser may be required to move slowly for thicker materials while other materials like cardboard can be easily cut at high speed. Source Rate Cutting rate (also known as production rate) is the rate at which is the frequency of the laser hitting the material. Some materials (like wood or cardboard) require low frequencies while others (such as acrylic) require higher cutting rates. Source Kerf The width of the cutting area or the laser. Its properties are dependent on the laser properties, the thickness of the workpiece, and the type of material being used, and the width ranges from around .08mm to 1mm. In other words, this is the amount of material that the laser burns away. Source Operation 1/8\u201d Plywood 1/8\u201d Cardboard Focus 0.456 mm 0.396 mm Power 100% 70% Speed 50% 65% Rate 85% 85% Kerf (When Focused) 0.05\u201d 0.05\u201d","title":"FusionPro Safety Precautions-"},{"location":"Machine-Profiles/KlipperEnder3Profile/","text":"Klipper Enabled Ender 3 Profile \u00b6 Klipper Ender 3 PrusaSlicer Profile","title":"Klipper Enabled Ender 3"},{"location":"Machine-Profiles/KlipperEnder3Profile/#klipper-enabled-ender-3-profile","text":"Klipper Ender 3 PrusaSlicer Profile","title":"Klipper Enabled Ender 3 Profile"},{"location":"Machine-Profiles/MK3S%2B/","text":"Prusa I3 MK3S+ Profile \u00b6 MK3S+ PrusaSlicer Profile","title":"Prusa I3 MK3S+"},{"location":"Machine-Profiles/MK3S%2B/#prusa-i3-mk3s-profile","text":"MK3S+ PrusaSlicer Profile","title":"Prusa I3 MK3S+ Profile"},{"location":"Projects/8-bit/","tags":["Electronics","Computer","Breadboard"],"text":".profilepic { display: inline; float: left; margin-top: -7px; width: 35px; height: 34px; border-radius: 50%; } .abtlinks a { color: var(--md-default-fg-color); } .share { float:right; margin-top: 0px; font-size: 1.1em; } .share a { color: inherit; } .twitter { padding-left: 0.2em; padding-right: 0.2em; } .share a.twitter:hover { color: #00acee; } .fb { padding-left: 0.2em; padding-right: 0.2em; } .share a.fb:hover { color: #3b5998; } .pin { padding-left: 0.2em; padding-right: 0.2em; } .share a.pin:hover { color: #E60023; } .ln { padding-left: 0.2em; padding-right: 0.2em; } .share a.ln:hover { color: #0e76a8; } .email { padding-left: 0.2em; padding-right: 1.5em; } @media (max-width: 40.55384615384616em) { .share { margin-top: -3.5em; margin-right: -1.4em; } } @media (max-width: 37.4em) { .share { margin-top: -4.8em; margin-right: -1.4em; } } @media (max-width: 35em) { .year { display: none; } .share { font-size: 1em; margin-top: 0.05em; margin-right: -1.5em; } } @media (max-width: 28em) { .profilepic { margin-top: -4.5px; width: 30px; height: 30px; } .abtlinks { font-size: 0.9em; } .year { display: none; } .share { font-size: 0.9em; margin-top: 0.05em; margin-right: -1.5em; } } 8-bit Breadboard Computer - Build Log \u00b6 Teddy Warner | Junior Year - 2022 | X-X minutes I\u2019ve used microcontrollers in most of my past projects. IC data sheets are super helpful in board design with their pinouts, but I\u2019ve noticed much of the contents have been pretty foreign to me. Every once in a while, the youtube algorithm recommended one of Ben Eater\u2019s computer concept videos to me, which provide a great explanation of the simplistic logic and proofs in computers. I ended up watching his entire 8-bit Breadboard Computer series (embedded below) over the fall of 2021, to try to get a bit of a better idea of the workings of a microcontroller. The computer is an \u201cas simple as possible\u201d 1 take on an 8-bit computer, using only simple logic to create an 8-bit computer on breadboards. The computer is built-in sectioned modules and then interfaced together, making each section a bit easier to swallow. Documentation Style This page is a bit different than my other project pages, as it is a build log for my take on this 8-bit Breadboard Computer . Instead of outlining project development (as Mr. Eaters\u2019 videos do an amazing job with that), this page will be a collection of media behind each of my computer modules, as well as some final programs ran on the computer. Bill of Materials \u00b6 Qty. Description Cost URL 14 Breadboard $112 link 10 1k\u03a9 resistor 9 10k\u03a9 resistor 1 100k\u03a9 resistor 24 470\u03a9 resistor 1 1M\u03a9 resistor $16.99 link 1 1M\u03a9 potentiometer $1.39 link 6 0.01\u00b5F capacitor $1.20 link 16 0.1\u00b5F capacitor $3.00 link 1 1\u00b5F capacitor $0.15 link 4 555 timer IC $0.63 link 2 74LS00 (Quad NAND gate) $0.76 link 1 74LS02 (Quad NOR gate) $0.76 link 5 74LS04 (Hex inverter) $0.87 link 3 74LS08 (Quad AND gate) $0.72 link 1 74LS32 (Quad OR gate) $0.89 link 1 74LS107 (Dual JK flip-flop) Note: The videos use the 74LS76 which is extremely difficult to find. The 74LS107 is functionally equivalent but be careful: it has a different pinout. $1.58 link 2 74LS86 (Quad XOR gate) $1.11 link 1 74LS138 (3-to-8 line decoder) $0.80 link 1 74LS139 (Dual 2-line to 4-line decoder) $1.55 link 4 74LS157 (Quad 2-to-1 line data selector) $1.58 link 2 74LS161 (4-bit synchronous binary counter) $1.95 link 8 74LS173 (4-bit D-type register) $1.45 link 2 74189 (64-bit random access memory) $9.90 link 6 74LS245 (Octal bus transceiver) $1.26 link 1 74LS273 (Octal D flip-flop) $1.99 link 2 74LS283 (4-bit binary full adder) $1.38 link 3 28C16 EEPROM $11.85 link 3 Double-throw toggle switch $2.97 link 3 Momentary 6mm tact switch $1.05 link 1 8-position DIP switch $0.79 link 1 4-position DIP switch $0.79 link 44 Red LED 8 Yellow LED 12 Green LED 21 Blue LED $12.99 link 4 Common cathode 7-segment display $4.36 link 1 22 AWG Solid Tinned-Copper Hook-Up Wire $29.95 link \u2014 Total Cost - $228.66 \u2014 Clock Module \u00b6 Clock vs Capacitor Registers \u00b6 Arithmetic Logic Unit (ALU) \u00b6 Random Access Memory Module (RAM) \u00b6 Program Counter \u00b6 Output Register \u00b6 Module Meshing \u00b6 CPU Control Logic \u00b6 Fibonacci Sequence \u00b6 First 12 Numberes in the Fibonacci Sequence n Fibonacci Number 0 0 1 1 2 1 3 2 4 3 5 5 6 8 7 13 8 21 9 34 10 55 11 89 https://eater.net/8bit \u21a9","title":"8-bit Breadboard Computer"},{"location":"Projects/8-bit/#8-bit-breadboard-computer-build-log","text":"Teddy Warner | Junior Year - 2022 | X-X minutes I\u2019ve used microcontrollers in most of my past projects. IC data sheets are super helpful in board design with their pinouts, but I\u2019ve noticed much of the contents have been pretty foreign to me. Every once in a while, the youtube algorithm recommended one of Ben Eater\u2019s computer concept videos to me, which provide a great explanation of the simplistic logic and proofs in computers. I ended up watching his entire 8-bit Breadboard Computer series (embedded below) over the fall of 2021, to try to get a bit of a better idea of the workings of a microcontroller. The computer is an \u201cas simple as possible\u201d 1 take on an 8-bit computer, using only simple logic to create an 8-bit computer on breadboards. The computer is built-in sectioned modules and then interfaced together, making each section a bit easier to swallow. Documentation Style This page is a bit different than my other project pages, as it is a build log for my take on this 8-bit Breadboard Computer . Instead of outlining project development (as Mr. Eaters\u2019 videos do an amazing job with that), this page will be a collection of media behind each of my computer modules, as well as some final programs ran on the computer.","title":"8-bit Breadboard Computer - Build Log"},{"location":"Projects/8-bit/#bill-of-materials","text":"Qty. Description Cost URL 14 Breadboard $112 link 10 1k\u03a9 resistor 9 10k\u03a9 resistor 1 100k\u03a9 resistor 24 470\u03a9 resistor 1 1M\u03a9 resistor $16.99 link 1 1M\u03a9 potentiometer $1.39 link 6 0.01\u00b5F capacitor $1.20 link 16 0.1\u00b5F capacitor $3.00 link 1 1\u00b5F capacitor $0.15 link 4 555 timer IC $0.63 link 2 74LS00 (Quad NAND gate) $0.76 link 1 74LS02 (Quad NOR gate) $0.76 link 5 74LS04 (Hex inverter) $0.87 link 3 74LS08 (Quad AND gate) $0.72 link 1 74LS32 (Quad OR gate) $0.89 link 1 74LS107 (Dual JK flip-flop) Note: The videos use the 74LS76 which is extremely difficult to find. The 74LS107 is functionally equivalent but be careful: it has a different pinout. $1.58 link 2 74LS86 (Quad XOR gate) $1.11 link 1 74LS138 (3-to-8 line decoder) $0.80 link 1 74LS139 (Dual 2-line to 4-line decoder) $1.55 link 4 74LS157 (Quad 2-to-1 line data selector) $1.58 link 2 74LS161 (4-bit synchronous binary counter) $1.95 link 8 74LS173 (4-bit D-type register) $1.45 link 2 74189 (64-bit random access memory) $9.90 link 6 74LS245 (Octal bus transceiver) $1.26 link 1 74LS273 (Octal D flip-flop) $1.99 link 2 74LS283 (4-bit binary full adder) $1.38 link 3 28C16 EEPROM $11.85 link 3 Double-throw toggle switch $2.97 link 3 Momentary 6mm tact switch $1.05 link 1 8-position DIP switch $0.79 link 1 4-position DIP switch $0.79 link 44 Red LED 8 Yellow LED 12 Green LED 21 Blue LED $12.99 link 4 Common cathode 7-segment display $4.36 link 1 22 AWG Solid Tinned-Copper Hook-Up Wire $29.95 link \u2014 Total Cost - $228.66 \u2014","title":"Bill of Materials"},{"location":"Projects/8-bit/#clock-module","text":"Clock vs Capacitor","title":"Clock Module"},{"location":"Projects/8-bit/#registers","text":"","title":"Registers"},{"location":"Projects/8-bit/#arithmetic-logic-unit-alu","text":"","title":"Arithmetic Logic Unit (ALU)"},{"location":"Projects/8-bit/#random-access-memory-module-ram","text":"","title":"Random Access Memory Module (RAM)"},{"location":"Projects/8-bit/#program-counter","text":"","title":"Program Counter"},{"location":"Projects/8-bit/#output-register","text":"","title":"Output Register"},{"location":"Projects/8-bit/#module-meshing","text":"","title":"Module Meshing"},{"location":"Projects/8-bit/#cpu-control-logic","text":"","title":"CPU Control Logic"},{"location":"Projects/8-bit/#fibonacci-sequence","text":"First 12 Numberes in the Fibonacci Sequence n Fibonacci Number 0 0 1 1 2 1 3 2 4 3 5 5 6 8 7 13 8 21 9 34 10 55 11 89 https://eater.net/8bit \u21a9","title":"Fibonacci Sequence"},{"location":"Projects/AdaptableAquaponics/","tags":[null],"text":".profilepic { display: inline; float: left; margin-top: -7px; width: 35px; height: 34px; border-radius: 50%; } .abtlinks a { color: var(--md-default-fg-color); } .share { float:right; margin-top: 0px; font-size: 1.1em; } .share a { color: inherit; } .twitter { padding-left: 0.2em; padding-right: 0.2em; } .share a.twitter:hover { color: #00acee; } .fb { padding-left: 0.2em; padding-right: 0.2em; } .share a.fb:hover { color: #3b5998; } .pin { padding-left: 0.2em; padding-right: 0.2em; } .share a.pin:hover { color: #E60023; } .ln { padding-left: 0.2em; padding-right: 0.2em; } .share a.ln:hover { color: #0e76a8; } .email { padding-left: 0.2em; padding-right: 1.5em; } @media (max-width: 40.55384615384616em) { .share { margin-top: -3.5em; margin-right: -1.4em; } } @media (max-width: 37.4em) { .share { margin-top: -4.8em; margin-right: -1.4em; } } @media (max-width: 35em) { .year { display: none; } .share { font-size: 1em; margin-top: 0.05em; margin-right: -1.5em; } } @media (max-width: 28em) { .profilepic { margin-top: -4.5px; width: 30px; height: 30px; } .abtlinks { font-size: 0.9em; } .year { display: none; } .share { font-size: 0.9em; margin-top: 0.05em; margin-right: -1.5em; } } Adaptable Aquaponics \u00b6 Teddy Warner | Senior Year - 2022 | 18-23 minutes A Theoretical Confrontation to Contemporary Farming Challenges. Paralleling the growth of the global human population, the increased strain is placed on ever-expanding food production. Following current population growth trends, the United Nation\u2019s Food and Agricultural Organization (FAO) predicts a required 70% growth in food production by 2050 to adequately match global needs. 1 As of 2020, 9.9% of the present human population faced undernourishment with an estimated 720 and 811 million humans going hungry. Continued reliance on current insufficient North American Agriculture practices will bolster inadequate access to nutrition. Seedstock.com divides problems with contemporary agricultural practices into categories including \u2026 Resource Depletion - The Costs of Industrial Agriculture Land Management - Degrading and Undervaluing Farmland Food Waste - Compromising Food Security Demographic Changes - A Disconnected Public Addressing the developing demand for food requires a direct confrontation with each of these four challenges and opens the door for sustainable alternatives to classic agricultural practices - massive potential for entrepreneurial pursuit. Aquaponics offers the potential to address the problems of contemporary agricultural practices whilst demonstrating scientific principles and modeling biological cycles for the education of a local community. \u201cAquaponics is a form of agriculture that combines raising fish in tanks (recirculating aquaculture) with soilless plant culture (hydroponics). In aquaponics, the nutrient-rich water from raising fish provides a natural fertilizer for the plants and the plants help to purify the water for the fish\u201d, and this is a sustainable method to both raise fish and grow crops. 2 Aquaponics System Diagrams Adaptable Aquaponics serves as a theoretical successor to my Assistive Aquaponics Fish Tank , a small-scale, self-sustaining ecosystem, with the hopes ofexpanding the accessibility of successful & thriving aquaponics ecosystems to individuals. While the Assistive Aquaponics Fish Tank is equipped to enable access to aquaponics at an individual level, economic optimization of the project came second to maintaining a sleek design hoping to catalyze in-house acceptance of the product. Adaptable Aquaponics offers some contrasting design choices with the goal of addressing all four categories of contemporary agricultural challenges and addressing the current bottlenecks of global nutrition. Both the Fusion 360 model and the prototyping mesh & SVG files for this project can be accessed via the button below. These files can be used and altered with attribution, as stated and enforced by my project license. In addition to the files included in this downloads folder, please note that Fusion 360 source files can be accessed with the Open in Fusion 360 button in the bottom right-hand corner of each of the embedded designs on this page. The renders of my Adaptable Aquaponics model utilize the Ulmer Muenster HDRI from polyhaven.com in their environment. Additionally, this model\u2019s Solar Panels , Water Pump & Casters are altered files from CAD libraries. Adaptable Aquaponics Files Make it Modular Adaptive Aquaponics is the scaled successor to my Assistive Aquaponics Fish Tank & my entry into Autodesk Instructable\u2019s Make It Modular student design scholarship. Be sure to check Adaptable Aquaponics out on instructables! CAD - Fusion 360 \u00b6 Being the theoretical successor to my Assistive Aquaponics Fish Tank , the CAD for Adaptable Aquaponics utilizes the same \u201cskeleton\u201d of a closed-loop water circulation system, incorporating a remixed version of my Assistive Aquaponics Fish Tank\u2019s plant box. Each \u201cAquaponics Cell\u201d in Adaptable Aquaponics (I\u2019ll touch on the distinction of these mentioned modules later in this section) contains eight individual plant boxes, each with a volume over two times as great as the smaller plant box of my Assistive Aquaponics Fish Tank . These up-scaled cells have been altered to ensure proper water flow at a larger scale, and are linked in series via several pipes to a Biofilter housed on the \u201cAquaponics Rack\u201d. Unlike in a small-scale ecosystem such as my Assistive Aquaponics Fish Tank , a biofilter is an essential component of a large-scale aquaponics setup. The filter expands the surface area of your system, providing ample space for the nitrogen cycle to occur. Following the Assistive Aquaponics Fish Tank once more, Adaptable Aquaponics is a cross between a Nutrient Film & Media Bed aquaponics system. As water is pumped into each plant box from the biofilter, it continuously flows along the sloping profile of the plant box\u2019s bed, passing through the plant roots, before exiting the plant box through a waterfall-esk exit slit & draining into the fish tank below. Plant beds & fish tanks are placed in an eight-to-one ratio in each \u201cAquaponics Cell\u201d, a stack in contrast to the small tank and one-to-one ratio of the Assistive Aquaponics Fish Tank . Opting for a larger fish tank increases the output efficiency of an aquaponics farm. Instead of being restrained to small-scale aquaculture (such as goldfish in my Assistive Aquaponics Fish Tank ), hardier fish such as Tilapia & Catfish can be farmed - making the food output of the farms even more efficient. Water is pumped out through a drain pipe at the bottom of each tank, flowing through a sediment tank located on the \u201cAquaponics Rack\u201d before into the water pump & then back into the biofilter. Parraling the system\u2019s inclusion of a larger tank for larger fish, a sediment tank is a must to free the system of excessive fish waste, allowing for maintained water clarity. Heavy waste carried in by the stream of water in the system will sink to the bottom of the sediment tank under conditions of low flow. The principle behind my design work on Adaptable Aquaponics parallels the \u201ccircles of progress\u201d model, where you begin by achieving the core minimum viable product, and expanding the diameter of your \u201ccircle\u201d, inflating your project with more layers of progress. Though this isn\u2019t my suggested approach to CAD, I found using the \u201ccircles of progress\u201d mindset useful while thinking of the modularity scales in my file. Aquaponics Cell Adaptable Aquaponics System Adaptable Aquaponics is constructed with layered modularity, a distinction highlighted by the component layering in my Fusion browser. Eight Individual plant boxes make up a single aquaponics cell, two aquaponics cells make up a single aquaponics rack, and two aquaponics racks are housed inside of a single shipping container. The scaling of modularity allows for application scaling to be applied to Adaptable Aquaponics. A single plant box could be used in the form factor of my Assistive Aquaponics Fish Tank , or multiple Adaptable Aquaponic Shipping Containers could be housed in parallel to allow for large-scale farming. Modularity in the case of Adaptable Aquaponics not only enables future iteration & reconfiguration but also the scaling of the ecosystem itself - meeting the needs of any potential consumers - ranging from individual to community. Computational Design \u00b6 Shifting to an analysis of the CAD work behind Adaptable Aquaponics, I was super stoked to get to experiment with Fusion 360\u2019s new Automated Modeling tool! I used automated modeling to generate an optimized vertical support structure for my systems aquaponics rack, as well as for the angled mounts for adaptable aquaponics solar panels. The tool can be found under the Automate menu in the toolbar. Automated modeling is about as intuitive as you can get, requiring only three inputs to generate a body - Faces to Connect , Bodies to Avoid & Operation type. I began the computational design work of my aquaponics rack outside of the automated modeling tool itself, but instead by creating both the top and bottom plates of my Aquaponics rack & attaching 6 mounting points to each sheet. Then, working around the prepositioned Aquaponics Cells, biofilter & sediment tank, I created shelves to hold the content of the racks, unattached to support. I then opened the automated modeling tool and selected the previously created mounting points on both the top and bottom plates as well as each shelf with the Faces to Connect selection tool. Note, that there are three individual vertical supports on each Aquaponics rack, so I selected a corresponding set of 1/3 of the total created faces for each automated operation. I moved on to the Bodies to Avoid selection tool, highlighting the components of each Aquaponics Cell, the biofilter & the sediment tank closest to the selected points of connection. I was careful here to only select crucial bodies to avoid, not all in the model - the fewer input selections, the faster computation time. With these selected inputs, I generated a design with a New Body operation. Bodies to Avoid are highlighted red, while Faces to Connect are highlighted in blue After ~10 Mins, the Automated Modeling menu presented me with 6 generated bodies under the Alternatives menu. You can click through these generated bodies to see them in the workspace, before finalizing your selection with the Ok button. I repeated this generation for the two other vertical supports on the Aquaponics Rack, choosing a visually similar generation between all three to keep consistency to the rack. Computationally designed bodies can also be seen in the solar panel mounts located on the roof of Adaptable Aquaponics. These bodies followed a similar workflow, where I connected the back face of each solar panel to pre-created mounting points. 3D Plumbing \u00b6 The complex spatial routing of Adaptable Aquaponics plumbing required the use of Fusion 360\u2019s ability to sketch non-planar line sand splines. To enable this feature, click on your user icon in the top right of the window & navigate to \u2026 Preferences < Design < Allow 3D sketching of lines and splines \u2026 and toggle this option on. Be sure to click Apply in the bottom right-hand corner of the Preferences menu before exiting. Fusion 360\u2019s non-planar sketching allows spline points to be removed from their initial sketch plane and routed to other planes. Once a point is placed on a 3D spline, Fusion allows for the alteration of direction in three dimensions before you place the next point. Beginning from the intake valve of each plant box, I routed a spline to a t-connector before using the Pipe tool with each routed spline as a reference - leaving me with all of the plant boxes in a given Aquaponics Cell routed in series. Additionally, 3D splines were used to route the plumbing from each fish tank to the sediment tank, from the sediment tank to the water pump, from the water pump to the biofilter, and from the biofilter back to the plant boxes. Rendering - Fusion 360 \u00b6 Once Adaptable Aquaponics was finalized - the 95th iteration \u2026 phew - I continued to Fusion 360\u2019s rendering workspace. I began by setting up the renders scene by navigating to \u2026 Setup < Scene Settings < Environment Library \u2026 where I chose to upload a custom HDRI backdrop. As mentioned earlier on this page, I chose the Ulmer Muenster HDRI from polyhaven.com as my backdrop, as the scene offers a compromise of beauty and urban (not that those are mutually exclusive) - preserving the largest of my envisioned use cases for Adaptable Aquaponics, urban farming (stay tuned for the next section!). Once my HDRI backdrop was uploaded, I navigated back to \u2026 Setup < Scene Settings \u2026 where I took a trial and error approach to tune the renders Environment, Ground & Camera settings until I was left with some nice looking renders! Check them out below! Addressing the Current Bottlenecks of Global Nutrition \u00b6 Resource Depletion - The Costs of Industrial Agriculture \u00b6 Contemporary agriculture is completely dependent on non-renewable materials. Dependence on fossil fuels is not only not a sustainable practice that is damaging our planet but jeopardizes the future of our agricultural stability. With rigid dependence, how do we expect to handle the extinction of a non-renewable? Adaptable Aquaponics offers a solar-powered solution, completely independent of any non-renewables & costly electric bills that hinder access in communities facing a scarcity of access. Though the elimination of dependencies is crucial to making Adaptable Aquaponics a sustainable solution to contemporary farming challenges, the vertical integration of the system offers a Carnegie-esk entrepreneurial venture, ensuring freedom from the potentially binding agreement for resources. Data from the US Geological Society shows rainfall patterns \u201cmay become less predictable and dependable\u201d, while the amount of groundwater \u201cdrawn for use in irrigation has tripled since the 1950s\u201d. 3 Though, unlike fossil fuels, water is a renewable resource, freshwater has its limits. Considering nearly 70% of all freshwater used by humans is used in agriculture, addressing water usage is a warranted concern. When compared to standard agricultural practices, Aquaponics requires 90 to 99% less water. 4 Similar to the potential lack of electricity access, Adaptive Aquaponics offers communities with a shortage or imposition in access to water a sustainable agricultural alternative, while also offering entrepreneurs another opportunity to continue to vertically integrate. Land Management - Degrading and Undervaluing Farmland \u00b6 Faulty land management techniques have stripped soil from its nutrients, requiring fertilizers to aid plant growth. The nature of aquaponics replaces any dependency on soil with nutrients from the nitrogen cycle - a naturally occurring ecosystem that can run independently from fertilizers. Adaptive Aquaponics\u2019 cross between a Nutrient Film & Media Bed aquaponics system preserves the dirt-free nature of hydroponics, whilst maintaining a small, modular structure of its plant boxes. The modular nature of adaptive aquaponics allows the system to potentially thrive regardless of scale and location, opening the door for urban farming! Food Waste & Demographic Changes \u00b6 The UN estimates that 1/3 \u201cof the world\u2019s food goes to waste, either during agricultural production, post-harvest handling, and storage, processing, distribution, or consumption\u201d. 3 The modular nature of Adaptive Aquaponics ensures adequate scaling of agriculture in a given population. The compacted form factor and potential for urban or harsh environment farming enable the growth of food locally to a population. Instead of depending on agricultural preservation, processing, storage, and distribution, providing a community with Adaptable Aquaponics enables full control over food production, ensuring neither over nor under production. Interaction with agriculture at a community scale may remove the barrier between farming communities and consumers and hopefully, will catalyze a shift from to favor \u201cconservation over convenience\u201d thus regulating agriculture to ensure adequate food is provided. 3 Scale Prototyping \u00b6 As has seemingly become a trend across my work, I attempted to use a plethora of digital fabrication in the creation of my scale model. My model is a 2.3% scale prototype of Adaptable Aquaponics, fabricated with both additive and subtractive processes. Shout out to @taimakestuff who was my lab buddy @makerspaceCharlotte while I ground out this project\u2019s post-processing :) Computationally designed elements utilize organic surveys to ensure optimal geometry for both strength and efficiency, thus the perfect partner for additive manufacturing. I opted to 3D print all elements of my scale model that utilized Fusion 360\u2019s Automated Modeling, including the shipping container with its solar panel mounts & Aquaponics Rack with its vertical supports. I also printed the contents of each aquaponics rack to achieve the highest accuracy to the draft angles and plumbing locations on the bodies. All parts for this project were printed on my Prusa I3 MK3S+ with a 0.4mm nozzle at a 0.3mm layer height. I chose a white PETG, along with a pretty aggressive layer height to allow for ease of post-processing & painting of the model. PETG is my go-to generic 3D printing material, however, it really shines when faced with post-processing. PETG takes well to sanding and is overall rather easy to clean up. One of my favorite tricks is taking hot air from a hair-dryer to a PETG printed part. The hot air shrivels any stringing or surface defects into masses that fall off after rubbing your finger over the surface. I was lucky enough to stumble across some gloss black acrylic in the scrap bin @makerspaceCharlotte , which I used to create Adaptable Aquaponic\u2019s solar panels. This was my first time using the lasers @makerspaceCharlotte , and the machine that I was on ran a different wattage than the lasers at the Charlotte Latin Fab Lab (my school\u2019s lab & my workplace) so I began with a bit of research into optimal cut settings. After altering the laser focus to achieve the desired (slightly thickened beam) effect, I began batch cutting the model solar panels. Note the other test cuts on the stock material above. Though for the sake of focusing on Adaptable Aquaponics and not the prototyping process I\u2019ve chosen to not mention much of the prototyping behind this physical model. I usually include ample prototyping content in my articles, so it felt necessary to call attention to the test cuts here :) I cleaned up the final cut parts with some soap and water, before continuing to attach each solar panel to its 3D printed mount & then to the roof of the Adaptable Aquaponics shipping container. I followed up my acrylic cutting with the wooden base and top to each Aquaponics Rack. Unfortunately, I didn\u2019t have access to any 1/8\u201d ply, so I had to do some prep work with a piece of 1/4\u201d plywood stock. I planned the surface of my stock material on a drum-sander until down to just below 1/8\u201d. I then focused the laser to this stock & cut all four planks. The glue up of these shelves was a bit finicky, as my fingers just seem to be a super glue magnet - but eventually, I got both Aquaponics Racks complete with their plants, vertical support, shelves, Aquaponics Cells, biofilter & sediment tank, and then installed them inside the shipping container. As a finishing touch, I used a Cricut Explore Air 2 to cut the sign attached to the side of Adaptable Aquaponics from vinyl. Though I\u2019ve made dozens upon dozens of stickers with the same workflow, the scale of this logo proved to be a bit of a challenge. I not only had difficulties weeding the cut vinyl at such a small scale, but the machine itself was ripping up parts of the design upon retraction. I ended up altering the cut settings to a custom array as suggested by sofontsy.com , using the Washi Sheet default with a pressure set to More. With these settings, I was able to get a clean enough cut that I could weed the sticker, layer the two colors, and then apply to the side of the Adaptable Aquaponics model. Glory Shots \u00b6 With the design and prototyping completed, I headed out to my local strip mall for a photo op, only getting a couple of strange looks from shoppers wondering what the boy in the old-navy pajama pants was doing taking pictures of a miniature in the middle of the parking lot. But it was worth it! As opposed to settling for a diorama background, or just pictures of my model on my workbench, I highlighted a legitimate potential environment for such a product, and I promise you, when Adaptable Aquaponics hits full scale in a parking lot, the shoppers won\u2019t be blown away by my magnificent fashion choices, but instead by the wonders of Aquaponics! https://www.un.org/en/global-issues/food \u21a9 https://aquaponics.com/ \u21a9 http://seedstock.com/2012/04/18/five-major-challenges-facing-north-american-agriculture/ \u21a9 \u21a9 \u21a9 https://earth.org/data_visualization/aquaponics-a-solution-to-food-insecurity/ \u21a9","title":"Adaptable Aquaponics"},{"location":"Projects/AdaptableAquaponics/#adaptable-aquaponics","text":"Teddy Warner | Senior Year - 2022 | 18-23 minutes A Theoretical Confrontation to Contemporary Farming Challenges. Paralleling the growth of the global human population, the increased strain is placed on ever-expanding food production. Following current population growth trends, the United Nation\u2019s Food and Agricultural Organization (FAO) predicts a required 70% growth in food production by 2050 to adequately match global needs. 1 As of 2020, 9.9% of the present human population faced undernourishment with an estimated 720 and 811 million humans going hungry. Continued reliance on current insufficient North American Agriculture practices will bolster inadequate access to nutrition. Seedstock.com divides problems with contemporary agricultural practices into categories including \u2026 Resource Depletion - The Costs of Industrial Agriculture Land Management - Degrading and Undervaluing Farmland Food Waste - Compromising Food Security Demographic Changes - A Disconnected Public Addressing the developing demand for food requires a direct confrontation with each of these four challenges and opens the door for sustainable alternatives to classic agricultural practices - massive potential for entrepreneurial pursuit. Aquaponics offers the potential to address the problems of contemporary agricultural practices whilst demonstrating scientific principles and modeling biological cycles for the education of a local community. \u201cAquaponics is a form of agriculture that combines raising fish in tanks (recirculating aquaculture) with soilless plant culture (hydroponics). In aquaponics, the nutrient-rich water from raising fish provides a natural fertilizer for the plants and the plants help to purify the water for the fish\u201d, and this is a sustainable method to both raise fish and grow crops. 2 Aquaponics System Diagrams Adaptable Aquaponics serves as a theoretical successor to my Assistive Aquaponics Fish Tank , a small-scale, self-sustaining ecosystem, with the hopes ofexpanding the accessibility of successful & thriving aquaponics ecosystems to individuals. While the Assistive Aquaponics Fish Tank is equipped to enable access to aquaponics at an individual level, economic optimization of the project came second to maintaining a sleek design hoping to catalyze in-house acceptance of the product. Adaptable Aquaponics offers some contrasting design choices with the goal of addressing all four categories of contemporary agricultural challenges and addressing the current bottlenecks of global nutrition. Both the Fusion 360 model and the prototyping mesh & SVG files for this project can be accessed via the button below. These files can be used and altered with attribution, as stated and enforced by my project license. In addition to the files included in this downloads folder, please note that Fusion 360 source files can be accessed with the Open in Fusion 360 button in the bottom right-hand corner of each of the embedded designs on this page. The renders of my Adaptable Aquaponics model utilize the Ulmer Muenster HDRI from polyhaven.com in their environment. Additionally, this model\u2019s Solar Panels , Water Pump & Casters are altered files from CAD libraries. Adaptable Aquaponics Files Make it Modular Adaptive Aquaponics is the scaled successor to my Assistive Aquaponics Fish Tank & my entry into Autodesk Instructable\u2019s Make It Modular student design scholarship. Be sure to check Adaptable Aquaponics out on instructables!","title":"Adaptable Aquaponics"},{"location":"Projects/AdaptableAquaponics/#cad-fusion-360","text":"Being the theoretical successor to my Assistive Aquaponics Fish Tank , the CAD for Adaptable Aquaponics utilizes the same \u201cskeleton\u201d of a closed-loop water circulation system, incorporating a remixed version of my Assistive Aquaponics Fish Tank\u2019s plant box. Each \u201cAquaponics Cell\u201d in Adaptable Aquaponics (I\u2019ll touch on the distinction of these mentioned modules later in this section) contains eight individual plant boxes, each with a volume over two times as great as the smaller plant box of my Assistive Aquaponics Fish Tank . These up-scaled cells have been altered to ensure proper water flow at a larger scale, and are linked in series via several pipes to a Biofilter housed on the \u201cAquaponics Rack\u201d. Unlike in a small-scale ecosystem such as my Assistive Aquaponics Fish Tank , a biofilter is an essential component of a large-scale aquaponics setup. The filter expands the surface area of your system, providing ample space for the nitrogen cycle to occur. Following the Assistive Aquaponics Fish Tank once more, Adaptable Aquaponics is a cross between a Nutrient Film & Media Bed aquaponics system. As water is pumped into each plant box from the biofilter, it continuously flows along the sloping profile of the plant box\u2019s bed, passing through the plant roots, before exiting the plant box through a waterfall-esk exit slit & draining into the fish tank below. Plant beds & fish tanks are placed in an eight-to-one ratio in each \u201cAquaponics Cell\u201d, a stack in contrast to the small tank and one-to-one ratio of the Assistive Aquaponics Fish Tank . Opting for a larger fish tank increases the output efficiency of an aquaponics farm. Instead of being restrained to small-scale aquaculture (such as goldfish in my Assistive Aquaponics Fish Tank ), hardier fish such as Tilapia & Catfish can be farmed - making the food output of the farms even more efficient. Water is pumped out through a drain pipe at the bottom of each tank, flowing through a sediment tank located on the \u201cAquaponics Rack\u201d before into the water pump & then back into the biofilter. Parraling the system\u2019s inclusion of a larger tank for larger fish, a sediment tank is a must to free the system of excessive fish waste, allowing for maintained water clarity. Heavy waste carried in by the stream of water in the system will sink to the bottom of the sediment tank under conditions of low flow. The principle behind my design work on Adaptable Aquaponics parallels the \u201ccircles of progress\u201d model, where you begin by achieving the core minimum viable product, and expanding the diameter of your \u201ccircle\u201d, inflating your project with more layers of progress. Though this isn\u2019t my suggested approach to CAD, I found using the \u201ccircles of progress\u201d mindset useful while thinking of the modularity scales in my file. Aquaponics Cell Adaptable Aquaponics System Adaptable Aquaponics is constructed with layered modularity, a distinction highlighted by the component layering in my Fusion browser. Eight Individual plant boxes make up a single aquaponics cell, two aquaponics cells make up a single aquaponics rack, and two aquaponics racks are housed inside of a single shipping container. The scaling of modularity allows for application scaling to be applied to Adaptable Aquaponics. A single plant box could be used in the form factor of my Assistive Aquaponics Fish Tank , or multiple Adaptable Aquaponic Shipping Containers could be housed in parallel to allow for large-scale farming. Modularity in the case of Adaptable Aquaponics not only enables future iteration & reconfiguration but also the scaling of the ecosystem itself - meeting the needs of any potential consumers - ranging from individual to community.","title":"CAD - Fusion 360"},{"location":"Projects/AdaptableAquaponics/#computational-design","text":"Shifting to an analysis of the CAD work behind Adaptable Aquaponics, I was super stoked to get to experiment with Fusion 360\u2019s new Automated Modeling tool! I used automated modeling to generate an optimized vertical support structure for my systems aquaponics rack, as well as for the angled mounts for adaptable aquaponics solar panels. The tool can be found under the Automate menu in the toolbar. Automated modeling is about as intuitive as you can get, requiring only three inputs to generate a body - Faces to Connect , Bodies to Avoid & Operation type. I began the computational design work of my aquaponics rack outside of the automated modeling tool itself, but instead by creating both the top and bottom plates of my Aquaponics rack & attaching 6 mounting points to each sheet. Then, working around the prepositioned Aquaponics Cells, biofilter & sediment tank, I created shelves to hold the content of the racks, unattached to support. I then opened the automated modeling tool and selected the previously created mounting points on both the top and bottom plates as well as each shelf with the Faces to Connect selection tool. Note, that there are three individual vertical supports on each Aquaponics rack, so I selected a corresponding set of 1/3 of the total created faces for each automated operation. I moved on to the Bodies to Avoid selection tool, highlighting the components of each Aquaponics Cell, the biofilter & the sediment tank closest to the selected points of connection. I was careful here to only select crucial bodies to avoid, not all in the model - the fewer input selections, the faster computation time. With these selected inputs, I generated a design with a New Body operation. Bodies to Avoid are highlighted red, while Faces to Connect are highlighted in blue After ~10 Mins, the Automated Modeling menu presented me with 6 generated bodies under the Alternatives menu. You can click through these generated bodies to see them in the workspace, before finalizing your selection with the Ok button. I repeated this generation for the two other vertical supports on the Aquaponics Rack, choosing a visually similar generation between all three to keep consistency to the rack. Computationally designed bodies can also be seen in the solar panel mounts located on the roof of Adaptable Aquaponics. These bodies followed a similar workflow, where I connected the back face of each solar panel to pre-created mounting points.","title":"Computational Design"},{"location":"Projects/AdaptableAquaponics/#3d-plumbing","text":"The complex spatial routing of Adaptable Aquaponics plumbing required the use of Fusion 360\u2019s ability to sketch non-planar line sand splines. To enable this feature, click on your user icon in the top right of the window & navigate to \u2026 Preferences < Design < Allow 3D sketching of lines and splines \u2026 and toggle this option on. Be sure to click Apply in the bottom right-hand corner of the Preferences menu before exiting. Fusion 360\u2019s non-planar sketching allows spline points to be removed from their initial sketch plane and routed to other planes. Once a point is placed on a 3D spline, Fusion allows for the alteration of direction in three dimensions before you place the next point. Beginning from the intake valve of each plant box, I routed a spline to a t-connector before using the Pipe tool with each routed spline as a reference - leaving me with all of the plant boxes in a given Aquaponics Cell routed in series. Additionally, 3D splines were used to route the plumbing from each fish tank to the sediment tank, from the sediment tank to the water pump, from the water pump to the biofilter, and from the biofilter back to the plant boxes.","title":"3D Plumbing"},{"location":"Projects/AdaptableAquaponics/#rendering-fusion-360","text":"Once Adaptable Aquaponics was finalized - the 95th iteration \u2026 phew - I continued to Fusion 360\u2019s rendering workspace. I began by setting up the renders scene by navigating to \u2026 Setup < Scene Settings < Environment Library \u2026 where I chose to upload a custom HDRI backdrop. As mentioned earlier on this page, I chose the Ulmer Muenster HDRI from polyhaven.com as my backdrop, as the scene offers a compromise of beauty and urban (not that those are mutually exclusive) - preserving the largest of my envisioned use cases for Adaptable Aquaponics, urban farming (stay tuned for the next section!). Once my HDRI backdrop was uploaded, I navigated back to \u2026 Setup < Scene Settings \u2026 where I took a trial and error approach to tune the renders Environment, Ground & Camera settings until I was left with some nice looking renders! Check them out below!","title":"Rendering - Fusion 360"},{"location":"Projects/AdaptableAquaponics/#addressing-the-current-bottlenecks-of-global-nutrition","text":"","title":"Addressing the Current Bottlenecks of Global Nutrition"},{"location":"Projects/AdaptableAquaponics/#resource-depletion-the-costs-of-industrial-agriculture","text":"Contemporary agriculture is completely dependent on non-renewable materials. Dependence on fossil fuels is not only not a sustainable practice that is damaging our planet but jeopardizes the future of our agricultural stability. With rigid dependence, how do we expect to handle the extinction of a non-renewable? Adaptable Aquaponics offers a solar-powered solution, completely independent of any non-renewables & costly electric bills that hinder access in communities facing a scarcity of access. Though the elimination of dependencies is crucial to making Adaptable Aquaponics a sustainable solution to contemporary farming challenges, the vertical integration of the system offers a Carnegie-esk entrepreneurial venture, ensuring freedom from the potentially binding agreement for resources. Data from the US Geological Society shows rainfall patterns \u201cmay become less predictable and dependable\u201d, while the amount of groundwater \u201cdrawn for use in irrigation has tripled since the 1950s\u201d. 3 Though, unlike fossil fuels, water is a renewable resource, freshwater has its limits. Considering nearly 70% of all freshwater used by humans is used in agriculture, addressing water usage is a warranted concern. When compared to standard agricultural practices, Aquaponics requires 90 to 99% less water. 4 Similar to the potential lack of electricity access, Adaptive Aquaponics offers communities with a shortage or imposition in access to water a sustainable agricultural alternative, while also offering entrepreneurs another opportunity to continue to vertically integrate.","title":"Resource Depletion - The Costs of Industrial Agriculture"},{"location":"Projects/AdaptableAquaponics/#land-management-degrading-and-undervaluing-farmland","text":"Faulty land management techniques have stripped soil from its nutrients, requiring fertilizers to aid plant growth. The nature of aquaponics replaces any dependency on soil with nutrients from the nitrogen cycle - a naturally occurring ecosystem that can run independently from fertilizers. Adaptive Aquaponics\u2019 cross between a Nutrient Film & Media Bed aquaponics system preserves the dirt-free nature of hydroponics, whilst maintaining a small, modular structure of its plant boxes. The modular nature of adaptive aquaponics allows the system to potentially thrive regardless of scale and location, opening the door for urban farming!","title":"Land Management - Degrading and Undervaluing Farmland"},{"location":"Projects/AdaptableAquaponics/#food-waste-demographic-changes","text":"The UN estimates that 1/3 \u201cof the world\u2019s food goes to waste, either during agricultural production, post-harvest handling, and storage, processing, distribution, or consumption\u201d. 3 The modular nature of Adaptive Aquaponics ensures adequate scaling of agriculture in a given population. The compacted form factor and potential for urban or harsh environment farming enable the growth of food locally to a population. Instead of depending on agricultural preservation, processing, storage, and distribution, providing a community with Adaptable Aquaponics enables full control over food production, ensuring neither over nor under production. Interaction with agriculture at a community scale may remove the barrier between farming communities and consumers and hopefully, will catalyze a shift from to favor \u201cconservation over convenience\u201d thus regulating agriculture to ensure adequate food is provided. 3","title":"Food Waste &amp; Demographic Changes"},{"location":"Projects/AdaptableAquaponics/#scale-prototyping","text":"As has seemingly become a trend across my work, I attempted to use a plethora of digital fabrication in the creation of my scale model. My model is a 2.3% scale prototype of Adaptable Aquaponics, fabricated with both additive and subtractive processes. Shout out to @taimakestuff who was my lab buddy @makerspaceCharlotte while I ground out this project\u2019s post-processing :) Computationally designed elements utilize organic surveys to ensure optimal geometry for both strength and efficiency, thus the perfect partner for additive manufacturing. I opted to 3D print all elements of my scale model that utilized Fusion 360\u2019s Automated Modeling, including the shipping container with its solar panel mounts & Aquaponics Rack with its vertical supports. I also printed the contents of each aquaponics rack to achieve the highest accuracy to the draft angles and plumbing locations on the bodies. All parts for this project were printed on my Prusa I3 MK3S+ with a 0.4mm nozzle at a 0.3mm layer height. I chose a white PETG, along with a pretty aggressive layer height to allow for ease of post-processing & painting of the model. PETG is my go-to generic 3D printing material, however, it really shines when faced with post-processing. PETG takes well to sanding and is overall rather easy to clean up. One of my favorite tricks is taking hot air from a hair-dryer to a PETG printed part. The hot air shrivels any stringing or surface defects into masses that fall off after rubbing your finger over the surface. I was lucky enough to stumble across some gloss black acrylic in the scrap bin @makerspaceCharlotte , which I used to create Adaptable Aquaponic\u2019s solar panels. This was my first time using the lasers @makerspaceCharlotte , and the machine that I was on ran a different wattage than the lasers at the Charlotte Latin Fab Lab (my school\u2019s lab & my workplace) so I began with a bit of research into optimal cut settings. After altering the laser focus to achieve the desired (slightly thickened beam) effect, I began batch cutting the model solar panels. Note the other test cuts on the stock material above. Though for the sake of focusing on Adaptable Aquaponics and not the prototyping process I\u2019ve chosen to not mention much of the prototyping behind this physical model. I usually include ample prototyping content in my articles, so it felt necessary to call attention to the test cuts here :) I cleaned up the final cut parts with some soap and water, before continuing to attach each solar panel to its 3D printed mount & then to the roof of the Adaptable Aquaponics shipping container. I followed up my acrylic cutting with the wooden base and top to each Aquaponics Rack. Unfortunately, I didn\u2019t have access to any 1/8\u201d ply, so I had to do some prep work with a piece of 1/4\u201d plywood stock. I planned the surface of my stock material on a drum-sander until down to just below 1/8\u201d. I then focused the laser to this stock & cut all four planks. The glue up of these shelves was a bit finicky, as my fingers just seem to be a super glue magnet - but eventually, I got both Aquaponics Racks complete with their plants, vertical support, shelves, Aquaponics Cells, biofilter & sediment tank, and then installed them inside the shipping container. As a finishing touch, I used a Cricut Explore Air 2 to cut the sign attached to the side of Adaptable Aquaponics from vinyl. Though I\u2019ve made dozens upon dozens of stickers with the same workflow, the scale of this logo proved to be a bit of a challenge. I not only had difficulties weeding the cut vinyl at such a small scale, but the machine itself was ripping up parts of the design upon retraction. I ended up altering the cut settings to a custom array as suggested by sofontsy.com , using the Washi Sheet default with a pressure set to More. With these settings, I was able to get a clean enough cut that I could weed the sticker, layer the two colors, and then apply to the side of the Adaptable Aquaponics model.","title":"Scale Prototyping"},{"location":"Projects/AdaptableAquaponics/#glory-shots","text":"With the design and prototyping completed, I headed out to my local strip mall for a photo op, only getting a couple of strange looks from shoppers wondering what the boy in the old-navy pajama pants was doing taking pictures of a miniature in the middle of the parking lot. But it was worth it! As opposed to settling for a diorama background, or just pictures of my model on my workbench, I highlighted a legitimate potential environment for such a product, and I promise you, when Adaptable Aquaponics hits full scale in a parking lot, the shoppers won\u2019t be blown away by my magnificent fashion choices, but instead by the wonders of Aquaponics! https://www.un.org/en/global-issues/food \u21a9 https://aquaponics.com/ \u21a9 http://seedstock.com/2012/04/18/five-major-challenges-facing-north-american-agriculture/ \u21a9 \u21a9 \u21a9 https://earth.org/data_visualization/aquaponics-a-solution-to-food-insecurity/ \u21a9","title":"Glory Shots"},{"location":"Projects/AssistiveAquaponics/","tags":["Software","CAD","Fusion 360","Inkscape","Autodesk Eagle","CNC","3D Printing","PCB","Laser Cutting","Microcontroller"],"text":".profilepic { display: inline; float: left; margin-top: -7px; width: 35px; height: 34px; border-radius: 50%; } .abtlinks a { color: var(--md-default-fg-color); } .share { float:right; margin-top: 0px; font-size: 1.1em; } .share a { color: inherit; } .twitter { padding-left: 0.2em; padding-right: 0.2em; } .share a.twitter:hover { color: #00acee; } .fb { padding-left: 0.2em; padding-right: 0.2em; } .share a.fb:hover { color: #3b5998; } .pin { padding-left: 0.2em; padding-right: 0.2em; } .share a.pin:hover { color: #E60023; } .ln { padding-left: 0.2em; padding-right: 0.2em; } .share a.ln:hover { color: #0e76a8; } .email { padding-left: 0.2em; padding-right: 1.5em; } @media (max-width: 40.55384615384616em) { .share { margin-top: -3.5em; margin-right: -1.4em; } } @media (max-width: 37.4em) { .share { margin-top: -4.8em; margin-right: -1.4em; } } @media (max-width: 35em) { .year { display: none; } .share { font-size: 1em; margin-top: 0.05em; margin-right: -1.5em; } } @media (max-width: 28em) { .profilepic { margin-top: -4.5px; width: 30px; height: 30px; } .abtlinks { font-size: 0.9em; } .year { display: none; } .share { font-size: 0.9em; margin-top: 0.05em; margin-right: -1.5em; } } Assistive Aquaponics Fish Tank \u00b6 Teddy Warner | Sophmore Year - 2021 | 1-2 minutes The Assistive Aquaponics Fish Tank was my final project masterpiece during my cycle in Fab Academy . The tank is made with a combination of digital fabrication tools and modern fabrication mediums including 3D Printing CNC Milling Laser Cutting/Engraving PCB Design & Milling SMD Soldering And Lots and Lots of CAD Design Compleate Project Documentation In an attempt to save some repo space, only a presentation slide and video of my Assistive Aquaponics Fish Tank are displayed on this page, however, a complete documentation of this project can be read on my Fab Academy site linked in the button below, as well as in the header of this site. Fab Academy 2021 - Assistive Aquaponics Fish Tank","title":"Assistive Aquaponics Fish Tank"},{"location":"Projects/AssistiveAquaponics/#assistive-aquaponics-fish-tank","text":"Teddy Warner | Sophmore Year - 2021 | 1-2 minutes The Assistive Aquaponics Fish Tank was my final project masterpiece during my cycle in Fab Academy . The tank is made with a combination of digital fabrication tools and modern fabrication mediums including 3D Printing CNC Milling Laser Cutting/Engraving PCB Design & Milling SMD Soldering And Lots and Lots of CAD Design Compleate Project Documentation In an attempt to save some repo space, only a presentation slide and video of my Assistive Aquaponics Fish Tank are displayed on this page, however, a complete documentation of this project can be read on my Fab Academy site linked in the button below, as well as in the header of this site. Fab Academy 2021 - Assistive Aquaponics Fish Tank","title":"Assistive Aquaponics Fish Tank"},{"location":"Projects/CornerDesk/","tags":["CAD","Fusion 360","Hand Tools"],"text":".profilepic { display: inline; float: left; margin-top: -7px; width: 35px; height: 34px; border-radius: 50%; } .abtlinks a { color: var(--md-default-fg-color); } .share { float:right; margin-top: 0px; font-size: 1.1em; } .share a { color: inherit; } .twitter { padding-left: 0.2em; padding-right: 0.2em; } .share a.twitter:hover { color: #00acee; } .fb { padding-left: 0.2em; padding-right: 0.2em; } .share a.fb:hover { color: #3b5998; } .pin { padding-left: 0.2em; padding-right: 0.2em; } .share a.pin:hover { color: #E60023; } .ln { padding-left: 0.2em; padding-right: 0.2em; } .share a.ln:hover { color: #0e76a8; } .email { padding-left: 0.2em; padding-right: 1.5em; } @media (max-width: 40.55384615384616em) { .share { margin-top: -3.5em; margin-right: -1.4em; } } @media (max-width: 37.4em) { .share { margin-top: -4.8em; margin-right: -1.4em; } } @media (max-width: 35em) { .year { display: none; } .share { font-size: 1em; margin-top: 0.05em; margin-right: -1.5em; } } @media (max-width: 28em) { .profilepic { margin-top: -4.5px; width: 30px; height: 30px; } .abtlinks { font-size: 0.9em; } .year { display: none; } .share { font-size: 0.9em; margin-top: 0.05em; margin-right: -1.5em; } } Cable Managed Corner Desk \u00b6 Teddy Warner | Freshman Year - 2020 | 6-8 minutes This start of the Pandemic project stemmed from my freshman year engineering capstone project. At the start of 8th grade I had an issue, I was a couple of months into learning Fusion360 and I decided to upgrade my setup from an old janky pc to a brand new laptop and some 20-inch monitors to go along with it, which was great and all but gave me a whole tone of issues to sort out. I had this great desk in the corner of my room, that my great grandfather built and that had been passed down to me, however, there was one huge flaw using that desk with my brand new setup and that was cable management. Below are some plans draw out for the desk. CAD Design \u00b6 So I set off in Fusion to design a desk that fit all of my needs. My goals were to have a desk measured to fit perfectly in the corner of my room, with plenty of legroom so I would never hit my knees on it, and the best cable management imaginable. And after a couple of different iterations, I came up with this Model. Lowes Trip and New Tool \u00b6 However shortly after finishing up the CAD aspect of this project, Covid-19 caused our school to resort to online learning, cutting me off from our school\u2019s lab equipment, however, I happen to have a lot of the tools we have in our lab in my little workshop at my house, and I was pretty determined to finish the desk, so just before everything closed down I took a trip to lowes to pick up some lumber and supplies. I settled on a frame and cabinet of 2x4s and some plywood that was painted white pretty quickly, but the top took some more thought. Eventually, I decided to make the top out of cedar planks that were stained with Provincial to match the stain of the floor in my room. Also at lowes, I picked up a Kreg-Jig to drill pocket holes for the desk, as I didn\u2019t like the idea of screws being visible. It was my first time using a Kreg-Jig but it went super well as it\u2019s a relatively simple jig to use. Building Process \u00b6 A couple of days after getting the wood, I finally started assembling the desk, starting by laying down the frame, making sure the front 2x4 was flat and the back was upright (to give more leg space) and I was pretty excited to get the whole thing together. Maybe a little too excited because even though you can\u2019t tell from the pictures above, I built the whole desk wrong, putting the corner on the wrong side. This was a huge setback to fix as it meant that I would have to take the entire desk apart, use wood filler on all of the newly exposed holes, and build it back up the right way. I was even considering just leave the desk as is, and rearrange my room to match the flaw, however, I wanted my desk to be perfect and that meant fixing it according to my CAD model. So I did the laborious tasks listed above and finished the frame of the desk the right way late that night. The next day I was ready to do some more on of the desk, so I decided to start throwing together the top. I spent that whole day sawing, planning, and sanding the cedar before I put the top together using the Kreg-Jig the next morning. And this time I didn\u2019t make a single mistake, and I\u2019m really happy with the result. Painting and Staining \u00b6 I spent the next two days painting the frame with three coats of white paint and staining the cedar with Provincial. Stained Desktop Assembling the Desk \u00b6 As I said earlier the choice of wood for the surface of the desk took some thought, but I\u2019m super glad I went the cedar route. Originally I was planning on using oak, but the cost scared me away to a much better smelling and looking cedar. My only concern with this type of wood was how much it expands and contracts. I was concerned that screwing a cedar top to my frame would just wiggle itself loose over time and cause issues. So I came up with a workaround. Instead of attaching the Cedar top directly to the frame, it\u2019s held by 3d Printed mounts that allow the top to expand and contract a whole lot more without becoming loose. I\u2019m super happy I took the time to figure this one out as it\u2019s going to save me trouble with using cedar in the long run. Cable Management \u00b6 This is a huge part of the project as it\u2019s one of the reasons I decided to even build a new desk in the first place. After attaching the top of the desk to the frame, I threw on this great air spring laptop mount that routs all of the cables from my laptop through a grommet in the top on the table, down to the corner cabinet. The cabinet is designed with a false top that hides all of the cables (except for two going to the subwoofer on a lower shelf) from inside the cabinet. Then the cables are routed through a hole in the back and ran through 3d printed cable clips on the back of the desk. The cable clips are exactly as long as the trim of our floor is, so they don\u2019t push the desk off the wall any more than it needs to be. All of the cables are then ran to where their needed (i.e monitors, speakers, keyboard, google home, etc.). Finally, all of the power cables are ran back into the top of that corner cabinet and plugged into a built-in power strip, which plugs into a wall socket directly to the left of the cabinet, hiding all the cables from view. Final Thoughts \u00b6 I love how my desk came out, It solves all of my annoying cable issues and fits perfectly in the right corner of my room. Eventually, I\u2019m planning on wall mounting my monitors to give me even more desk space, however, the little corner piece gives me a perfect location to use a pen and some paper and write things out. Putting the desk in its place, I realized that there was way too much space above it and after some browsing, I found some shelves on amazon that use the same stain and match perfectly, so I ordered and installed those over the desk. This project we surprisingly smoothly in the face of the current Pandemic, and even with my building setbacks came out well. Final Desk Beauty Shot","title":"Cable Managed Corner Desk"},{"location":"Projects/CornerDesk/#cable-managed-corner-desk","text":"Teddy Warner | Freshman Year - 2020 | 6-8 minutes This start of the Pandemic project stemmed from my freshman year engineering capstone project. At the start of 8th grade I had an issue, I was a couple of months into learning Fusion360 and I decided to upgrade my setup from an old janky pc to a brand new laptop and some 20-inch monitors to go along with it, which was great and all but gave me a whole tone of issues to sort out. I had this great desk in the corner of my room, that my great grandfather built and that had been passed down to me, however, there was one huge flaw using that desk with my brand new setup and that was cable management. Below are some plans draw out for the desk.","title":"Cable Managed Corner Desk"},{"location":"Projects/CornerDesk/#cad-design","text":"So I set off in Fusion to design a desk that fit all of my needs. My goals were to have a desk measured to fit perfectly in the corner of my room, with plenty of legroom so I would never hit my knees on it, and the best cable management imaginable. And after a couple of different iterations, I came up with this Model.","title":"CAD Design"},{"location":"Projects/CornerDesk/#lowes-trip-and-new-tool","text":"However shortly after finishing up the CAD aspect of this project, Covid-19 caused our school to resort to online learning, cutting me off from our school\u2019s lab equipment, however, I happen to have a lot of the tools we have in our lab in my little workshop at my house, and I was pretty determined to finish the desk, so just before everything closed down I took a trip to lowes to pick up some lumber and supplies. I settled on a frame and cabinet of 2x4s and some plywood that was painted white pretty quickly, but the top took some more thought. Eventually, I decided to make the top out of cedar planks that were stained with Provincial to match the stain of the floor in my room. Also at lowes, I picked up a Kreg-Jig to drill pocket holes for the desk, as I didn\u2019t like the idea of screws being visible. It was my first time using a Kreg-Jig but it went super well as it\u2019s a relatively simple jig to use.","title":"Lowes Trip and New Tool"},{"location":"Projects/CornerDesk/#building-process","text":"A couple of days after getting the wood, I finally started assembling the desk, starting by laying down the frame, making sure the front 2x4 was flat and the back was upright (to give more leg space) and I was pretty excited to get the whole thing together. Maybe a little too excited because even though you can\u2019t tell from the pictures above, I built the whole desk wrong, putting the corner on the wrong side. This was a huge setback to fix as it meant that I would have to take the entire desk apart, use wood filler on all of the newly exposed holes, and build it back up the right way. I was even considering just leave the desk as is, and rearrange my room to match the flaw, however, I wanted my desk to be perfect and that meant fixing it according to my CAD model. So I did the laborious tasks listed above and finished the frame of the desk the right way late that night. The next day I was ready to do some more on of the desk, so I decided to start throwing together the top. I spent that whole day sawing, planning, and sanding the cedar before I put the top together using the Kreg-Jig the next morning. And this time I didn\u2019t make a single mistake, and I\u2019m really happy with the result.","title":"Building Process"},{"location":"Projects/CornerDesk/#painting-and-staining","text":"I spent the next two days painting the frame with three coats of white paint and staining the cedar with Provincial. Stained Desktop","title":"Painting and Staining"},{"location":"Projects/CornerDesk/#assembling-the-desk","text":"As I said earlier the choice of wood for the surface of the desk took some thought, but I\u2019m super glad I went the cedar route. Originally I was planning on using oak, but the cost scared me away to a much better smelling and looking cedar. My only concern with this type of wood was how much it expands and contracts. I was concerned that screwing a cedar top to my frame would just wiggle itself loose over time and cause issues. So I came up with a workaround. Instead of attaching the Cedar top directly to the frame, it\u2019s held by 3d Printed mounts that allow the top to expand and contract a whole lot more without becoming loose. I\u2019m super happy I took the time to figure this one out as it\u2019s going to save me trouble with using cedar in the long run.","title":"Assembling the Desk"},{"location":"Projects/CornerDesk/#cable-management","text":"This is a huge part of the project as it\u2019s one of the reasons I decided to even build a new desk in the first place. After attaching the top of the desk to the frame, I threw on this great air spring laptop mount that routs all of the cables from my laptop through a grommet in the top on the table, down to the corner cabinet. The cabinet is designed with a false top that hides all of the cables (except for two going to the subwoofer on a lower shelf) from inside the cabinet. Then the cables are routed through a hole in the back and ran through 3d printed cable clips on the back of the desk. The cable clips are exactly as long as the trim of our floor is, so they don\u2019t push the desk off the wall any more than it needs to be. All of the cables are then ran to where their needed (i.e monitors, speakers, keyboard, google home, etc.). Finally, all of the power cables are ran back into the top of that corner cabinet and plugged into a built-in power strip, which plugs into a wall socket directly to the left of the cabinet, hiding all the cables from view.","title":"Cable Management"},{"location":"Projects/CornerDesk/#final-thoughts","text":"I love how my desk came out, It solves all of my annoying cable issues and fits perfectly in the right corner of my room. Eventually, I\u2019m planning on wall mounting my monitors to give me even more desk space, however, the little corner piece gives me a perfect location to use a pen and some paper and write things out. Putting the desk in its place, I realized that there was way too much space above it and after some browsing, I found some shelves on amazon that use the same stain and match perfectly, so I ordered and installed those over the desk. This project we surprisingly smoothly in the face of the current Pandemic, and even with my building setbacks came out well. Final Desk Beauty Shot","title":"Final Thoughts"},{"location":"Projects/KlipperEnder3/","tags":["Software","Electronics","3D Printing","Raspberry Pi"],"text":".profilepic { display: inline; float: left; margin-top: -7px; width: 35px; height: 34px; border-radius: 50%; } .abtlinks a { color: var(--md-default-fg-color); } .share { float:right; margin-top: 0px; font-size: 1.1em; } .share a { color: inherit; } .twitter { padding-left: 0.2em; padding-right: 0.2em; } .share a.twitter:hover { color: #00acee; } .fb { padding-left: 0.2em; padding-right: 0.2em; } .share a.fb:hover { color: #3b5998; } .pin { padding-left: 0.2em; padding-right: 0.2em; } .share a.pin:hover { color: #E60023; } .ln { padding-left: 0.2em; padding-right: 0.2em; } .share a.ln:hover { color: #0e76a8; } .email { padding-left: 0.2em; padding-right: 1.5em; } @media (max-width: 40.55384615384616em) { .share { margin-top: -3.5em; margin-right: -1.4em; } } @media (max-width: 37.4em) { .share { margin-top: -4.8em; margin-right: -1.4em; } } @media (max-width: 35em) { .year { display: none; } .share { font-size: 1em; margin-top: 0.05em; margin-right: -1.5em; } } @media (max-width: 28em) { .profilepic { margin-top: -4.5px; width: 30px; height: 30px; } .abtlinks { font-size: 0.9em; } .year { display: none; } .share { font-size: 0.9em; margin-top: 0.05em; margin-right: -1.5em; } } Klipper Enabled Ender 3 \u00b6 Teddy Warner | Sophmore Year - 2021 | 10-12 minutes Due to uncertainty surrounding lab access during the Covid-19 pandemic, I received an Ender 3 3D-printer at the start of my cycle in Fab Academy . During my second week in the course, I built and began to mod this machine as a little side project to the course work. However as the cycle progressed, I quickly ran out of time to keep working on this machine\u2019s mods and moved the machine to my closet, where it sat up until the Klipper firmware piqued my interest. After modding the printer during Fab Academy 1 , I was running the machine on Marlin linked to Octoprint 2 , a setup I use on my other machines. This setup worked great with my machine mods, allowing me to print over a network through Octoprint as I would on any of my other Octoprint enabled machines. In this configuration, a Raspberry Pi running Octorpint hosts a local server that .gcode flies can be uploaded to and ran from. The Pi sends this uploaded .gcode to the machine\u2019s mainboard, where the code is processed, and movements/operations are determined. Klipper Opperation Principal Klipper on the other hand operates on a different principle. The firmware runs across both the mainboard and the Raspberry Pi, allowing for the same type of hosted server to exist (I used FluiddPi as my servers GUI ), but instead of relying on the machines mainboard to compute .gcode , the code parsing is done by the Raspberry Pi - the more powerful computer- leaving the machine mainboard to only worry about stepper movements and operations. This setup uses the given hardware of a setup more optimally, allowing for faster calculations and more precise movements. After learning about the benefits of Klipper I knew I had to try it out and thus, the Ender 3 modding project was revied and pulled from the closet. Ender 3 Modding \u00b6 Before the installation of Klipper, here are all the hardware mods done to the machine. I upgraded the main bored from the original factory board to a SKR Mini E3 V2 , and the original factory screen I switched out to a TFT35 Touchscreen . Following that I added a Bltouch for auto bed leveling, and switched the machine from Bowen to direct drive, with this Thingiverse design . I spent some time adding some customization to the machine as well, giving the direct drive system a little nameplate. Finally, I moved all of the electronics of the machine to the rear of the machine using this Thingiverse design . This mod gave the space to add a raspberry pi and a means of power for it in addition to the mainboard, a perfect case for a Klipper-enabled machine. I used this Thingiverse design to mount a raspberry pi camera to my printer\u2019s x-axis as shown in one of the pictures below. All of these modifications were done with parts printed on my Prusa I3 Mk3S+ , and electronics I had laying around, making these printer modifications only take around three days to complete, including the time it took to print the parts. Klipper Installation \u00b6 As mentioned in the introduction paragraph of this page, I settled on using FluiddPi as the GUI for this Klipper setup. As opposed to a more broadly know GUI like Octoprint, FluiddPi offers some features that work directly with Klipper that make the entire experience pretty seamless. FluiddPi in addition to containing the servers GUI also packages Klipper & Moonraker into the software image, making the install of Klipper super straightforward. Download the Latest FluiddPi Image Beginning the installation of Klipper, the first step is to download and flash the latest FluiddPi image (linked above). This Pi image can be flashed as you would with any other Raspberry Pi project - I use balenaEtcher for flashing, its simple 3-step interface makes the process super straightforward. After a successful flash of this image on your Pi\u2019s SD card configure your WiFi information in the fluiddpi-wpa-supplicant.txt located on the flashed SD card (If you\u2019re using wired internet, you can skip this setup) . Then, you can install your flashed SD in your Pi and boot. Next, some basic Pi config. Make sure you are on the same WiFi network you set up your Pi on, and then SSH into your booted Pi at the IP fluiddpi.local with the Pi\u2019s default credentials (Username - pi / Password - raspberry ). I use Putty as my SSH client as again, it\u2019s pretty straightforward to use. Once connected to your Pi, run the command \u2026 1 sudo raspi - config to open the configuration GUI . Here you can change your Pi\u2019s credentials (highly recommended), set up your local timezone (to allow for accurate machine ETAs), and change your machine\u2019s hostname (thus changing the URL from the default fluiddpi.local to YOURHOSTNAME.local ). After all, changes, reboot your Pi and then confirm all software is up to date with the lines 1 2 sudo apt - get update sudo apt - get upgrade Congrats! You have now successfully set up FluiddPi on your Raspberry Pi, and can now connect to its web server with the URL http://fluiddpi.local ( or if you changed your hostname, with the URL http://YOURHOSTNAME.local ). The FluiddPi Web Server Interface Upon connection, the webserver will throw an error with a lack of a printer.cfg file. This file is your machine config file. Notably different from Marlin, Klipper does not require a machine to be specified before the flash but instead looks to this printer.cfg file for machine configuration. One of the benefits of using FluiddPi for Klipper is the ability to alter this printer.cfg file and reboot the firmware right from the server\u2019s GUI . The machine configuration for my Klipper Enabled Ender 3 is covered later on this page under the Klipper Configuration section, but for any other machines, preconfigured printer.cfg files can be found online. Next up, building Klipper to for machines mainboard. SSH back into your Raspberry Pi (making sure to change your IP to match your altered hostname if you changed it) and run the commands \u2026 1 2 cd ~/ klipper / make menuconfig to open the mainboard configuration GUI . Work through this interface with your mainboards information before running the command \u2026 1 make to build your set configurations. Now, connect your Pi and machine mainboard via USB and determine the connected serial port with the line 1 ls / dev / serial / by - id /* the report this line will yield provides the serial port that connects your mainboard to your Pi, take note of this. Now, to begin the flashing, run the lines\u2026 1 2 3 sudo service klipper stop make flash FLASH_DEVICE = YOUR - SERIAL - PORT - INFORMATION - HERE sudo service klipper start making sure to paste in the reported serial port where it says YOUR-SERIAL-PORT-INFORMATION-HERE . This will flash the built Klipper instance to your machine\u2019s mainboard, and then begin communication between the two parallel boards. Good Work! Klipper is now installed. Klipper Configuration \u00b6 As mentioned prior, unlike the Marlin firmware, Klipper is not compiled for a specific machine. Instead, the firmware looks to a machine configuration file - printer.cfg . This file can be altered without the reflashing of the firmware, just a simple reboot, thus making machine tinkering and hardware swapping significantly simpler. This printer.cfg file can be altered in the FluiddPi web server interface, simplifying the configuration process even more. FluiddPi's Configuration Menu in Web Server Interface As shown above, your printer.cfg file can be accessed in FluiddPi\u2019s configuration menu. Due to Klipper\u2019s ability to experiment with your machine config, my printer\u2019s configuration is always subject to change, but included below is the latest machine config running on my Klipper Enabled Ender 3. printer.cfg \u00b6 printer.cfg 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 # See docs/Config_Reference.md for a description of parameters. [ virtual_sdcard ] path : ~/gcode_files [ display_status ] [ pause_resume ] [ stepper_x ] step_pin : PB13 dir_pin : !PB12 enable_pin : !PB14 microsteps : 16 rotation_distance : 40 endstop_pin : ^PC0 position_endstop : 0 position_max : 235 homing_speed : 50 [ tmc2209 stepper_x ] uart_pin : PC11 tx_pin : PC10 uart_address : 0 run_current : 0.580 hold_current : 0.500 stealthchop_threshold : 999999 [ stepper_y ] step_pin : PB10 dir_pin : !PB2 enable_pin : !PB11 microsteps : 16 rotation_distance : 40 endstop_pin : ^PC1 position_endstop : 0 position_max : 235 homing_speed : 50 [ tmc2209 stepper_y ] uart_pin : PC11 tx_pin : PC10 uart_address : 2 run_current : 0.580 hold_current : 0.500 stealthchop_threshold : 999999 [ stepper_z ] step_pin : PB0 dir_pin : PC5 enable_pin : !PB1 microsteps : 16 rotation_distance : 8 endstop_pin : probe:z_virtual_endstop #position_endstop: 0.0 position_min : -5 position_max : 250 [ tmc2209 stepper_z ] uart_pin : PC11 tx_pin : PC10 uart_address : 1 run_current : 0.580 hold_current : 0.500 stealthchop_threshold : 999999 [ extruder ] step_pin : PB3 dir_pin : !PB4 enable_pin : !PD2 microsteps : 16 rotation_distance : 7.61 pressure_advance = 0.235 nozzle_diameter : 0.400 filament_diameter : 1.750 heater_pin : PC8 sensor_type : EPCOS 100K B57560G104F sensor_pin : PA0 #control: pid #pid_Kp: 21.527 #pid_Ki: 1.063 #pid_Kd: 108.982 min_temp : 0 max_temp : 250 [ tmc2209 extruder ] uart_pin : PC11 tx_pin : PC10 uart_address : 3 run_current : 0.650 hold_current : 0.500 stealthchop_threshold : 999999 [ heater_bed ] heater_pin : PC9 sensor_type : ATC Semitec 104GT-2 sensor_pin : PC3 #control: pid #pid_Kp: 54.027 #pid_Ki: 0.770 #pid_Kd: 948.182 min_temp : 0 max_temp : 130 [ heater_fan nozzle_cooling_fan ] pin : PC7 [ fan ] pin : PC6 [ mcu ] serial : /dev/serial/by-id/usb-Klipper_stm32f103xe_36FFDB05424E313841781457-if00 [ printer ] kinematics : cartesian max_velocity : 300 max_accel : 3000 max_z_velocity : 5 max_z_accel : 100 [ static_digital_output usb_pullup_enable ] pins : !PA14 [ board_pins ] aliases : # EXP1 header EXP1_1=PB5, EXP1_3=PA9, EXP1_5=PA10, EXP1_7=PB8, EXP1_9=<GND>, EXP1_2=PA15, EXP1_4=<RST>, EXP1_6=PB9, EXP1_8=PB15, EXP1_10=<5V> [ display ] lcd_type : st7920 cs_pin : EXP1_7 sclk_pin : EXP1_6 sid_pin : EXP1_8 encoder_pins : ^EXP1_5, ^EXP1_3 click_pin : ^!EXP1_2 [ bltouch ] sensor_pin : ^PC2 control_pin : PA1 x_offset : 32 y_offset : -2 #z_offset = 3.050 [ safe_z_home ] home_xy_position : 85.5,119.5 speed : 75 z_hop : 10 z_hop_speed : 5 [ bed_mesh ] speed : 120 horizontal_move_z : 5 mesh_min : 32,44 mesh_max : 202, 220 probe_count : 3,3 [ screws_tilt_adjust ] screw1 : 0,45 screw1_name : front left screw screw2 : 164,45 screw2_name : front right screw screw3 : 164,220 screw3_name : rear right screw screw4 : 0,220 screw4_name : rear left screw horizontal_move_z : 10. speed : 50. screw_thread : CW-M4 [ gcode_macro PAUSE ] description : Pause the actual running print rename_existing : PAUSE_BASE # change this if you need more or less extrusion variable_extrude : 1.0 gcode : ##### read E from pause macro ##### { % set E = printer [ \"gcode_macro PAUSE\" ] .extrude|float % } ##### set park positon for x and y ##### # default is your max posion from your printer.cfg { % set x_park = printer.toolhead.axis_maximum.x|float - 5.0 % } { % set y_park = printer.toolhead.axis_maximum.y|float - 5.0 % } ##### calculate save lift position ##### { % set max_z = printer.toolhead.axis_maximum.z|float % } { % set act_z = printer.toolhead.position.z|float % } { % if act_z < (max_z - 2.0) % } { % set z_safe = 2.0 % } { % else % } { % set z_safe = max_z - act_z % } { % endif % } ##### end of definitions ##### PAUSE_BASE G91 {% if printer.extruder.can_extrude|lower == 'true' %} G1 E-{E} F2100 {% else %} {action_respond_info(\"Extruder not hot enough\")} {% endif %} {% if \"xyz\" in printer.toolhead.homed_axes %} G1 Z{z_safe} F900 G90 G1 X{x_park} Y{y_park} F6000 {% else %} {action_respond_info(\"Printer not homed\")} {% endif %} [ gcode_macro RESUME ] description : Resume the actual running print rename_existing : RESUME_BASE gcode : ##### read E from pause macro ##### { % set E = printer [ \"gcode_macro PAUSE\" ] .extrude|float % } #### get VELOCITY parameter if specified #### { % if 'VELOCITY' in params|upper % } { % set get_params = ('VELOCITY=' + params.VELOCITY) % } { % else % } { % set get_params = \"\" % } { % endif % } ##### end of definitions ##### { % if printer.extruder.can_extrude|lower == 'true' % } G91 G1 E{E} F2100 {% else %} {action_respond_info(\"Extruder not hot enough\")} {% endif %} RESUME_BASE {get_params} [ gcode_macro CANCEL_PRINT ] description : Cancel the actual running print rename_existing : CANCEL_PRINT_BASE gcode : TURN_OFF_HEATERS CANCEL_PRINT_BASE [ gcode_macro START_PRINT ] gcode : { % set BED_TEMP = params.BED_TEMP|default(60)|float % } { % set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float % } # Start bed heating M140 S{BED_TEMP} # Use absolute coordinates G90 # Reset the G-Code Z offset (adjust Z offset if needed) SET_GCODE_OFFSET Z=0.395 # Home the printer G28 # Move the nozzle G1 Z10 F3000 G0 X10 Y0 # Wait for bed to reach temperature M190 S{BED_TEMP} # Set and wait for nozzle to reach temperature M109 S{EXTRUDER_TEMP} G92 E0 ; reset extruder G1 Z1.0 F3000 ; move z up little to prevent scratching of surface G1 X0.1 Y20 Z0.395 F5000.0 ; move to start-line position G1 X0.1 Y200.0 Z0.395 F1500.0 E15 ; draw 1st line G1 X0.4 Y200.0 Z0.395 F5000.0 ; move to side a little G1 X0.4 Y20 Z0.395 F1500.0 E30 ; draw 2nd line G92 E0 ; reset extruder [ gcode_macro END_PRINT ] gcode : # Turn off bed, extruder, and fan M140 S0 M104 S0 M106 S0 # Move nozzle away from print while retracting G91 G1 X-2 Y-2 E-3 F300 # Raise nozzle by 15mm G1 Z15 F3000 # Present Print G90 G1 X0 Y190 F6000 G90 # Disable steppers M84 [ gcode_macro M600 ] gcode : { % set X = params.X|default(50)|float % } { % set Y = params.Y|default(0)|float % } { % set Z = params.Z|default(10)|float % } SAVE_GCODE_STATE NAME=M600_state PAUSE G91 G1 E-.8 F2700 G1 Z{Z} G90 G1 X{X} Y{Y} F3000 G91 G1 E-50 F1000 RESTORE_GCODE_STATE NAME=M600_state #*# <---------------------- SAVE_CONFIG ----------------------> #*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated. #*# #*# [bed_mesh default] #*# version = 1 #*# points = #*# -0.160000, -0.305000, -0.365000 #*# 0.107500, -0.015000, -0.337500 #*# 0.097500, -0.020000, -0.162500 #*# tension = 0.2 #*# min_x = 32.0 #*# algo = lagrange #*# y_count = 3 #*# mesh_y_pps = 2 #*# min_y = 44.0 #*# x_count = 3 #*# max_y = 220.0 #*# mesh_x_pps = 2 #*# max_x = 202.0 #*# #*# [heater_bed] #*# control = pid #*# pid_kp = 63.826 #*# pid_ki = 1.462 #*# pid_kd = 696.505 #*# #*# [extruder] #*# control = pid #*# pid_kp = 25.693 #*# pid_ki = 1.338 #*# pid_kd = 123.326 #*# #*# [bltouch] #*# z_offset = 2.900 Slicer Configuration \u00b6 Check out my Klipper Enabled Ender 3 machine profile page, linked below, for information regarding the slicer setup & config, as well as my profile download. Klipper Enabled Ender 3 Profile http://fabacademy.org/2021/labs/charlotte/students/theodore-warner/Assignments/week02/ \u21a9 https://teddywarner.org/Projects/Octoprint/ \u21a9","title":"Klipper Enabled Ender 3"},{"location":"Projects/KlipperEnder3/#klipper-enabled-ender-3","text":"Teddy Warner | Sophmore Year - 2021 | 10-12 minutes Due to uncertainty surrounding lab access during the Covid-19 pandemic, I received an Ender 3 3D-printer at the start of my cycle in Fab Academy . During my second week in the course, I built and began to mod this machine as a little side project to the course work. However as the cycle progressed, I quickly ran out of time to keep working on this machine\u2019s mods and moved the machine to my closet, where it sat up until the Klipper firmware piqued my interest. After modding the printer during Fab Academy 1 , I was running the machine on Marlin linked to Octoprint 2 , a setup I use on my other machines. This setup worked great with my machine mods, allowing me to print over a network through Octoprint as I would on any of my other Octoprint enabled machines. In this configuration, a Raspberry Pi running Octorpint hosts a local server that .gcode flies can be uploaded to and ran from. The Pi sends this uploaded .gcode to the machine\u2019s mainboard, where the code is processed, and movements/operations are determined. Klipper Opperation Principal Klipper on the other hand operates on a different principle. The firmware runs across both the mainboard and the Raspberry Pi, allowing for the same type of hosted server to exist (I used FluiddPi as my servers GUI ), but instead of relying on the machines mainboard to compute .gcode , the code parsing is done by the Raspberry Pi - the more powerful computer- leaving the machine mainboard to only worry about stepper movements and operations. This setup uses the given hardware of a setup more optimally, allowing for faster calculations and more precise movements. After learning about the benefits of Klipper I knew I had to try it out and thus, the Ender 3 modding project was revied and pulled from the closet.","title":"Klipper Enabled Ender 3"},{"location":"Projects/KlipperEnder3/#ender-3-modding","text":"Before the installation of Klipper, here are all the hardware mods done to the machine. I upgraded the main bored from the original factory board to a SKR Mini E3 V2 , and the original factory screen I switched out to a TFT35 Touchscreen . Following that I added a Bltouch for auto bed leveling, and switched the machine from Bowen to direct drive, with this Thingiverse design . I spent some time adding some customization to the machine as well, giving the direct drive system a little nameplate. Finally, I moved all of the electronics of the machine to the rear of the machine using this Thingiverse design . This mod gave the space to add a raspberry pi and a means of power for it in addition to the mainboard, a perfect case for a Klipper-enabled machine. I used this Thingiverse design to mount a raspberry pi camera to my printer\u2019s x-axis as shown in one of the pictures below. All of these modifications were done with parts printed on my Prusa I3 Mk3S+ , and electronics I had laying around, making these printer modifications only take around three days to complete, including the time it took to print the parts.","title":"Ender 3 Modding"},{"location":"Projects/KlipperEnder3/#klipper-installation","text":"As mentioned in the introduction paragraph of this page, I settled on using FluiddPi as the GUI for this Klipper setup. As opposed to a more broadly know GUI like Octoprint, FluiddPi offers some features that work directly with Klipper that make the entire experience pretty seamless. FluiddPi in addition to containing the servers GUI also packages Klipper & Moonraker into the software image, making the install of Klipper super straightforward. Download the Latest FluiddPi Image Beginning the installation of Klipper, the first step is to download and flash the latest FluiddPi image (linked above). This Pi image can be flashed as you would with any other Raspberry Pi project - I use balenaEtcher for flashing, its simple 3-step interface makes the process super straightforward. After a successful flash of this image on your Pi\u2019s SD card configure your WiFi information in the fluiddpi-wpa-supplicant.txt located on the flashed SD card (If you\u2019re using wired internet, you can skip this setup) . Then, you can install your flashed SD in your Pi and boot. Next, some basic Pi config. Make sure you are on the same WiFi network you set up your Pi on, and then SSH into your booted Pi at the IP fluiddpi.local with the Pi\u2019s default credentials (Username - pi / Password - raspberry ). I use Putty as my SSH client as again, it\u2019s pretty straightforward to use. Once connected to your Pi, run the command \u2026 1 sudo raspi - config to open the configuration GUI . Here you can change your Pi\u2019s credentials (highly recommended), set up your local timezone (to allow for accurate machine ETAs), and change your machine\u2019s hostname (thus changing the URL from the default fluiddpi.local to YOURHOSTNAME.local ). After all, changes, reboot your Pi and then confirm all software is up to date with the lines 1 2 sudo apt - get update sudo apt - get upgrade Congrats! You have now successfully set up FluiddPi on your Raspberry Pi, and can now connect to its web server with the URL http://fluiddpi.local ( or if you changed your hostname, with the URL http://YOURHOSTNAME.local ). The FluiddPi Web Server Interface Upon connection, the webserver will throw an error with a lack of a printer.cfg file. This file is your machine config file. Notably different from Marlin, Klipper does not require a machine to be specified before the flash but instead looks to this printer.cfg file for machine configuration. One of the benefits of using FluiddPi for Klipper is the ability to alter this printer.cfg file and reboot the firmware right from the server\u2019s GUI . The machine configuration for my Klipper Enabled Ender 3 is covered later on this page under the Klipper Configuration section, but for any other machines, preconfigured printer.cfg files can be found online. Next up, building Klipper to for machines mainboard. SSH back into your Raspberry Pi (making sure to change your IP to match your altered hostname if you changed it) and run the commands \u2026 1 2 cd ~/ klipper / make menuconfig to open the mainboard configuration GUI . Work through this interface with your mainboards information before running the command \u2026 1 make to build your set configurations. Now, connect your Pi and machine mainboard via USB and determine the connected serial port with the line 1 ls / dev / serial / by - id /* the report this line will yield provides the serial port that connects your mainboard to your Pi, take note of this. Now, to begin the flashing, run the lines\u2026 1 2 3 sudo service klipper stop make flash FLASH_DEVICE = YOUR - SERIAL - PORT - INFORMATION - HERE sudo service klipper start making sure to paste in the reported serial port where it says YOUR-SERIAL-PORT-INFORMATION-HERE . This will flash the built Klipper instance to your machine\u2019s mainboard, and then begin communication between the two parallel boards. Good Work! Klipper is now installed.","title":"Klipper Installation"},{"location":"Projects/KlipperEnder3/#klipper-configuration","text":"As mentioned prior, unlike the Marlin firmware, Klipper is not compiled for a specific machine. Instead, the firmware looks to a machine configuration file - printer.cfg . This file can be altered without the reflashing of the firmware, just a simple reboot, thus making machine tinkering and hardware swapping significantly simpler. This printer.cfg file can be altered in the FluiddPi web server interface, simplifying the configuration process even more. FluiddPi's Configuration Menu in Web Server Interface As shown above, your printer.cfg file can be accessed in FluiddPi\u2019s configuration menu. Due to Klipper\u2019s ability to experiment with your machine config, my printer\u2019s configuration is always subject to change, but included below is the latest machine config running on my Klipper Enabled Ender 3.","title":"Klipper Configuration"},{"location":"Projects/KlipperEnder3/#printercfg","text":"printer.cfg 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 # See docs/Config_Reference.md for a description of parameters. [ virtual_sdcard ] path : ~/gcode_files [ display_status ] [ pause_resume ] [ stepper_x ] step_pin : PB13 dir_pin : !PB12 enable_pin : !PB14 microsteps : 16 rotation_distance : 40 endstop_pin : ^PC0 position_endstop : 0 position_max : 235 homing_speed : 50 [ tmc2209 stepper_x ] uart_pin : PC11 tx_pin : PC10 uart_address : 0 run_current : 0.580 hold_current : 0.500 stealthchop_threshold : 999999 [ stepper_y ] step_pin : PB10 dir_pin : !PB2 enable_pin : !PB11 microsteps : 16 rotation_distance : 40 endstop_pin : ^PC1 position_endstop : 0 position_max : 235 homing_speed : 50 [ tmc2209 stepper_y ] uart_pin : PC11 tx_pin : PC10 uart_address : 2 run_current : 0.580 hold_current : 0.500 stealthchop_threshold : 999999 [ stepper_z ] step_pin : PB0 dir_pin : PC5 enable_pin : !PB1 microsteps : 16 rotation_distance : 8 endstop_pin : probe:z_virtual_endstop #position_endstop: 0.0 position_min : -5 position_max : 250 [ tmc2209 stepper_z ] uart_pin : PC11 tx_pin : PC10 uart_address : 1 run_current : 0.580 hold_current : 0.500 stealthchop_threshold : 999999 [ extruder ] step_pin : PB3 dir_pin : !PB4 enable_pin : !PD2 microsteps : 16 rotation_distance : 7.61 pressure_advance = 0.235 nozzle_diameter : 0.400 filament_diameter : 1.750 heater_pin : PC8 sensor_type : EPCOS 100K B57560G104F sensor_pin : PA0 #control: pid #pid_Kp: 21.527 #pid_Ki: 1.063 #pid_Kd: 108.982 min_temp : 0 max_temp : 250 [ tmc2209 extruder ] uart_pin : PC11 tx_pin : PC10 uart_address : 3 run_current : 0.650 hold_current : 0.500 stealthchop_threshold : 999999 [ heater_bed ] heater_pin : PC9 sensor_type : ATC Semitec 104GT-2 sensor_pin : PC3 #control: pid #pid_Kp: 54.027 #pid_Ki: 0.770 #pid_Kd: 948.182 min_temp : 0 max_temp : 130 [ heater_fan nozzle_cooling_fan ] pin : PC7 [ fan ] pin : PC6 [ mcu ] serial : /dev/serial/by-id/usb-Klipper_stm32f103xe_36FFDB05424E313841781457-if00 [ printer ] kinematics : cartesian max_velocity : 300 max_accel : 3000 max_z_velocity : 5 max_z_accel : 100 [ static_digital_output usb_pullup_enable ] pins : !PA14 [ board_pins ] aliases : # EXP1 header EXP1_1=PB5, EXP1_3=PA9, EXP1_5=PA10, EXP1_7=PB8, EXP1_9=<GND>, EXP1_2=PA15, EXP1_4=<RST>, EXP1_6=PB9, EXP1_8=PB15, EXP1_10=<5V> [ display ] lcd_type : st7920 cs_pin : EXP1_7 sclk_pin : EXP1_6 sid_pin : EXP1_8 encoder_pins : ^EXP1_5, ^EXP1_3 click_pin : ^!EXP1_2 [ bltouch ] sensor_pin : ^PC2 control_pin : PA1 x_offset : 32 y_offset : -2 #z_offset = 3.050 [ safe_z_home ] home_xy_position : 85.5,119.5 speed : 75 z_hop : 10 z_hop_speed : 5 [ bed_mesh ] speed : 120 horizontal_move_z : 5 mesh_min : 32,44 mesh_max : 202, 220 probe_count : 3,3 [ screws_tilt_adjust ] screw1 : 0,45 screw1_name : front left screw screw2 : 164,45 screw2_name : front right screw screw3 : 164,220 screw3_name : rear right screw screw4 : 0,220 screw4_name : rear left screw horizontal_move_z : 10. speed : 50. screw_thread : CW-M4 [ gcode_macro PAUSE ] description : Pause the actual running print rename_existing : PAUSE_BASE # change this if you need more or less extrusion variable_extrude : 1.0 gcode : ##### read E from pause macro ##### { % set E = printer [ \"gcode_macro PAUSE\" ] .extrude|float % } ##### set park positon for x and y ##### # default is your max posion from your printer.cfg { % set x_park = printer.toolhead.axis_maximum.x|float - 5.0 % } { % set y_park = printer.toolhead.axis_maximum.y|float - 5.0 % } ##### calculate save lift position ##### { % set max_z = printer.toolhead.axis_maximum.z|float % } { % set act_z = printer.toolhead.position.z|float % } { % if act_z < (max_z - 2.0) % } { % set z_safe = 2.0 % } { % else % } { % set z_safe = max_z - act_z % } { % endif % } ##### end of definitions ##### PAUSE_BASE G91 {% if printer.extruder.can_extrude|lower == 'true' %} G1 E-{E} F2100 {% else %} {action_respond_info(\"Extruder not hot enough\")} {% endif %} {% if \"xyz\" in printer.toolhead.homed_axes %} G1 Z{z_safe} F900 G90 G1 X{x_park} Y{y_park} F6000 {% else %} {action_respond_info(\"Printer not homed\")} {% endif %} [ gcode_macro RESUME ] description : Resume the actual running print rename_existing : RESUME_BASE gcode : ##### read E from pause macro ##### { % set E = printer [ \"gcode_macro PAUSE\" ] .extrude|float % } #### get VELOCITY parameter if specified #### { % if 'VELOCITY' in params|upper % } { % set get_params = ('VELOCITY=' + params.VELOCITY) % } { % else % } { % set get_params = \"\" % } { % endif % } ##### end of definitions ##### { % if printer.extruder.can_extrude|lower == 'true' % } G91 G1 E{E} F2100 {% else %} {action_respond_info(\"Extruder not hot enough\")} {% endif %} RESUME_BASE {get_params} [ gcode_macro CANCEL_PRINT ] description : Cancel the actual running print rename_existing : CANCEL_PRINT_BASE gcode : TURN_OFF_HEATERS CANCEL_PRINT_BASE [ gcode_macro START_PRINT ] gcode : { % set BED_TEMP = params.BED_TEMP|default(60)|float % } { % set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float % } # Start bed heating M140 S{BED_TEMP} # Use absolute coordinates G90 # Reset the G-Code Z offset (adjust Z offset if needed) SET_GCODE_OFFSET Z=0.395 # Home the printer G28 # Move the nozzle G1 Z10 F3000 G0 X10 Y0 # Wait for bed to reach temperature M190 S{BED_TEMP} # Set and wait for nozzle to reach temperature M109 S{EXTRUDER_TEMP} G92 E0 ; reset extruder G1 Z1.0 F3000 ; move z up little to prevent scratching of surface G1 X0.1 Y20 Z0.395 F5000.0 ; move to start-line position G1 X0.1 Y200.0 Z0.395 F1500.0 E15 ; draw 1st line G1 X0.4 Y200.0 Z0.395 F5000.0 ; move to side a little G1 X0.4 Y20 Z0.395 F1500.0 E30 ; draw 2nd line G92 E0 ; reset extruder [ gcode_macro END_PRINT ] gcode : # Turn off bed, extruder, and fan M140 S0 M104 S0 M106 S0 # Move nozzle away from print while retracting G91 G1 X-2 Y-2 E-3 F300 # Raise nozzle by 15mm G1 Z15 F3000 # Present Print G90 G1 X0 Y190 F6000 G90 # Disable steppers M84 [ gcode_macro M600 ] gcode : { % set X = params.X|default(50)|float % } { % set Y = params.Y|default(0)|float % } { % set Z = params.Z|default(10)|float % } SAVE_GCODE_STATE NAME=M600_state PAUSE G91 G1 E-.8 F2700 G1 Z{Z} G90 G1 X{X} Y{Y} F3000 G91 G1 E-50 F1000 RESTORE_GCODE_STATE NAME=M600_state #*# <---------------------- SAVE_CONFIG ----------------------> #*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated. #*# #*# [bed_mesh default] #*# version = 1 #*# points = #*# -0.160000, -0.305000, -0.365000 #*# 0.107500, -0.015000, -0.337500 #*# 0.097500, -0.020000, -0.162500 #*# tension = 0.2 #*# min_x = 32.0 #*# algo = lagrange #*# y_count = 3 #*# mesh_y_pps = 2 #*# min_y = 44.0 #*# x_count = 3 #*# max_y = 220.0 #*# mesh_x_pps = 2 #*# max_x = 202.0 #*# #*# [heater_bed] #*# control = pid #*# pid_kp = 63.826 #*# pid_ki = 1.462 #*# pid_kd = 696.505 #*# #*# [extruder] #*# control = pid #*# pid_kp = 25.693 #*# pid_ki = 1.338 #*# pid_kd = 123.326 #*# #*# [bltouch] #*# z_offset = 2.900","title":"printer.cfg"},{"location":"Projects/KlipperEnder3/#slicer-configuration","text":"Check out my Klipper Enabled Ender 3 machine profile page, linked below, for information regarding the slicer setup & config, as well as my profile download. Klipper Enabled Ender 3 Profile http://fabacademy.org/2021/labs/charlotte/students/theodore-warner/Assignments/week02/ \u21a9 https://teddywarner.org/Projects/Octoprint/ \u21a9","title":"Slicer Configuration"},{"location":"Projects/LithophaneExperiments/","tags":["CAD","3D Printing"],"text":".profilepic { display: inline; float: left; margin-top: -7px; width: 35px; height: 34px; border-radius: 50%; } .abtlinks a { color: var(--md-default-fg-color); } .share { float:right; margin-top: 0px; font-size: 1.1em; } .share a { color: inherit; } .twitter { padding-left: 0.2em; padding-right: 0.2em; } .share a.twitter:hover { color: #00acee; } .fb { padding-left: 0.2em; padding-right: 0.2em; } .share a.fb:hover { color: #3b5998; } .pin { padding-left: 0.2em; padding-right: 0.2em; } .share a.pin:hover { color: #E60023; } .ln { padding-left: 0.2em; padding-right: 0.2em; } .share a.ln:hover { color: #0e76a8; } .email { padding-left: 0.2em; padding-right: 1.5em; } @media (max-width: 40.55384615384616em) { .share { margin-top: -3.5em; margin-right: -1.4em; } } @media (max-width: 37.4em) { .share { margin-top: -4.8em; margin-right: -1.4em; } } @media (max-width: 35em) { .year { display: none; } .share { font-size: 1em; margin-top: 0.05em; margin-right: -1.5em; } } @media (max-width: 28em) { .profilepic { margin-top: -4.5px; width: 30px; height: 30px; } .abtlinks { font-size: 0.9em; } .year { display: none; } .share { font-size: 0.9em; margin-top: 0.05em; margin-right: -1.5em; } } Lithophane Experiments \u00b6 Teddy Warner | Junior Year - 2021 | 1-2 minutes A Lithophane is a piece of art made out of a thin translucent material designed to show an image in a \u201cgrisaille\u201d color format when held up to light. 1 3D printers can be utilized to create some nice-looking lithophanes, a practice made easy with 3dp.rocks lithophane generator, linked below. Due to their easy creation, I find lithophanes to be a nice medium to test slicer changes with, allowing for your time to be spent with the slicer settings, and not the file prep. Note This page is not documentation on the lithophane making process, but more of a portfolio of some notable lithophanes I\u2019ve printed since taking up this medium. 3dp.rocks\u2019s Lithophane Generator People \u00b6 Art \u00b6 https://en.wikipedia.org/wiki/Lithophane \u21a9","title":"Lithophane Experiments"},{"location":"Projects/LithophaneExperiments/#lithophane-experiments","text":"Teddy Warner | Junior Year - 2021 | 1-2 minutes A Lithophane is a piece of art made out of a thin translucent material designed to show an image in a \u201cgrisaille\u201d color format when held up to light. 1 3D printers can be utilized to create some nice-looking lithophanes, a practice made easy with 3dp.rocks lithophane generator, linked below. Due to their easy creation, I find lithophanes to be a nice medium to test slicer changes with, allowing for your time to be spent with the slicer settings, and not the file prep. Note This page is not documentation on the lithophane making process, but more of a portfolio of some notable lithophanes I\u2019ve printed since taking up this medium. 3dp.rocks\u2019s Lithophane Generator","title":"Lithophane Experiments"},{"location":"Projects/LithophaneExperiments/#people","text":"","title":"People"},{"location":"Projects/LithophaneExperiments/#art","text":"https://en.wikipedia.org/wiki/Lithophane \u21a9","title":"Art"},{"location":"Projects/MillingWorflow/","tags":["CAD","CAM","Software","Fusion 360","Aspire","CNC","Bantam"],"text":"function unit() { var element = document.body; element.classList.toggle(\"metric\"); } window.onload = function() { document.getElementById(\"outputval\").style.display = \"none\"; var unit = document.getElementById('units'); if (unit.checked) { var element = document.body; element.classList.toggle(\"metric\"); } } function calculate() { var element = document.body; document.getElementById(\"outputval\").style.display = \"inline\"; var unit = document.getElementById('units'); if (unit.checked) { var pi = Math.PI var d = document.getElementById('diameter').value; var f = document.getElementById('flutes').value; var s = document.getElementById('surface').value; var c = document.getElementById('chips').value; var dimp = d / 25.4; var simp = s / 0.3048; var cimp = c / 25.4; var SpindalSpeed = simp / (pi * (1/12) * dimp); document.getElementById('speed').value = parseFloat(SpindalSpeed.toFixed(2)); var FeedRateimp = SpindalSpeed * f * cimp; var FeedRatemet = FeedRateimp * 25.4; document.getElementById('feed').value = parseFloat(FeedRatemet.toFixed(2)); var PlungeRateimp = FeedRateimp * (1/2); var PlungeRatemet = PlungeRateimp * 25.4; document.getElementById('plunge').value = parseFloat(PlungeRatemet.toFixed(2)); var Stepdownimp = (1/2) * dimp; var Stepdownmet = Stepdownimp * 25.4; document.getElementById('down').value = parseFloat(Stepdownmet.toFixed(3)); var Stepoverimp = (9.2/20) * dimp; var Stepovermet = Stepoverimp * 25.4; document.getElementById('over').value = parseFloat(Stepovermet.toFixed(3)); } else { var pi = Math.PI var d = document.getElementById('diameter').value; var f = document.getElementById('flutes').value; var s = document.getElementById('surface').value; var c = document.getElementById('chips').value; var SpindalSpeed = s / (pi * (1/12) * d); document.getElementById('speed').value = parseFloat(SpindalSpeed.toFixed(2)); var FeedRate = SpindalSpeed * f * c; document.getElementById('feed').value = parseFloat(FeedRate.toFixed(2)); var PlungeRate = FeedRate * (1/2); document.getElementById('plunge').value = parseFloat(PlungeRate.toFixed(2)); var Stepdown = (1/2) * d; document.getElementById('down').value = parseFloat(Stepdown.toFixed(3)); var Stepover = (9.2/20) * d; document.getElementById('over').value = parseFloat(Stepover.toFixed(3)); } } function myFunction() { document.getElementById(\"outputval\").style.display = \"none\"; document.getElementById('diameter').value = \"\"; document.getElementById('flutes').value = \"\"; document.getElementById('surface').value = \"\"; document.getElementById('chips').value = \"\"; document.getElementById('speed').value = \"\"; document.getElementById('feed').value = \"\"; document.getElementById('plunge').value = \"\"; document.getElementById('down').value = \"\"; document.getElementById('over').value = \"\"; } function showHideRow(row) { var element = document.body; element.classList.toggle(row); $(\"#\" + row).toggle(); } .profilepic { display: inline; float: left; margin-top: -7px; width: 35px; height: 34px; border-radius: 50%; } .abtlinks a { color: var(--md-default-fg-color); } .share { float:right; margin-top: 0px; font-size: 1.1em; } .share a { color: inherit; } .twitter { padding-left: 0.2em; padding-right: 0.2em; } .share a.twitter:hover { color: #00acee; } .fb { padding-left: 0.2em; padding-right: 0.2em; } .share a.fb:hover { color: #3b5998; } .pin { padding-left: 0.2em; padding-right: 0.2em; } .share a.pin:hover { color: #E60023; } .ln { padding-left: 0.2em; padding-right: 0.2em; } .share a.ln:hover { color: #0e76a8; } .email { padding-left: 0.2em; padding-right: 1.5em; } @media (max-width: 40.55384615384616em) { .share { margin-top: -3.5em; margin-right: -1.4em; } } @media (max-width: 37.4em) { .share { margin-top: -4.8em; margin-right: -1.4em; } } @media (max-width: 35em) { .year { display: none; } .share { font-size: 1em; margin-top: 0.05em; margin-right: -1.5em; } } @media (max-width: 28em) { .profilepic { margin-top: -4.5px; width: 30px; height: 30px; } .abtlinks { font-size: 0.9em; } .year { display: none; } .share { font-size: 0.9em; margin-top: 0.05em; margin-right: -1.5em; } } .calcinput { border: 1px solid black; border-radius:3px; color:black; } .calcbutton { background-color:transparent; color:black; border:1px solid black; border-radius:3px; } .mm { display: none; } .mmmin { display: none; } .mmin { display: none; } .in { display: inline; } .inmin { display: inline; } .ftmin { display: inline; } .metric .mm { display: inline; } .metric .mmmin { display: inline; } .metric .mmin { display: inline; } .metric .in { display: none; } .metric .inmin { display: none; } .metric .ftmin { display: none; } #right1 { display: inline; } #down1 { display: none; } #right2 { display: inline; } #down2 { display: none; } #right3 { display: inline; } #down3 { display: none; } #right4 { display: inline; } #down4 { display: none; } #right5 { display: inline; } #down5 { display: none; } #right6 { display: inline; } #down6 { display: none; } #right7 { display: inline; } #down7 { display: none; } #right8 { display: inline; } #down8 { display: none; } #right9 { display: inline; } #down9 { display: none; } #right10 { display: inline; } #down10 { display: none; } #right11 { display: inline; } #down11 { display: none; } #right12 { display: inline; } #down12 { display: none; } #right13 { display: inline; } #down13 { display: none; } #right14 { display: inline; } #down14 { display: none; } #right15 { display: inline; } #down15 { display: none; } #right16 { display: inline; } #down16 { display: none; } #right17 { display: inline; } #down17 { display: none; } #right18 { display: inline; } #down18 { display: none; } #right19 { display: inline; } #down19 { display: none; } #right20 { display: inline; } #down20 { display: none; } #right21 { display: inline; } #down21 { display: none; } .hidden_row1 #right1 { display: none; } .hidden_row1 #down1 { display: inline; } .hidden_row2 #right2 { display: none; } .hidden_row2 #down2 { display: inline; } .hidden_row3 #right3 { display: none; } .hidden_row3 #down3 { display: inline; } .hidden_row4 #right4 { display: none; } .hidden_row4 #down4 { display: inline; } .hidden_row5 #right5 { display: none; } .hidden_row5 #down5 { display: inline; } .hidden_row6 #right6 { display: none; } .hidden_row6 #down6 { display: inline; } .hidden_row7 #right7 { display: none; } .hidden_row7 #down7 { display: inline; } .hidden_row8 #right8 { display: none; } .hidden_row8 #down8 { display: inline; } .hidden_row9 #right9 { display: none; } .hidden_row9 #down9 { display: inline; } .hidden_row10 #right10 { display: none; } .hidden_row10 #down10 { display: inline; } .hidden_row11 #right11 { display: none; } .hidden_row11 #down11 { display: inline; } .hidden_row12 #right12 { display: none; } .hidden_row12 #down12 { display: inline; } .hidden_row13 #right13 { display: none; } .hidden_row13 #down13 { display: inline; } .hidden_row14 #right14 { display: none; } .hidden_row14 #down14 { display: inline; } .hidden_row15 #right15 { display: none; } .hidden_row15 #down15 { display: inline; } .hidden_row16 #right16 { display: none; } .hidden_row16 #down16 { display: inline; } .hidden_row17 #right17 { display: none; } .hidden_row17 #down17 { display: inline; } .hidden_row18 #right18 { display: none; } .hidden_row18 #down18 { display: inline; } .hidden_row19 #right19 { display: none; } .hidden_row19 #down19 { display: inline; } .hidden_row20 #right20 { display: none; } .hidden_row20 #down20 { display: inline; } .hidden_row20 #right21 { display: none; } .hidden_row20 #down21 { display: inline; } CNC Milling Workflows \u00b6 Teddy Warner | Junior Year - 2022 | X-X minutes Subtractive manufacturing is a process I\u2019ve always found mesmerizing. Although additive processes such as 3D printing allow for the creation of something from seemingly nothing, I believe it\u2019s even cooler to watch the morphing of existing stock into a different object. Despite this interest, I feel as though I\u2019ve barely scratched the surface of CNC - primarily focusing on PCB milling in my subtractive manufacturing projects. I made a first attempt to dive into more subtractive manufacturing work a couple of years ago now when I built V1 Engineering\u2019s original MPCNC . My Mostly Printed CNC Machine I absolutely loved building this machine and recommend it to all interested in understanding the workings of CNC , yet I don\u2019t mill on mine all that often, I find more use in using the machine as a GCode dev platform for some of my other projects. Since my initial attempted steps with the MPCNC , I\u2019ve become more versed with CNC milling due to exposure during my Fab Academy Week 7: Computer Controlled Machining assignment. For this assignment, I used the CLS Fab Lab\u2019s ShopBot PRSalpha to mill the plywood fish tank housing for my Fab Academy Final Project . I continued my milling work over the summer, running the ShopBot almost daily over July for Young Engineers of Today\u2019s Summer Camps. Last fall, our lab picked up a Bantam Tools Desktop CNC Milling Machine , Bantam\u2019s flagship machine, capable of super-rapid prototyping when partnered with their Milling Machine Software . This machine was the needed spark for this CNC milling documentation article and will be the machine most of this page\u2019s projects are completed on. Thus, I\u2019ll be primarily focusing on a CAM to Bantam workflow in this article, highlighting powerful CAM workflows in Autodesk Fusion 360 , along with our lab\u2019s Vectric Aspire workflow. This article will be based upon a collection of micro-projects to display these workflows, giving me plenty of the subtractive manufacturing projects I\u2019ve been looking for . Feeds & Speeds \u00b6 Creating a successfuly subtractive manufcaturing toolpath can be a bit more intimidating than sliceing for an additive manufactuing. Not only can you jepordize your stock material, incrorect feeds and speeds can yeild a hazeround enviornment & portential machine damage. There is no streamlined answer to find the right feeds and speeds , ideal values depend on numerous variables & feeds and speeds may not remain constant from job to job. This secontion provides a starting place for feeds and speeds, with general values provided as well as a calcuator for the required inputs in your toolpath. This is by no means a universal key and necisary precaution & alterations should be made to provided values to mesh with your manufactuing workflow. Often times the manufacture of your tool & your machine will provide generic feeds and speeds for your specfic equipment. Opperator input is required to achieve successful & safe cuts, often times you\u2019ll be able to hear machine starin - a telltail sign of poor cutting. Trial and error adjusting is neccicary to achieve the sweet spot for your feeds and speeds. Feeds & Speeds Terminology Tool Diameter The diameter of the endmill. When Profile milling or Through Cutting stock, it is best to keep the Tool Diameter \u2265 1/6 Stock Thickness , preserving the integrity of the endmill while allowing for full passes. Larger tool diameters yield shorter cut times when removing a lot of material, while smaller diameters allow for higher detail to be reached. It is typically best to utilize both larger and smaller diameter endmills, using the larger to clear the bulk of stock material, while finishing the mill with a smaller diameter tool to achieve the best detail. Flute Count The number of individual flutes an endmill has. Flutes are the upward running cutting edges on an endmill. Lower flute counts allow for better chip & heat clearance from the cutting edge, while higher flute counts provided a smoother finish to a part. Stock materials that require a high surface speed also require higher flute bits, and vice versa with lower surface speed requirements. One to Two flute bits will suffice for prototyping with soft plastics & waxes. Two or more flutes will typically be needed for harder plastics (such as HDPE), woods, and metals. Surface Speed The speed at which the tool\u2019s cutting edge travels through the stock. Surface Speed is dependent on both the stock & endmill materials. Maximum surface speeds are typically published by your endmill\u2019s manufacturer and do not need to be derived experimentally. Staring jobs at \u2264 50% of the maximum provided value is the best practice to allow for ample time to ensure the successful operation of your machine . Chip Load The thickness of offcut \u2018chips\u2019 removed with each flute per revolution of the endmill. Maximum chip load is typically provided by the endmill\u2019s manufacturer, based upon the tool\u2019s characteristics. Finding a balance between chip load extremes is crucial for the safety of you and your machine. While larger chip loads yield shorter machine time, they also put greater forces on your endmill, potentially pushing the bit towards its point of rupture. On the other hand, smaller chip loads increase machine time, while expelling waste and heat from the tool at a slower pace, thus risking overheating and potential fire. Safe chip load values usually fall between 0.001\u201d & 0.010\u201d . Spindle Speed The number of revolutions made by the endmill in a unit of time (RPM is standard). A Lower RPM yields a higher quality surface finish & more cutting power, while a higher RPM decreases machine time. For optimal milling operations, use a higher RPM for roughing passes & a lower for finishing. \\[ Spindle Speed (RPM) = {Surface Speed (ft/min) \\over \u03c0 \u2217 {1 \\over 12} \u2217 Tool Diameter (in)} \\] Feed Rate The speed at which the machine moves the tool through the stock. Finding the right feed rate is crucial for the safety of you and your machine. Excessively high feed rates cause excessive load on the cutter, leading to cataclysmic failure of the endmill, spindle, and machine. Feed rates that are too low produce unnecessary vibration on the machine, leading to poor surface finishes & potential cutter failure. \\[ Feed Rate (in/min) = Spindle Speed (RPM) \u2217 Flute Count \u2217 Chip Load (in) \\] Plunge Rate The speed at which the endmill is driven down into the stock. The vertically running flutes on an endmill allow the tool to cut horizontally, while vertical plunges are more demanding on the tool. Lower plunge rates prevent tool damage & maintain lower temperatures while boring holes. All plunging cuts should be ramped , as gradual plunging while traveling across the stock will reduce tool stress. \\[ Plunge Rate(in/min) = Feed Rate (in/min) * {1 \\over 2} \\] Stepdown The vertical depth of each pass of the tool into the stock. Best practice is to maintain a step down of \u2264 50% of the tool diameter , however, may be increased while milling softer materials. The step down should always remain less than the tool diameter. \\[ Stepover(in) = Tool Diameter (in) * {3 \\over 5} \\] Stepover The space between passes of the tool into the stock. While pocketing, a maximum stepover of 50% can be used, however lower stepover values will leave a better surface finish. \\[ Stepover(in) = Tool Diameter (in) * {9 \\over 20} \\] Material Reference \u00b6 Feeds and speeds are equally dependent on material proterities and the specfic of your machoine & tool. Material Description Wax A easily milled medium, commonly used for casting cores, molds, and CNC program proofs. Cost Efficient, offcut may be saved, melted & reused Environmentally Friendly Safe, no hazardous waste or fumes High Dimensional Accuracy Self-lubricating Easy on Tooling Surface Speed (ft/min) = 200 Chip Load (in) - 1/8\" Tool Diameter - 0.0089 - 0.005 1/4\" Tool Diameter - 0.010 - 0.015 3/8\" Tool Diameter - 0.015 - 0.020 \u2265 1/2\" Tool Diameter - 0.025 - 0.033 Soft Wood A accessible & stylish medium, not to tricky to mill, often used for large scale parts - Pine, Spruce, Cedar, etc. Light weight, low density Sustainable resource, softwoods grow at a rapid rate Cheap & readily available Easily milled Surface Speed (ft/min) = 650 Chip Load (in) - 1/8\" Tool Diameter - 0.004 - 0.006 1/4\" Tool Diameter - 0.011 - 0.013 3/8\" Tool Diameter - 0.017 - 0.020 \u2265 1/2\" Tool Diameter - 0.021 - 0.023 Hard Wood Similar benefits to soft wood, can be a bit more costly - Maple, Walnut, Cherry, Ash, etc. Extremely Durable Enhanced strength when compared to softwoods, higher density Naturally more fire resistance than softwoods Surface Speed (ft/min) = 650 Chip Load (in) - 1/8\" Tool Diameter - 0.003 - 0.005 1/4\" Tool Diameter - 0.009 - 0.011 3/8\" Tool Diameter - 0.016 - 0.018 \u2265 1/2\" Tool Diameter - 0.019 - 0.021 Medium Density Fiberboard MDF An easily machined & finished material, relatively cheap, commonly used for jigs, fixtures, vacuum molds & engraving. \u26a0\ufe0f Strong Dust Collection Required , as the fused nature of the material creates extremely fine dust. Affordable & readily available Consistent, dense, heavy, flat & stiff Flex & crack resistant Easily machined Easy to post-process, paint & seal Surface Speed (ft/min) = 650 Chip Load (in) - 1/8\" Tool Diameter - 0.004 - 0.007 1/4\" Tool Diameter - 0.013 - 0.016 3/8\" Tool Diameter - 0.020 - 0.023 \u2265 1/2\" Tool Diameter - 0.025 - 0.027 Oriented Strand Board OBS A strong, light weight, cost-efficient material, a great choice for large scale stiff parts. Similar to plywood but contains no natural defects, knot free and consistent density Environmentally friendly, often produced from sustainable rapid growing trees Recyclable into new OBS Stiff & lightweight Surface Speed (ft/min) = 650 Chip Load (in) - 1/8\" Tool Diameter - 0.004 - 0.006 1/4\" Tool Diameter - 0.011 - 0.013 3/8\" Tool Diameter - 0.017 - 0.020 \u2265 1/2\" Tool Diameter - 0.021 - 0.023 High-density Polyethylene HDPE A soft-ish plastic, great for prototyping but a tricky material to mill. Impact resistant at low temperatures Great Chemical resistance UV Resistant Moisture Resistant Stiff & strong Emits not hazardous odors or waste Surface Speed (ft/min) = 450 Chip Load (in) - 1/8\" Tool Diameter - 0.003 - 0.006 1/4\" Tool Diameter - 0.007 - 0.010 3/8\" Tool Diameter - 0.010 - 0.012 \u2265 1/2\" Tool Diameter - 0.012 - 0.016 Polyetheretherketone PEEK A high-performance thermoplastic, great for structural applications with resistance to fatigue and stress-cracking. \u26a0\ufe0f PEEK is rather abrasive on tooling, Carbide or Polycrystalline (PCD) tooling should be used . Comparable performance to Human bone tissue Resistant to chemicals and radiation Great strength to weight ratio Creep-resistant & long-wearing Great strength to weight ratio Temperature resistant, can operate up to 480\u00b0 F Easy to machine Surface Speed (ft/min) = 500 Chip Load (in) - 1/8\" Tool Diameter - 0.002 - 0.004 1/4\" Tool Diameter - 0.006 - 0.009 3/8\" Tool Diameter - 0.008 - 0.010 \u2265 1/2\" Tool Diameter - 0.010 - 0.012 Polyetherimide PEI A high-performance thermoplastic, with great heat, solvent & flame resistant. Often used in applications with long term steam exposure. High deflection temperature at 400\u00b0 F Resistant to chemicals and radiation Creep-resistant, strong & rigid Heat & flame resistant Surface Speed (ft/min) = 360 Chip Load (in) - 1/8\" Tool Diameter - 0.002 - 0.004 1/4\" Tool Diameter - 0.006 - 0.009 3/8\" Tool Diameter - 0.008 - 0.010 \u2265 1/2\" Tool Diameter - 0.010 - 0.012 Polyvinyl Chloride PVC An cost efficient & accessible plastic, typically used across industry but offers a cheap & lightweight medium. Lightweight & durable Easy to process Low cost & accessible Waterproof Easy to machine Surface Speed (ft/min) = 250 Chip Load (in) - 1/8\" Tool Diameter - 0.002 - 0.004 1/4\" Tool Diameter - 0.006 - 0.009 3/8\" Tool Diameter - 0.008 - 0.010 \u2265 1/2\" Tool Diameter - 0.010 - 0.012 Polyoxymethylene POM A general purpose, good all around thermoplastic - also know as Acetal or Delrin . Strong, tough & ridged Great impact strength Easy to machine High dimensional accuracy Wear resistant Surface Speed (ft/min) = 375 Chip Load (in) - 1/8\" Tool Diameter - 0.002 - 0.004 1/4\" Tool Diameter - 0.006 - 0.009 3/8\" Tool Diameter - 0.008 - 0.010 \u2265 1/2\" Tool Diameter - 0.010 - 0.012 Acrylonitrile Butadiene Styrene ABS Easily accessed & low cost thermoplastic, commonly used for molding applications. Ridged, good abrasion and strain resistance High dimensional accuracy Good impact resistance Can be chemically welded Good insulating properties Easy to machine Surface Speed (ft/min) = 300 Chip Load (in) - 1/8\" Tool Diameter - 0.002 - 0.004 1/4\" Tool Diameter - 0.006 - 0.009 3/8\" Tool Diameter - 0.008 - 0.010 \u2265 1/2\" Tool Diameter - 0.010 - 0.012 Polycarbonate PC An incredibly strong and possibly transparent thermoplastic, known for maintained temperature resistance. Outstanding strength, stiffness & impact resistance Resists cracking, chips, dents & scratches Easy to paint Chemically weldable Surface Speed (ft/min) = 360 Chip Load (in) - 1/8\" Tool Diameter - 0.002 - 0.004 1/4\" Tool Diameter - 0.006 - 0.009 3/8\" Tool Diameter - 0.008 - 0.010 \u2265 1/2\" Tool Diameter - 0.010 - 0.012 Nylon A cost-effective & long-lasting thermoplastic, used in cases of required mechanical dampening or electrical insulation. Strong & durable Lightweight & elastic Low friction Corrosion & abrasion resistant Great insulating prosperities Surface Speed (ft/min) = 400 Chip Load (in) - 1/8\" Tool Diameter - 0.002 - 0.004 1/4\" Tool Diameter - 0.006 - 0.009 3/8\" Tool Diameter - 0.008 - 0.010 \u2265 1/2\" Tool Diameter - 0.010 - 0.012 Acrylic A lightweight insulating thermoplastic, serves as an effective replacement for glass. \u26a0\ufe0f Acrylic is prone to stress cracks & fractures during milling & post-processing. Transparent & UV resistant Good impact resistance Great thermal insulation Surface Speed (ft/min) = 500 , 130 without coolant Chip Load (in) - 1/8\" Tool Diameter - 0.003 - 0.005 1/4\" Tool Diameter - 0.008 - 0.010 3/8\" Tool Diameter - 0.010 - 0.012 \u2265 1/2\" Tool Diameter - 0.012 - 0.015 Carbon Fiber A strong & lightweight composite of carbon based fibers, desirable for various industrial applications due to its heat & chemical resistance. \u26a0\ufe0f Carbon fiber is incredibly abrasive and will wear down tooling & dull bits will pull fibers from the composite instead of cutting through them. The use of Carbide and Polycrystalline Diamond (PCD) bits are optimal while milling carbon fiber , as they offer a superior wear resistance. Lightweight Stiff & Strong High temperature tolerance with low thermal expansion Resistant to chemical abrasion Surface Speed (ft/min) = 5.45 Chip Load (in) - 1/8\" Tool Diameter - 0.003 - 0.006 1/4\" Tool Diameter - 0.009 - 0.012 3/8\" Tool Diameter - 0.016 - 0.018 \u2265 1/2\" Tool Diameter - 0.023 - 0.025 Aluminium An accessible, easy to mill metal, seen across thermal & electrical conducting components. Easy to machine Non-magnetic Lightweight & durable metal Good electrical & heat conductor Surface Speed (ft/min) = 600 , 200 without coolant Chip Load (in) - 1/8\" Tool Diameter - 0.003 - 0.004 1/4\" Tool Diameter - 0.005 - 0.007 3/8\" Tool Diameter - 0.006 - 0.008 \u2265 1/2\" Tool Diameter - 0.008 - 0.010 Brass A easy to machine & highly conductive metal, ideal for low friction & intricate parts. Easy to machine Non-magnetic Highly electrical & thermal conductive Wear & corrosion resistant High malleability Antibacterial Surface Speed (ft/min) = 600 Chip Load (in) - 1/8\" Tool Diameter - 0.0004 - 0.0010 1/4\" Tool Diameter - 0.0005 - 0.0020 3/8\" Tool Diameter - 0.0005 - 0.0030 \u2265 1/2\" Tool Diameter - 0.0010 - 0.0060 Copper A malleable metal, typically used for its high electrical & thermal conductivity. Non-magnetic High electrical & thermal conductivity Wear & corrosion resistant High malleability Antibacterial Surface Speed (ft/min) = 550 Chip Load (in) - 1/8\" Tool Diameter - 0.0004 - 0.0010 1/4\" Tool Diameter - 0.0005 - 0.0020 3/8\" Tool Diameter - 0.0005 - 0.0030 \u2265 1/2\" Tool Diameter - 0.0010 - 0.0060 Steel An iron alloy with high strength & fracture resistance, typically used in situations requiring its high tensile strength, such as tools & machines. High strength & durable High fracture resistance Wear & corrosion resistant Surface Speed (ft/min) = 200 , 50 without coolant Chip Load (in) - 1/8\" Tool Diameter - 0.0004 - 0.0008 1/4\" Tool Diameter - 0.0008 - 0.0010 3/8\" Tool Diameter - 0.0012 - 0.0015 \u2265 1/2\" Tool Diameter - 0.0015 - 0.0025 Insulation Foam A low cost, accessible & easy to mill material, commonly used for large molds & as cores for lightweight parts. Easy to machine High mechanical strength with very low density Thermal insulating properties Cheap & accessible Resistance to water absorption Surface Speed (ft/min) = 1000 Chip Load (in) - 1/8\" Tool Diameter - 0.004 - 0.006 1/4\" Tool Diameter - 0.011 - 0.013 3/8\" Tool Diameter - 0.017 - 0.020 \u2265 1/2\" Tool Diameter - 0.021 - 0.023 Feeds & Speeds Calculator \u00b6 Metric? Tool Diameter ( in mm ): Flute Count: Surface Speed ( ft/min M/min ): Chip Load ( in mm ): Spindle Speed (RPM): Feed Rate ( in/min mm/min ): Plunge Rate ( in/min mm/min ): Stepdown ( in mm ): Stepover ( in mm ): Calculate Clear Fusion 360 CAM \u00b6 Fusion 360 Manufacturing Overview Fusion 360 & Bantam Milling Fusion 360 Bantam Tool Library Gale Crater Mill \u00b6 Wax Seal Stamp \u00b6 Chocolate Molding \u00b6 Vectric Aspire \u00b6 VCarve & Bantam Milling Bantam Post-processer for Vectric Aspire Topography Paper Weight \u00b6 Terrain2STL Caption Caption Caption Bantam Tools CNC Software \u00b6 PCB Badge \u00b6 Inkscape to Eagle https://www.cnccookbook.com/machining-carbon-fiber-composites-drilling-cnc-tools/ \u21a9 https://dragonplate.com/how-to-cut-carbon-fiber \u21a9 https://www.gutenberg.org/files/12299/12299-h/12299-h.htm \u21a9 https://www.practicalmachinist.com/vb/general-archive/face-milling-pvc-152424/ \u21a9 https://www.precisebits.com/tutorials/spindle-rpm \u21a9 https://pub.pages.cba.mit.edu/feed_speeds/ \u21a9 https://www.protolabs.com/resources/design-tips/cnc-machining-materials/ \u21a9 https://www.3erp.com/blog/cnc-milling-materials-choose-application/ \u21a9 https://www.hubs.com/knowledge-base/selecting-right-cnc-material/ \u21a9","title":"CNC Milling Workflows"},{"location":"Projects/MillingWorflow/#cnc-milling-workflows","text":"Teddy Warner | Junior Year - 2022 | X-X minutes Subtractive manufacturing is a process I\u2019ve always found mesmerizing. Although additive processes such as 3D printing allow for the creation of something from seemingly nothing, I believe it\u2019s even cooler to watch the morphing of existing stock into a different object. Despite this interest, I feel as though I\u2019ve barely scratched the surface of CNC - primarily focusing on PCB milling in my subtractive manufacturing projects. I made a first attempt to dive into more subtractive manufacturing work a couple of years ago now when I built V1 Engineering\u2019s original MPCNC . My Mostly Printed CNC Machine I absolutely loved building this machine and recommend it to all interested in understanding the workings of CNC , yet I don\u2019t mill on mine all that often, I find more use in using the machine as a GCode dev platform for some of my other projects. Since my initial attempted steps with the MPCNC , I\u2019ve become more versed with CNC milling due to exposure during my Fab Academy Week 7: Computer Controlled Machining assignment. For this assignment, I used the CLS Fab Lab\u2019s ShopBot PRSalpha to mill the plywood fish tank housing for my Fab Academy Final Project . I continued my milling work over the summer, running the ShopBot almost daily over July for Young Engineers of Today\u2019s Summer Camps. Last fall, our lab picked up a Bantam Tools Desktop CNC Milling Machine , Bantam\u2019s flagship machine, capable of super-rapid prototyping when partnered with their Milling Machine Software . This machine was the needed spark for this CNC milling documentation article and will be the machine most of this page\u2019s projects are completed on. Thus, I\u2019ll be primarily focusing on a CAM to Bantam workflow in this article, highlighting powerful CAM workflows in Autodesk Fusion 360 , along with our lab\u2019s Vectric Aspire workflow. This article will be based upon a collection of micro-projects to display these workflows, giving me plenty of the subtractive manufacturing projects I\u2019ve been looking for .","title":"CNC Milling Workflows"},{"location":"Projects/MillingWorflow/#feeds-speeds","text":"Creating a successfuly subtractive manufcaturing toolpath can be a bit more intimidating than sliceing for an additive manufactuing. Not only can you jepordize your stock material, incrorect feeds and speeds can yeild a hazeround enviornment & portential machine damage. There is no streamlined answer to find the right feeds and speeds , ideal values depend on numerous variables & feeds and speeds may not remain constant from job to job. This secontion provides a starting place for feeds and speeds, with general values provided as well as a calcuator for the required inputs in your toolpath. This is by no means a universal key and necisary precaution & alterations should be made to provided values to mesh with your manufactuing workflow. Often times the manufacture of your tool & your machine will provide generic feeds and speeds for your specfic equipment. Opperator input is required to achieve successful & safe cuts, often times you\u2019ll be able to hear machine starin - a telltail sign of poor cutting. Trial and error adjusting is neccicary to achieve the sweet spot for your feeds and speeds. Feeds & Speeds Terminology Tool Diameter The diameter of the endmill. When Profile milling or Through Cutting stock, it is best to keep the Tool Diameter \u2265 1/6 Stock Thickness , preserving the integrity of the endmill while allowing for full passes. Larger tool diameters yield shorter cut times when removing a lot of material, while smaller diameters allow for higher detail to be reached. It is typically best to utilize both larger and smaller diameter endmills, using the larger to clear the bulk of stock material, while finishing the mill with a smaller diameter tool to achieve the best detail. Flute Count The number of individual flutes an endmill has. Flutes are the upward running cutting edges on an endmill. Lower flute counts allow for better chip & heat clearance from the cutting edge, while higher flute counts provided a smoother finish to a part. Stock materials that require a high surface speed also require higher flute bits, and vice versa with lower surface speed requirements. One to Two flute bits will suffice for prototyping with soft plastics & waxes. Two or more flutes will typically be needed for harder plastics (such as HDPE), woods, and metals. Surface Speed The speed at which the tool\u2019s cutting edge travels through the stock. Surface Speed is dependent on both the stock & endmill materials. Maximum surface speeds are typically published by your endmill\u2019s manufacturer and do not need to be derived experimentally. Staring jobs at \u2264 50% of the maximum provided value is the best practice to allow for ample time to ensure the successful operation of your machine . Chip Load The thickness of offcut \u2018chips\u2019 removed with each flute per revolution of the endmill. Maximum chip load is typically provided by the endmill\u2019s manufacturer, based upon the tool\u2019s characteristics. Finding a balance between chip load extremes is crucial for the safety of you and your machine. While larger chip loads yield shorter machine time, they also put greater forces on your endmill, potentially pushing the bit towards its point of rupture. On the other hand, smaller chip loads increase machine time, while expelling waste and heat from the tool at a slower pace, thus risking overheating and potential fire. Safe chip load values usually fall between 0.001\u201d & 0.010\u201d . Spindle Speed The number of revolutions made by the endmill in a unit of time (RPM is standard). A Lower RPM yields a higher quality surface finish & more cutting power, while a higher RPM decreases machine time. For optimal milling operations, use a higher RPM for roughing passes & a lower for finishing. \\[ Spindle Speed (RPM) = {Surface Speed (ft/min) \\over \u03c0 \u2217 {1 \\over 12} \u2217 Tool Diameter (in)} \\] Feed Rate The speed at which the machine moves the tool through the stock. Finding the right feed rate is crucial for the safety of you and your machine. Excessively high feed rates cause excessive load on the cutter, leading to cataclysmic failure of the endmill, spindle, and machine. Feed rates that are too low produce unnecessary vibration on the machine, leading to poor surface finishes & potential cutter failure. \\[ Feed Rate (in/min) = Spindle Speed (RPM) \u2217 Flute Count \u2217 Chip Load (in) \\] Plunge Rate The speed at which the endmill is driven down into the stock. The vertically running flutes on an endmill allow the tool to cut horizontally, while vertical plunges are more demanding on the tool. Lower plunge rates prevent tool damage & maintain lower temperatures while boring holes. All plunging cuts should be ramped , as gradual plunging while traveling across the stock will reduce tool stress. \\[ Plunge Rate(in/min) = Feed Rate (in/min) * {1 \\over 2} \\] Stepdown The vertical depth of each pass of the tool into the stock. Best practice is to maintain a step down of \u2264 50% of the tool diameter , however, may be increased while milling softer materials. The step down should always remain less than the tool diameter. \\[ Stepover(in) = Tool Diameter (in) * {3 \\over 5} \\] Stepover The space between passes of the tool into the stock. While pocketing, a maximum stepover of 50% can be used, however lower stepover values will leave a better surface finish. \\[ Stepover(in) = Tool Diameter (in) * {9 \\over 20} \\]","title":"Feeds &amp; Speeds"},{"location":"Projects/MillingWorflow/#material-reference","text":"Feeds and speeds are equally dependent on material proterities and the specfic of your machoine & tool. Material Description Wax A easily milled medium, commonly used for casting cores, molds, and CNC program proofs. Cost Efficient, offcut may be saved, melted & reused Environmentally Friendly Safe, no hazardous waste or fumes High Dimensional Accuracy Self-lubricating Easy on Tooling Surface Speed (ft/min) = 200 Chip Load (in) - 1/8\" Tool Diameter - 0.0089 - 0.005 1/4\" Tool Diameter - 0.010 - 0.015 3/8\" Tool Diameter - 0.015 - 0.020 \u2265 1/2\" Tool Diameter - 0.025 - 0.033 Soft Wood A accessible & stylish medium, not to tricky to mill, often used for large scale parts - Pine, Spruce, Cedar, etc. Light weight, low density Sustainable resource, softwoods grow at a rapid rate Cheap & readily available Easily milled Surface Speed (ft/min) = 650 Chip Load (in) - 1/8\" Tool Diameter - 0.004 - 0.006 1/4\" Tool Diameter - 0.011 - 0.013 3/8\" Tool Diameter - 0.017 - 0.020 \u2265 1/2\" Tool Diameter - 0.021 - 0.023 Hard Wood Similar benefits to soft wood, can be a bit more costly - Maple, Walnut, Cherry, Ash, etc. Extremely Durable Enhanced strength when compared to softwoods, higher density Naturally more fire resistance than softwoods Surface Speed (ft/min) = 650 Chip Load (in) - 1/8\" Tool Diameter - 0.003 - 0.005 1/4\" Tool Diameter - 0.009 - 0.011 3/8\" Tool Diameter - 0.016 - 0.018 \u2265 1/2\" Tool Diameter - 0.019 - 0.021 Medium Density Fiberboard MDF An easily machined & finished material, relatively cheap, commonly used for jigs, fixtures, vacuum molds & engraving. \u26a0\ufe0f Strong Dust Collection Required , as the fused nature of the material creates extremely fine dust. Affordable & readily available Consistent, dense, heavy, flat & stiff Flex & crack resistant Easily machined Easy to post-process, paint & seal Surface Speed (ft/min) = 650 Chip Load (in) - 1/8\" Tool Diameter - 0.004 - 0.007 1/4\" Tool Diameter - 0.013 - 0.016 3/8\" Tool Diameter - 0.020 - 0.023 \u2265 1/2\" Tool Diameter - 0.025 - 0.027 Oriented Strand Board OBS A strong, light weight, cost-efficient material, a great choice for large scale stiff parts. Similar to plywood but contains no natural defects, knot free and consistent density Environmentally friendly, often produced from sustainable rapid growing trees Recyclable into new OBS Stiff & lightweight Surface Speed (ft/min) = 650 Chip Load (in) - 1/8\" Tool Diameter - 0.004 - 0.006 1/4\" Tool Diameter - 0.011 - 0.013 3/8\" Tool Diameter - 0.017 - 0.020 \u2265 1/2\" Tool Diameter - 0.021 - 0.023 High-density Polyethylene HDPE A soft-ish plastic, great for prototyping but a tricky material to mill. Impact resistant at low temperatures Great Chemical resistance UV Resistant Moisture Resistant Stiff & strong Emits not hazardous odors or waste Surface Speed (ft/min) = 450 Chip Load (in) - 1/8\" Tool Diameter - 0.003 - 0.006 1/4\" Tool Diameter - 0.007 - 0.010 3/8\" Tool Diameter - 0.010 - 0.012 \u2265 1/2\" Tool Diameter - 0.012 - 0.016 Polyetheretherketone PEEK A high-performance thermoplastic, great for structural applications with resistance to fatigue and stress-cracking. \u26a0\ufe0f PEEK is rather abrasive on tooling, Carbide or Polycrystalline (PCD) tooling should be used . Comparable performance to Human bone tissue Resistant to chemicals and radiation Great strength to weight ratio Creep-resistant & long-wearing Great strength to weight ratio Temperature resistant, can operate up to 480\u00b0 F Easy to machine Surface Speed (ft/min) = 500 Chip Load (in) - 1/8\" Tool Diameter - 0.002 - 0.004 1/4\" Tool Diameter - 0.006 - 0.009 3/8\" Tool Diameter - 0.008 - 0.010 \u2265 1/2\" Tool Diameter - 0.010 - 0.012 Polyetherimide PEI A high-performance thermoplastic, with great heat, solvent & flame resistant. Often used in applications with long term steam exposure. High deflection temperature at 400\u00b0 F Resistant to chemicals and radiation Creep-resistant, strong & rigid Heat & flame resistant Surface Speed (ft/min) = 360 Chip Load (in) - 1/8\" Tool Diameter - 0.002 - 0.004 1/4\" Tool Diameter - 0.006 - 0.009 3/8\" Tool Diameter - 0.008 - 0.010 \u2265 1/2\" Tool Diameter - 0.010 - 0.012 Polyvinyl Chloride PVC An cost efficient & accessible plastic, typically used across industry but offers a cheap & lightweight medium. Lightweight & durable Easy to process Low cost & accessible Waterproof Easy to machine Surface Speed (ft/min) = 250 Chip Load (in) - 1/8\" Tool Diameter - 0.002 - 0.004 1/4\" Tool Diameter - 0.006 - 0.009 3/8\" Tool Diameter - 0.008 - 0.010 \u2265 1/2\" Tool Diameter - 0.010 - 0.012 Polyoxymethylene POM A general purpose, good all around thermoplastic - also know as Acetal or Delrin . Strong, tough & ridged Great impact strength Easy to machine High dimensional accuracy Wear resistant Surface Speed (ft/min) = 375 Chip Load (in) - 1/8\" Tool Diameter - 0.002 - 0.004 1/4\" Tool Diameter - 0.006 - 0.009 3/8\" Tool Diameter - 0.008 - 0.010 \u2265 1/2\" Tool Diameter - 0.010 - 0.012 Acrylonitrile Butadiene Styrene ABS Easily accessed & low cost thermoplastic, commonly used for molding applications. Ridged, good abrasion and strain resistance High dimensional accuracy Good impact resistance Can be chemically welded Good insulating properties Easy to machine Surface Speed (ft/min) = 300 Chip Load (in) - 1/8\" Tool Diameter - 0.002 - 0.004 1/4\" Tool Diameter - 0.006 - 0.009 3/8\" Tool Diameter - 0.008 - 0.010 \u2265 1/2\" Tool Diameter - 0.010 - 0.012 Polycarbonate PC An incredibly strong and possibly transparent thermoplastic, known for maintained temperature resistance. Outstanding strength, stiffness & impact resistance Resists cracking, chips, dents & scratches Easy to paint Chemically weldable Surface Speed (ft/min) = 360 Chip Load (in) - 1/8\" Tool Diameter - 0.002 - 0.004 1/4\" Tool Diameter - 0.006 - 0.009 3/8\" Tool Diameter - 0.008 - 0.010 \u2265 1/2\" Tool Diameter - 0.010 - 0.012 Nylon A cost-effective & long-lasting thermoplastic, used in cases of required mechanical dampening or electrical insulation. Strong & durable Lightweight & elastic Low friction Corrosion & abrasion resistant Great insulating prosperities Surface Speed (ft/min) = 400 Chip Load (in) - 1/8\" Tool Diameter - 0.002 - 0.004 1/4\" Tool Diameter - 0.006 - 0.009 3/8\" Tool Diameter - 0.008 - 0.010 \u2265 1/2\" Tool Diameter - 0.010 - 0.012 Acrylic A lightweight insulating thermoplastic, serves as an effective replacement for glass. \u26a0\ufe0f Acrylic is prone to stress cracks & fractures during milling & post-processing. Transparent & UV resistant Good impact resistance Great thermal insulation Surface Speed (ft/min) = 500 , 130 without coolant Chip Load (in) - 1/8\" Tool Diameter - 0.003 - 0.005 1/4\" Tool Diameter - 0.008 - 0.010 3/8\" Tool Diameter - 0.010 - 0.012 \u2265 1/2\" Tool Diameter - 0.012 - 0.015 Carbon Fiber A strong & lightweight composite of carbon based fibers, desirable for various industrial applications due to its heat & chemical resistance. \u26a0\ufe0f Carbon fiber is incredibly abrasive and will wear down tooling & dull bits will pull fibers from the composite instead of cutting through them. The use of Carbide and Polycrystalline Diamond (PCD) bits are optimal while milling carbon fiber , as they offer a superior wear resistance. Lightweight Stiff & Strong High temperature tolerance with low thermal expansion Resistant to chemical abrasion Surface Speed (ft/min) = 5.45 Chip Load (in) - 1/8\" Tool Diameter - 0.003 - 0.006 1/4\" Tool Diameter - 0.009 - 0.012 3/8\" Tool Diameter - 0.016 - 0.018 \u2265 1/2\" Tool Diameter - 0.023 - 0.025 Aluminium An accessible, easy to mill metal, seen across thermal & electrical conducting components. Easy to machine Non-magnetic Lightweight & durable metal Good electrical & heat conductor Surface Speed (ft/min) = 600 , 200 without coolant Chip Load (in) - 1/8\" Tool Diameter - 0.003 - 0.004 1/4\" Tool Diameter - 0.005 - 0.007 3/8\" Tool Diameter - 0.006 - 0.008 \u2265 1/2\" Tool Diameter - 0.008 - 0.010 Brass A easy to machine & highly conductive metal, ideal for low friction & intricate parts. Easy to machine Non-magnetic Highly electrical & thermal conductive Wear & corrosion resistant High malleability Antibacterial Surface Speed (ft/min) = 600 Chip Load (in) - 1/8\" Tool Diameter - 0.0004 - 0.0010 1/4\" Tool Diameter - 0.0005 - 0.0020 3/8\" Tool Diameter - 0.0005 - 0.0030 \u2265 1/2\" Tool Diameter - 0.0010 - 0.0060 Copper A malleable metal, typically used for its high electrical & thermal conductivity. Non-magnetic High electrical & thermal conductivity Wear & corrosion resistant High malleability Antibacterial Surface Speed (ft/min) = 550 Chip Load (in) - 1/8\" Tool Diameter - 0.0004 - 0.0010 1/4\" Tool Diameter - 0.0005 - 0.0020 3/8\" Tool Diameter - 0.0005 - 0.0030 \u2265 1/2\" Tool Diameter - 0.0010 - 0.0060 Steel An iron alloy with high strength & fracture resistance, typically used in situations requiring its high tensile strength, such as tools & machines. High strength & durable High fracture resistance Wear & corrosion resistant Surface Speed (ft/min) = 200 , 50 without coolant Chip Load (in) - 1/8\" Tool Diameter - 0.0004 - 0.0008 1/4\" Tool Diameter - 0.0008 - 0.0010 3/8\" Tool Diameter - 0.0012 - 0.0015 \u2265 1/2\" Tool Diameter - 0.0015 - 0.0025 Insulation Foam A low cost, accessible & easy to mill material, commonly used for large molds & as cores for lightweight parts. Easy to machine High mechanical strength with very low density Thermal insulating properties Cheap & accessible Resistance to water absorption Surface Speed (ft/min) = 1000 Chip Load (in) - 1/8\" Tool Diameter - 0.004 - 0.006 1/4\" Tool Diameter - 0.011 - 0.013 3/8\" Tool Diameter - 0.017 - 0.020 \u2265 1/2\" Tool Diameter - 0.021 - 0.023","title":"Material Reference"},{"location":"Projects/MillingWorflow/#feeds-speeds-calculator","text":"Metric? Tool Diameter ( in mm ): Flute Count: Surface Speed ( ft/min M/min ): Chip Load ( in mm ): Spindle Speed (RPM): Feed Rate ( in/min mm/min ): Plunge Rate ( in/min mm/min ): Stepdown ( in mm ): Stepover ( in mm ): Calculate Clear","title":"Feeds &amp; Speeds Calculator"},{"location":"Projects/MillingWorflow/#fusion-360-cam","text":"Fusion 360 Manufacturing Overview Fusion 360 & Bantam Milling Fusion 360 Bantam Tool Library","title":"Fusion 360 CAM"},{"location":"Projects/MillingWorflow/#gale-crater-mill","text":"","title":"Gale Crater Mill"},{"location":"Projects/MillingWorflow/#wax-seal-stamp","text":"","title":"Wax Seal Stamp"},{"location":"Projects/MillingWorflow/#chocolate-molding","text":"","title":"Chocolate Molding"},{"location":"Projects/MillingWorflow/#vectric-aspire","text":"VCarve & Bantam Milling Bantam Post-processer for Vectric Aspire","title":"Vectric Aspire"},{"location":"Projects/MillingWorflow/#topography-paper-weight","text":"Terrain2STL Caption Caption Caption","title":"Topography Paper Weight"},{"location":"Projects/MillingWorflow/#bantam-tools-cnc-software","text":"","title":"Bantam Tools CNC Software"},{"location":"Projects/MillingWorflow/#pcb-badge","text":"Inkscape to Eagle https://www.cnccookbook.com/machining-carbon-fiber-composites-drilling-cnc-tools/ \u21a9 https://dragonplate.com/how-to-cut-carbon-fiber \u21a9 https://www.gutenberg.org/files/12299/12299-h/12299-h.htm \u21a9 https://www.practicalmachinist.com/vb/general-archive/face-milling-pvc-152424/ \u21a9 https://www.precisebits.com/tutorials/spindle-rpm \u21a9 https://pub.pages.cba.mit.edu/feed_speeds/ \u21a9 https://www.protolabs.com/resources/design-tips/cnc-machining-materials/ \u21a9 https://www.3erp.com/blog/cnc-milling-materials-choose-application/ \u21a9 https://www.hubs.com/knowledge-base/selecting-right-cnc-material/ \u21a9","title":"PCB Badge"},{"location":"Projects/Octoprint/","tags":["Software","Electronics","3D Printing","Print Farm","Raspberry Pi"],"text":".profilepic { display: inline; float: left; margin-top: -7px; width: 35px; height: 34px; border-radius: 50%; } .abtlinks a { color: var(--md-default-fg-color); } .share { float:right; margin-top: 0px; font-size: 1.1em; } .share a { color: inherit; } .twitter { padding-left: 0.2em; padding-right: 0.2em; } .share a.twitter:hover { color: #00acee; } .fb { padding-left: 0.2em; padding-right: 0.2em; } .share a.fb:hover { color: #3b5998; } .pin { padding-left: 0.2em; padding-right: 0.2em; } .share a.pin:hover { color: #E60023; } .ln { padding-left: 0.2em; padding-right: 0.2em; } .share a.ln:hover { color: #0e76a8; } .email { padding-left: 0.2em; padding-right: 1.5em; } @media (max-width: 40.55384615384616em) { .share { margin-top: -3.5em; margin-right: -1.4em; } } @media (max-width: 37.4em) { .share { margin-top: -4.8em; margin-right: -1.4em; } } @media (max-width: 35em) { .year { display: none; } .share { font-size: 1em; margin-top: 0.05em; margin-right: -1.5em; } } @media (max-width: 28em) { .profilepic { margin-top: -4.5px; width: 30px; height: 30px; } .abtlinks { font-size: 0.9em; } .year { display: none; } .share { font-size: 0.9em; margin-top: 0.05em; margin-right: -1.5em; } } Octoprint Setup Documentation \u00b6 Teddy Warner | Junior Year - 2021 | 9-11 minutes Octoprint takes 3D printing to new heights, creating a more concise workflow with more accessible machine control. The opensource Octoprint project was created and maintained by Gina H\u00e4u\u00dfge . The software enables a machine with a web interface with full machine controls and a world of community plugins - all of which run on a Raspberry Pi made Server with an octoprint image. I use Octoprint on all of my personal printers, and a special CNC -focused fork of the software for my MPCNC . As mentioned above, web interfacing a machine creates a more concise workflow and thus is great for personal machines. However, an Octoprint setup shines even more in a print farm instance. During the winter months of my sophomore year (2020) I set up secure Octoprint instances on each of my lab\u2019s array of 20 FDM printers. Each of my setup instances can be read seen under the My Octoprint Instances section of this page. Octoprint Installation \u00b6 Octoprint Installation Requirements You\u2019ll need a Raspberry Pi (Recommended hardware: Raspberry Pi 3B, 3B+ or 4B) , a sufficient power source for the Pi, as well as a micro SD card (4GB or larger) to flash the Octorpint image to. Download the Latest Octopi Image First, download and flash the latest Octoprint image (linked above). This Pi image can be flashed as you would with any other Raspberry Pi project - I use balenaEtcher for flashing, its simple 3-step interface makes the process super straightforward. After a successful flash of this image on your Pi\u2019s SD card configure your WiFi information in the octopi-wpa-supplicant.txt located on the flashed SD card (If you\u2019re using wired internet, you can skip this setup) . To update the octopi-wpa-supplicant.txt file with your network, open the file in a code editor of your choice. Do not use WordPad (Windows) or TextEdit (MacOS X) These editors will mess with the file layout, and cause problems with your setup. Next, locate the type of network you\u2019ll be connecting to - for this example, I\u2019ll be using the WPA/WPA2 Secured standard, ## WPA/WPA2 secured #network={ # ssid=\"put SSID here\" # psk=\"put password here\" #} for any type of connection you choose, you can enable it by uncommenting the sections lines with a single hashtag, leaving you with a block like below. ## WPA/WPA2 secured network = { ssid = \"put SSID here\" // (1) psk = \"put password here\" // (2) } Replace \u201cput SSID here\u201d with your network\u2019s SSID. Replace \u201cput password here\u201d with your network\u2019s password. Next, scroll down to the bottom of the document to the section starting \u201d# Uncomment the country your Pi is in\u2026\u201d . Here, remove the hashtag in front of your network\u2019s country, and add a hashtag in front of all other (non-selected) countries. Then, after saving your file and ejecting your SD, you can install your flashed SD in your Pi and boot. Next, some basic Pi config. Make sure you are on the same WiFi network you set up your Pi on, and then SSH into your booted Pi at the IP octopi.local with the Pi\u2019s default credentials (Username - pi / Password - raspberry ). I use Putty as my SSH client as again, it\u2019s pretty straightforward to use. Once connected to your Pi, run the command \u2026 1 sudo raspi - config to open the configuration GUI . Here you can change your Pi\u2019s credentials (highly recommended), set up your local timezone (to allow for accurate machine ETAs), and change your machine\u2019s hostname (thus changing the URL from the default octopi.local to YOURHOSTNAME.local ). After all, changes, be sure to reboot your Pi. Congrats! You have now installed Octoprint on your Raspberry Pi, and can now connect to its web server with the URL http://octopi.local ( or if you changed your hostname, with the URL http://YOURHOSTNAME.local ). Octoprint Configuration \u00b6 With an Octoprint instance up and running, the difficult part of the setup is complete. Access to the web interface allows for easy machine and interface setup, in addition to some more customizations in the form of community plug-ins. Interface Config \u00b6 Beginning with the configuration of the interface itself, basic settings can be found in the web interface by clicking on the wrench icon on the right side of the navigation bar located at the top of the interface. Scrolling through these menus allows for total customization of the interface. A good starting place is under the Octoprint section in the Appearance menu. Here (as shown below) you can customize the interface title - displayed in the interface\u2019s navigation bar, as well as the default interface highlight color. Printer Setup \u00b6 To enable Octoprint\u2019s main purpose, a machine must be connected to the hardware running Octoprint via serial. This connection can come in the form of a USB cable in the simplest setup, or GPIO pins can be used for communication as well. Personal Setup In the case of my Prusa I3 MK3S+, I took advantage of this GPIO communication setup, to allow for the mounting of my Raspberry Pi directly under my printer\u2019s mainboard (via this Raspberry Pi 4 Case) without a bulky USB cable connecting them \u2026 Your serial connection must be set up software side in the Serial Connection menu found under the Printer section of the interface settings. Octoprint can automatically detect your Serial Port and Baudrate when AUTO is selected in these dropdowns, however, you may also specify specifics for each field. Next, a machine profile must be created for your connected machine to ensure safe machine control with regard to hardware limits. A profile can be created in the Printer Profiles menu under the Printer section of the interface\u2019s settings. Create a new profile by clicking the Add Profile\u2026 button in the lower right corner of the menu, and fill out the profile with your machine\u2019s information. One key feature of Octoprint is its webcam machine stream, allowing for remote supervision of your machine. Anything from USB webcams to Raspberry Pi ribbon cable cameras can be used for this stream & Octoprint will automatically find this attached webcam and will use it to stream your machine (some more exotic cameras or mounting styles may require an additional configuration - discussed below). Personal Setup On my printer, I\u2019ve mounted a Raspberry Pi camera to the X-Axis stepper of my machine (via this Raspberry Pi camera mount), yielding a pretty nice side view of prints, shown below. Due to my printers camera mount, my Raspberry Pi camera is heald in an upsidedown orientation and thus needs to be compensated for on the software side. Luckily, in the Webcam & Timelapse menu under the Features section of the Octorprint interface settings, webcam orientation can be changed. In addition, more advanced webcam options can be found, allowing for the use of almost all cameras connected to the hardware running Octorpint. Plugins \u00b6 One of the greatest features of Octorpint stems from its open-source nature \u2026 its community plugins. Under the Plugin Manager menu in the Octoprint section of the interface\u2019s settings, plugins can be added to the octoprint instance, allowing for entire customization of the instance from the interface to machine interaction. There are tons upon tons of plugins that exist in the Octorprint community, and you may even develop your own, however below is a list of plugins I find to be amazing additions to an instance Note Some of these shown plugins are machine specific to my Prusa I3 MK3S+ Access Anywhere - The Spaghetti Detective 1 - AI-powered failure detection & Remote Octoprint Access Bed Visualizer 2 - Uses Plotly js library to render a 3D surface of the bed\u2019s reported mesh Custom Background 3 - Change the background image on the temperature graph Exclude Region 4 - Adds the ability to prevent printing within rectangular or circular regions of the currently active gcode file Floating Navbar 5 - Make the navbar stick to the top of the page while scrolling GcodeEditor 6 - Edit gcode that\u2019s been uploaded to OctoPrint Heater Timeout 7 - Automatically shut off heaters if no print has been started Navbar Temp 8 - Display temperatures on the navbar Octoprint Display ETA 9 - Show finish time ( ETA ) for current print PrettyGCode 10 - adds a 3D GCode visualizer tab in Octoprint Themeify 11 - Beautiful themes for octoprint ipOnConnect 12 - Display the ip address of the connected OctoPrint instance on the control panel MK3S+ specific Octoprint Interface Workflow \u00b6 Although the Octoprint web interface is rather intuitive, the number of stock features (not to mention plugin-enabled ones) can be a bit overwhelming without a bit of exploring. Below is a short PowerPoint I put together walking through the basics of the interface for students using my lab print farm, allowing for a bit of knowledge before exploration. My Octoprint Instances \u00b6 My Personal Octoprint Enabled Prusa I3 MK3S+ My Lab's Octoprint Enabled Printer Farm https://plugins.octoprint.org/plugins/thespaghettidetective/ \u21a9 https://plugins.octoprint.org/plugins/bedlevelvisualizer/ \u21a9 https://plugins.octoprint.org/plugins/custombackground/ \u21a9 https://plugins.octoprint.org/plugins/excluderegion/ \u21a9 https://plugins.octoprint.org/plugins/floatingnavbar/ \u21a9 https://plugins.octoprint.org/plugins/GcodeEditor/ \u21a9 https://plugins.octoprint.org/plugins/HeaterTimeout/ \u21a9 https://plugins.octoprint.org/plugins/navbartemp/ \u21a9 https://plugins.octoprint.org/plugins/display_eta/ \u21a9 https://plugins.octoprint.org/plugins/prettygcode/ \u21a9 https://plugins.octoprint.org/plugins/themeify/ \u21a9 https://plugins.octoprint.org/plugins/ipOnConnect/ \u21a9","title":"Octoprint Setup"},{"location":"Projects/Octoprint/#octoprint-setup-documentation","text":"Teddy Warner | Junior Year - 2021 | 9-11 minutes Octoprint takes 3D printing to new heights, creating a more concise workflow with more accessible machine control. The opensource Octoprint project was created and maintained by Gina H\u00e4u\u00dfge . The software enables a machine with a web interface with full machine controls and a world of community plugins - all of which run on a Raspberry Pi made Server with an octoprint image. I use Octoprint on all of my personal printers, and a special CNC -focused fork of the software for my MPCNC . As mentioned above, web interfacing a machine creates a more concise workflow and thus is great for personal machines. However, an Octoprint setup shines even more in a print farm instance. During the winter months of my sophomore year (2020) I set up secure Octoprint instances on each of my lab\u2019s array of 20 FDM printers. Each of my setup instances can be read seen under the My Octoprint Instances section of this page.","title":"Octoprint Setup Documentation"},{"location":"Projects/Octoprint/#octoprint-installation","text":"Octoprint Installation Requirements You\u2019ll need a Raspberry Pi (Recommended hardware: Raspberry Pi 3B, 3B+ or 4B) , a sufficient power source for the Pi, as well as a micro SD card (4GB or larger) to flash the Octorpint image to. Download the Latest Octopi Image First, download and flash the latest Octoprint image (linked above). This Pi image can be flashed as you would with any other Raspberry Pi project - I use balenaEtcher for flashing, its simple 3-step interface makes the process super straightforward. After a successful flash of this image on your Pi\u2019s SD card configure your WiFi information in the octopi-wpa-supplicant.txt located on the flashed SD card (If you\u2019re using wired internet, you can skip this setup) . To update the octopi-wpa-supplicant.txt file with your network, open the file in a code editor of your choice. Do not use WordPad (Windows) or TextEdit (MacOS X) These editors will mess with the file layout, and cause problems with your setup. Next, locate the type of network you\u2019ll be connecting to - for this example, I\u2019ll be using the WPA/WPA2 Secured standard, ## WPA/WPA2 secured #network={ # ssid=\"put SSID here\" # psk=\"put password here\" #} for any type of connection you choose, you can enable it by uncommenting the sections lines with a single hashtag, leaving you with a block like below. ## WPA/WPA2 secured network = { ssid = \"put SSID here\" // (1) psk = \"put password here\" // (2) } Replace \u201cput SSID here\u201d with your network\u2019s SSID. Replace \u201cput password here\u201d with your network\u2019s password. Next, scroll down to the bottom of the document to the section starting \u201d# Uncomment the country your Pi is in\u2026\u201d . Here, remove the hashtag in front of your network\u2019s country, and add a hashtag in front of all other (non-selected) countries. Then, after saving your file and ejecting your SD, you can install your flashed SD in your Pi and boot. Next, some basic Pi config. Make sure you are on the same WiFi network you set up your Pi on, and then SSH into your booted Pi at the IP octopi.local with the Pi\u2019s default credentials (Username - pi / Password - raspberry ). I use Putty as my SSH client as again, it\u2019s pretty straightforward to use. Once connected to your Pi, run the command \u2026 1 sudo raspi - config to open the configuration GUI . Here you can change your Pi\u2019s credentials (highly recommended), set up your local timezone (to allow for accurate machine ETAs), and change your machine\u2019s hostname (thus changing the URL from the default octopi.local to YOURHOSTNAME.local ). After all, changes, be sure to reboot your Pi. Congrats! You have now installed Octoprint on your Raspberry Pi, and can now connect to its web server with the URL http://octopi.local ( or if you changed your hostname, with the URL http://YOURHOSTNAME.local ).","title":"Octoprint Installation"},{"location":"Projects/Octoprint/#octoprint-configuration","text":"With an Octoprint instance up and running, the difficult part of the setup is complete. Access to the web interface allows for easy machine and interface setup, in addition to some more customizations in the form of community plug-ins.","title":"Octoprint Configuration"},{"location":"Projects/Octoprint/#interface-config","text":"Beginning with the configuration of the interface itself, basic settings can be found in the web interface by clicking on the wrench icon on the right side of the navigation bar located at the top of the interface. Scrolling through these menus allows for total customization of the interface. A good starting place is under the Octoprint section in the Appearance menu. Here (as shown below) you can customize the interface title - displayed in the interface\u2019s navigation bar, as well as the default interface highlight color.","title":"Interface Config"},{"location":"Projects/Octoprint/#printer-setup","text":"To enable Octoprint\u2019s main purpose, a machine must be connected to the hardware running Octoprint via serial. This connection can come in the form of a USB cable in the simplest setup, or GPIO pins can be used for communication as well. Personal Setup In the case of my Prusa I3 MK3S+, I took advantage of this GPIO communication setup, to allow for the mounting of my Raspberry Pi directly under my printer\u2019s mainboard (via this Raspberry Pi 4 Case) without a bulky USB cable connecting them \u2026 Your serial connection must be set up software side in the Serial Connection menu found under the Printer section of the interface settings. Octoprint can automatically detect your Serial Port and Baudrate when AUTO is selected in these dropdowns, however, you may also specify specifics for each field. Next, a machine profile must be created for your connected machine to ensure safe machine control with regard to hardware limits. A profile can be created in the Printer Profiles menu under the Printer section of the interface\u2019s settings. Create a new profile by clicking the Add Profile\u2026 button in the lower right corner of the menu, and fill out the profile with your machine\u2019s information. One key feature of Octoprint is its webcam machine stream, allowing for remote supervision of your machine. Anything from USB webcams to Raspberry Pi ribbon cable cameras can be used for this stream & Octoprint will automatically find this attached webcam and will use it to stream your machine (some more exotic cameras or mounting styles may require an additional configuration - discussed below). Personal Setup On my printer, I\u2019ve mounted a Raspberry Pi camera to the X-Axis stepper of my machine (via this Raspberry Pi camera mount), yielding a pretty nice side view of prints, shown below. Due to my printers camera mount, my Raspberry Pi camera is heald in an upsidedown orientation and thus needs to be compensated for on the software side. Luckily, in the Webcam & Timelapse menu under the Features section of the Octorprint interface settings, webcam orientation can be changed. In addition, more advanced webcam options can be found, allowing for the use of almost all cameras connected to the hardware running Octorpint.","title":"Printer Setup"},{"location":"Projects/Octoprint/#plugins","text":"One of the greatest features of Octorpint stems from its open-source nature \u2026 its community plugins. Under the Plugin Manager menu in the Octoprint section of the interface\u2019s settings, plugins can be added to the octoprint instance, allowing for entire customization of the instance from the interface to machine interaction. There are tons upon tons of plugins that exist in the Octorprint community, and you may even develop your own, however below is a list of plugins I find to be amazing additions to an instance Note Some of these shown plugins are machine specific to my Prusa I3 MK3S+ Access Anywhere - The Spaghetti Detective 1 - AI-powered failure detection & Remote Octoprint Access Bed Visualizer 2 - Uses Plotly js library to render a 3D surface of the bed\u2019s reported mesh Custom Background 3 - Change the background image on the temperature graph Exclude Region 4 - Adds the ability to prevent printing within rectangular or circular regions of the currently active gcode file Floating Navbar 5 - Make the navbar stick to the top of the page while scrolling GcodeEditor 6 - Edit gcode that\u2019s been uploaded to OctoPrint Heater Timeout 7 - Automatically shut off heaters if no print has been started Navbar Temp 8 - Display temperatures on the navbar Octoprint Display ETA 9 - Show finish time ( ETA ) for current print PrettyGCode 10 - adds a 3D GCode visualizer tab in Octoprint Themeify 11 - Beautiful themes for octoprint ipOnConnect 12 - Display the ip address of the connected OctoPrint instance on the control panel MK3S+ specific","title":"Plugins"},{"location":"Projects/Octoprint/#octoprint-interface-workflow","text":"Although the Octoprint web interface is rather intuitive, the number of stock features (not to mention plugin-enabled ones) can be a bit overwhelming without a bit of exploring. Below is a short PowerPoint I put together walking through the basics of the interface for students using my lab print farm, allowing for a bit of knowledge before exploration.","title":"Octoprint Interface Workflow"},{"location":"Projects/Octoprint/#my-octoprint-instances","text":"My Personal Octoprint Enabled Prusa I3 MK3S+ My Lab's Octoprint Enabled Printer Farm https://plugins.octoprint.org/plugins/thespaghettidetective/ \u21a9 https://plugins.octoprint.org/plugins/bedlevelvisualizer/ \u21a9 https://plugins.octoprint.org/plugins/custombackground/ \u21a9 https://plugins.octoprint.org/plugins/excluderegion/ \u21a9 https://plugins.octoprint.org/plugins/floatingnavbar/ \u21a9 https://plugins.octoprint.org/plugins/GcodeEditor/ \u21a9 https://plugins.octoprint.org/plugins/HeaterTimeout/ \u21a9 https://plugins.octoprint.org/plugins/navbartemp/ \u21a9 https://plugins.octoprint.org/plugins/display_eta/ \u21a9 https://plugins.octoprint.org/plugins/prettygcode/ \u21a9 https://plugins.octoprint.org/plugins/themeify/ \u21a9 https://plugins.octoprint.org/plugins/ipOnConnect/ \u21a9","title":"My Octoprint Instances"},{"location":"Projects/PROJECT-TEMPLATE/","tags":[null],"text":".profilepic { display: inline; float: left; margin-top: -7px; width: 35px; height: 34px; border-radius: 50%; } .abtlinks a { color: var(--md-default-fg-color); } .share { float:right; margin-top: 0px; font-size: 1.1em; } .share a { color: inherit; } .twitter { padding-left: 0.2em; padding-right: 0.2em; } .share a.twitter:hover { color: #00acee; } .fb { padding-left: 0.2em; padding-right: 0.2em; } .share a.fb:hover { color: #3b5998; } .pin { padding-left: 0.2em; padding-right: 0.2em; } .share a.pin:hover { color: #E60023; } .ln { padding-left: 0.2em; padding-right: 0.2em; } .share a.ln:hover { color: #0e76a8; } .email { padding-left: 0.2em; padding-right: 1.5em; } @media (max-width: 40.55384615384616em) { .share { margin-top: -3.5em; margin-right: -1.4em; } } @media (max-width: 37.4em) { .share { margin-top: -4.8em; margin-right: -1.4em; } } @media (max-width: 35em) { .year { display: none; } .share { font-size: 1em; margin-top: 0.05em; margin-right: -1.5em; } } @media (max-width: 28em) { .profilepic { margin-top: -4.5px; width: 30px; height: 30px; } .abtlinks { font-size: 0.9em; } .year { display: none; } .share { font-size: 0.9em; margin-top: 0.05em; margin-right: -1.5em; } } PROJECT-TITLE \u00b6 Teddy Warner | Junior Year - 2022 | X-X minutes Hyperlink Caption Solid Button Outline Button Lorem ipsum 1 dolor sit amet, consectetur adipiscing elit. 2 Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor. Lorem ipsum dolor sit amet, consectetur adipiscing elit Vestibulum convallis sit amet nisi a tincidunt In hac habitasse platea dictumst In scelerisque nibh non dolor mollis congue sed et metus Praesent sed risus massa Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque Method Description GET Fetch resource PUT Update resource DELETE Delete resource \\[ \\operatorname{ker} f=\\{g\\in G:f(g)=e_{H}\\}{\\mbox{.}} \\] PYTHON EXAMPLE 1 import tensorflow as tf C++ EXAMPLE 1 2 3 4 5 6 7 8 9 10 void setup () { pinMode ( 0 , OUTPUT ); } void loop () { digitalWrite ( 0 , HIGH ); delay ( 500 ); digitalWrite ( 0 , LOW ); delay ( 500 ); } YAML EXAMPLE 1 2 3 theme : features : - content.code.annotate # (1) I\u2019m a code annotation! I can contain code , formatted text , images, \u2026 basically anything that can be expressed in Markdown. NOTE EXAMPLE Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. INFO EXAMPLE Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. ABSTRACT EXAMPLE Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. TIP EXAMPLE Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. SUCCESS EXAMPLE Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. QUESTION EXAMPLE Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. WARNING EXAMPLE Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. FAILURE EXAMPLE Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. DANGER EXAMPLE Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. BUG EXAMPLE Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. EXAMPLE Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. QUOTE EXAMPLE Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Lorem ipsum dolor sit amet, consectetur adipiscing elit. \u21a9 Lorem ipsum dolor sit amet, consectetur adipiscing elit. \u21a9","title":"PROJECT-TITLE"},{"location":"Projects/PROJECT-TEMPLATE/#project-title","text":"Teddy Warner | Junior Year - 2022 | X-X minutes Hyperlink Caption Solid Button Outline Button Lorem ipsum 1 dolor sit amet, consectetur adipiscing elit. 2 Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor. Lorem ipsum dolor sit amet, consectetur adipiscing elit Vestibulum convallis sit amet nisi a tincidunt In hac habitasse platea dictumst In scelerisque nibh non dolor mollis congue sed et metus Praesent sed risus massa Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque Method Description GET Fetch resource PUT Update resource DELETE Delete resource \\[ \\operatorname{ker} f=\\{g\\in G:f(g)=e_{H}\\}{\\mbox{.}} \\] PYTHON EXAMPLE 1 import tensorflow as tf C++ EXAMPLE 1 2 3 4 5 6 7 8 9 10 void setup () { pinMode ( 0 , OUTPUT ); } void loop () { digitalWrite ( 0 , HIGH ); delay ( 500 ); digitalWrite ( 0 , LOW ); delay ( 500 ); } YAML EXAMPLE 1 2 3 theme : features : - content.code.annotate # (1) I\u2019m a code annotation! I can contain code , formatted text , images, \u2026 basically anything that can be expressed in Markdown. NOTE EXAMPLE Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. INFO EXAMPLE Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. ABSTRACT EXAMPLE Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. TIP EXAMPLE Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. SUCCESS EXAMPLE Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. QUESTION EXAMPLE Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. WARNING EXAMPLE Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. FAILURE EXAMPLE Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. DANGER EXAMPLE Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. BUG EXAMPLE Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. EXAMPLE Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. QUOTE EXAMPLE Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Lorem ipsum dolor sit amet, consectetur adipiscing elit. \u21a9 Lorem ipsum dolor sit amet, consectetur adipiscing elit. \u21a9","title":"PROJECT-TITLE"},{"location":"Projects/ParametricGenerator/","tags":["CAD","Fusion 360","Parametric","3D Printing"],"text":".profilepic { display: inline; float: left; margin-top: -7px; width: 35px; height: 34px; border-radius: 50%; } .abtlinks a { color: var(--md-default-fg-color); } .share { float:right; margin-top: 0px; font-size: 1.1em; } .share a { color: inherit; } .twitter { padding-left: 0.2em; padding-right: 0.2em; } .share a.twitter:hover { color: #00acee; } .fb { padding-left: 0.2em; padding-right: 0.2em; } .share a.fb:hover { color: #3b5998; } .pin { padding-left: 0.2em; padding-right: 0.2em; } .share a.pin:hover { color: #E60023; } .ln { padding-left: 0.2em; padding-right: 0.2em; } .share a.ln:hover { color: #0e76a8; } .email { padding-left: 0.2em; padding-right: 1.5em; } @media (max-width: 40.55384615384616em) { .share { margin-top: -3.5em; margin-right: -1.4em; } } @media (max-width: 37.4em) { .share { margin-top: -4.8em; margin-right: -1.4em; } } @media (max-width: 35em) { .year { display: none; } .share { font-size: 1em; margin-top: 0.05em; margin-right: -1.5em; } } @media (max-width: 28em) { .profilepic { margin-top: -4.5px; width: 30px; height: 30px; } .abtlinks { font-size: 0.9em; } .year { display: none; } .share { font-size: 0.9em; margin-top: 0.05em; margin-right: -1.5em; } } Parametric Bottle Cap Generator \u00b6 Teddy Warner | Junior Year - 2021 | 6-7 minutes Lost a lid or just want a more functional cap? Generate and print your own, compatible with any existing threads! Be Sure to check out this projects page on PrusaPrinters , and its Instructable ! Parametric Bottle Cap Generator Files CAD & Testing \u00b6 This model was designed in Fusion 360 and uses 3 required input parameters and standard Metric thread profile equations to generate a cap that will perfectly fit any of your threaded containers. Input Parameters can be found from an existing threaded connector following the documentation below and their values can be written in their corresponding Expression boxes in the Parameters spreadsheet of the attached Parametric Bottle Cap Fusion 360 file (shown below) Project Origins I originally set out to make this generator due to a need for a lower profile cap for the isopropyl alcohol bottle I keep next to my printer. The thread profile of this bottle is rather abnormal, and thus I found myself finding thread component values with standard Metric thread profile equations, the same used by the generator. Following the standard Metric thread profile 1 (displayed in the diagram below)\u2026 The model derives all necessary values from three required input parameters, all of which are fed into Fusion 360\u2019s coil tool, creating entirely parametrically generated threads. The calculations for user parameters derived from the three required input parameters are as followed \u2026 Thread Height - 0.8660254037844386 * ThreadPitch Hole Size - ConnectDiamater + ThreadHight ThreadDmax - ConnectDiamater ThreadDmin - ThreadDmax - 2 * 5 / 8 * ThreadHight Cap Diamater - HoleSize + ThreadHight Cap Height - ConnectLegnth + ThreadPitch / 2 + 1.5 mm The implementation of these standard Metric thread profile equations in a Fusion model parametrically was the real kicker of this design. Unfortunately, Fusion\u2019s native thread tool is incompatible with user parameters and thus was unusable in the case of this generator. In its place, I utilized Fusion\u2019s coil tool, manipulating the values found in the generator\u2019s user parameters to create the caps inner threads. The final working coil tool calculations are as followed \u2026 Diameter - ThreadDmax + ThreadHight / 4 * 2 Height - ConnectLegnth + ThreadPitch / 2 Pitch - ThreadPitch Angle - 0.0 deg Selection Size - ThreadHeight all of which are included, shown below, to generate the cap\u2019s threads. Following the Generation of the caps thread, an inner contour is added defined by the ISO 965-1 standard 2 - shown in the diagram below. This standard calls for radius value ThreadPitch / 4 , and thus the following values are used in the inner contour \u2026 Radius - ThreadPitch / 4 Radius Type - Constant The contour is created with Fusion\u2019s Fillet tool and the prior mentioned values, shown below. All this yields the successful basic generator, embedded below \u2026 \u2026 however, what fun would a custom cap generator be without a little customization. The generator includes four different body styles, Plain Single-Hole Salt-Shaker Lanyard \u2026 allowing for total cap customization. These styles can be changed, along with two other customization factors, discussed in the Cap Generation section below. Cap Generation - \u00b6 For documentation purposes, I created a new cap for my Nalgene water bottle \u2026 Required Measurements \u00b6 There are three measurements required to generate your cap, all of which can be taken from the existing threaded connector \u2026 Connector Diameter - Measure the diameter (in MM) of your existing connector, from the very farthest point (i.e. the point of the thread) on either side. Then, update the Expression value in the ConnectDiameter row (the box highlighted yellow below) with this found value. Connector Length - Measure the height (in MM) of your existing connector, from the top lip to underneath the threads. Then, update the Expression value in the ConnectLegnth row (the box highlighted yellow below) with this found value. Thread Pitch - Measure the thread pitch of your existing connector, the distance in MM between the points of two sequential threads. Then, update the Expression value in the ThreadPitch row (the box highlighted yellow below) with this found value. Optional Customization \u00b6 To offer a bit more customization to each generated cap, there are a couple of different preferences allowing for different functions. Number of Grips - The number of grips lining the edge of the cap can be changed in the Expression value of the NumofGrips row. I find values between 40 through 55 work best, but if your experimenting, going below 11 will stop the generation of grip chamfered. Grip Depth - The depths of these grips can be altered, determining how grippy your grips are. I\u2019ve found a value around 0.3 or 0.4 offers a good texture around the edge. Lid Style - The lid style of your cap can be toggled between 4 presets in the Fusion Parametric Bottle Cap file by navigating to Parametric-Bottle_Cap > Bodies > Styles in the Fusion browser. The lid styles can be toggled between via the eye icon to the left of each style. The four styles are included below, with each of the toggles highlighted. Plain - Single Hole - Salt Shaker - Lanyard - Congrats! You\u2019ve successfully generated your own bottle cap!, https://amesweb.info/Screws/metric-thread-profile-form-formula.aspx \u21a9 https://www.iso.org/standard/57778.html \u21a9","title":"Parametric Bottle Cap Generator"},{"location":"Projects/ParametricGenerator/#parametric-bottle-cap-generator","text":"Teddy Warner | Junior Year - 2021 | 6-7 minutes Lost a lid or just want a more functional cap? Generate and print your own, compatible with any existing threads! Be Sure to check out this projects page on PrusaPrinters , and its Instructable ! Parametric Bottle Cap Generator Files","title":"Parametric Bottle Cap Generator"},{"location":"Projects/ParametricGenerator/#cad-testing","text":"This model was designed in Fusion 360 and uses 3 required input parameters and standard Metric thread profile equations to generate a cap that will perfectly fit any of your threaded containers. Input Parameters can be found from an existing threaded connector following the documentation below and their values can be written in their corresponding Expression boxes in the Parameters spreadsheet of the attached Parametric Bottle Cap Fusion 360 file (shown below) Project Origins I originally set out to make this generator due to a need for a lower profile cap for the isopropyl alcohol bottle I keep next to my printer. The thread profile of this bottle is rather abnormal, and thus I found myself finding thread component values with standard Metric thread profile equations, the same used by the generator. Following the standard Metric thread profile 1 (displayed in the diagram below)\u2026 The model derives all necessary values from three required input parameters, all of which are fed into Fusion 360\u2019s coil tool, creating entirely parametrically generated threads. The calculations for user parameters derived from the three required input parameters are as followed \u2026 Thread Height - 0.8660254037844386 * ThreadPitch Hole Size - ConnectDiamater + ThreadHight ThreadDmax - ConnectDiamater ThreadDmin - ThreadDmax - 2 * 5 / 8 * ThreadHight Cap Diamater - HoleSize + ThreadHight Cap Height - ConnectLegnth + ThreadPitch / 2 + 1.5 mm The implementation of these standard Metric thread profile equations in a Fusion model parametrically was the real kicker of this design. Unfortunately, Fusion\u2019s native thread tool is incompatible with user parameters and thus was unusable in the case of this generator. In its place, I utilized Fusion\u2019s coil tool, manipulating the values found in the generator\u2019s user parameters to create the caps inner threads. The final working coil tool calculations are as followed \u2026 Diameter - ThreadDmax + ThreadHight / 4 * 2 Height - ConnectLegnth + ThreadPitch / 2 Pitch - ThreadPitch Angle - 0.0 deg Selection Size - ThreadHeight all of which are included, shown below, to generate the cap\u2019s threads. Following the Generation of the caps thread, an inner contour is added defined by the ISO 965-1 standard 2 - shown in the diagram below. This standard calls for radius value ThreadPitch / 4 , and thus the following values are used in the inner contour \u2026 Radius - ThreadPitch / 4 Radius Type - Constant The contour is created with Fusion\u2019s Fillet tool and the prior mentioned values, shown below. All this yields the successful basic generator, embedded below \u2026 \u2026 however, what fun would a custom cap generator be without a little customization. The generator includes four different body styles, Plain Single-Hole Salt-Shaker Lanyard \u2026 allowing for total cap customization. These styles can be changed, along with two other customization factors, discussed in the Cap Generation section below.","title":"CAD &amp; Testing"},{"location":"Projects/ParametricGenerator/#cap-generation-","text":"For documentation purposes, I created a new cap for my Nalgene water bottle \u2026","title":"Cap Generation -"},{"location":"Projects/ParametricGenerator/#required-measurements","text":"There are three measurements required to generate your cap, all of which can be taken from the existing threaded connector \u2026 Connector Diameter - Measure the diameter (in MM) of your existing connector, from the very farthest point (i.e. the point of the thread) on either side. Then, update the Expression value in the ConnectDiameter row (the box highlighted yellow below) with this found value. Connector Length - Measure the height (in MM) of your existing connector, from the top lip to underneath the threads. Then, update the Expression value in the ConnectLegnth row (the box highlighted yellow below) with this found value. Thread Pitch - Measure the thread pitch of your existing connector, the distance in MM between the points of two sequential threads. Then, update the Expression value in the ThreadPitch row (the box highlighted yellow below) with this found value.","title":"Required Measurements"},{"location":"Projects/ParametricGenerator/#optional-customization","text":"To offer a bit more customization to each generated cap, there are a couple of different preferences allowing for different functions. Number of Grips - The number of grips lining the edge of the cap can be changed in the Expression value of the NumofGrips row. I find values between 40 through 55 work best, but if your experimenting, going below 11 will stop the generation of grip chamfered. Grip Depth - The depths of these grips can be altered, determining how grippy your grips are. I\u2019ve found a value around 0.3 or 0.4 offers a good texture around the edge. Lid Style - The lid style of your cap can be toggled between 4 presets in the Fusion Parametric Bottle Cap file by navigating to Parametric-Bottle_Cap > Bodies > Styles in the Fusion browser. The lid styles can be toggled between via the eye icon to the left of each style. The four styles are included below, with each of the toggles highlighted. Plain - Single Hole - Salt Shaker - Lanyard - Congrats! You\u2019ve successfully generated your own bottle cap!, https://amesweb.info/Screws/metric-thread-profile-form-formula.aspx \u21a9 https://www.iso.org/standard/57778.html \u21a9","title":"Optional Customization"},{"location":"Projects/ProjectPortfolioSite/","tags":["Software","HTML","CSS","Javascript","Markdown","GitHub Actions","Git"],"text":".profilepic { display: inline; float: left; margin-top: -7px; width: 35px; height: 34px; border-radius: 50%; } .abtlinks a { color: var(--md-default-fg-color); } .share { float:right; margin-top: 0px; font-size: 1.1em; } .share a { color: inherit; } .twitter { padding-left: 0.2em; padding-right: 0.2em; } .share a.twitter:hover { color: #00acee; } .fb { padding-left: 0.2em; padding-right: 0.2em; } .share a.fb:hover { color: #3b5998; } .pin { padding-left: 0.2em; padding-right: 0.2em; } .share a.pin:hover { color: #E60023; } .ln { padding-left: 0.2em; padding-right: 0.2em; } .share a.ln:hover { color: #0e76a8; } .email { padding-left: 0.2em; padding-right: 1.5em; } @media (max-width: 40.55384615384616em) { .share { margin-top: -3.5em; margin-right: -1.4em; } } @media (max-width: 37.4em) { .share { margin-top: -4.8em; margin-right: -1.4em; } } @media (max-width: 35em) { .year { display: none; } .share { font-size: 1em; margin-top: 0.05em; margin-right: -1.5em; } } @media (max-width: 28em) { .profilepic { margin-top: -4.5px; width: 30px; height: 30px; } .abtlinks { font-size: 0.9em; } .year { display: none; } .share { font-size: 0.9em; margin-top: 0.05em; margin-right: -1.5em; } } Project Portfolio Site \u00b6 Teddy Warner | Summer - 2021 | 6-7 minutes The behind the scenes of the site you are on right now :) This site relies on MKdocs , a static site generator is written in python to create the content of the site, as well as the MKdocs Material Theme for customization. I used this same static site generator to create my Fab Academy Documentation Site , however, that site runs strictly on the MKdocs Material Theme without custom alterations. This site relies on the same structure as the prior Fab Academy Documentation Site but includes experiments with entirely custom components, and an altered MKdocs Material Theme . In addition to all that, it\u2019s also built and hosted through my personal GitHub Pages repo, under my personal domain. Repo Setup and Cloning \u00b6 To start the site I created a new GitHub Pages repo on my GitHub and cloned in some of my site files from my prior Fab Academy Documentation Site (the cloned files were just so site setup files, as well as a bit of content on my Fab Academy final project to be displayed on this site). I then pulled this repo to my local system folder with the command 1 git clone REPO-HERE # (1) Replace the text REPO-HERE with your site repo\u2019s Clone with SSH link. This can be found under the Clone button in most Git web interfaces (i.e. Gitlab, Github, etc.). Do I Need to Clone my Repo Locally? Modern Hosting Platforms such as GitHub or GitLab allow for Repo editing to take place directly in the browser, and thus technically speaking, one does not need to pull their site Repo locally. However, browser editing eliminates the possibility of locally hosting, and thus one cannot view changes before pushing publically. Despite this, If you\u2019d still like to work in a Browser-based editor, you may skip the SSH Setup and Site Publishing sections, and follow an editing and pushing workflow for your specific browser-based editor. SSH setup \u00b6 To clone a Git repository locally, an SSH key must be generated on your computer and then attached to your GitHub account. GitHub has really good documentation on creating a new SSH key and attaching it to your Git Web Interface (Github, Gitlab, etc.). The process for generating and attaching a new SSH key to your Git Web Interface is relatively pain-free when following this documentation and using the command written above. My process involved running these commands \u2026 ssh-keygen -t ed25519 -C \"<Your-SSH-Name-Here>\" # (1) Generating public/private ed25519 key pair. Enter file in which to save the key (/home/user/.ssh/id_ed25519) : # (2) Enter passphrase (empty for no passphrase) : # (3) Enter the same passphrase again : cat ~/.ssh/id_ed25519.pub | clip # (4) This generates a new SSH key on your computer. Click enter to confirm location. Enter a passphrase for your SSH key, you will need this password whenever you attempt to push your site. This copies your new SSH key to clipboard. Replace id_ed25519.pub with your filename. For example, use id_rsa.pub for RSA. Once copied to the clipboard, you can paste the newly generated SSH key in your SSH key settings in your Git Web Interface, to link your computer and your Git Web Interface. Now you can finally clone your site Repository locally as discussed above. Mkdocs Material Install & Site Building \u00b6 Requirements Latest Version of Python Be Sure Your Python Installation is Installed to PATH in the setup wizard Latest Version of Git Open your cloned GitHub Pages repo in your code editor of choice, my personal favorite source-code editor is Visual Studio Code , so naturally, I used it. In a new terminal in the clone site folder, run the command 1 pip install mkdocs-material This will install all dependencies needed to run a static site with MKdocs , as well as the MKdocs Material Theme . Note for Fab Academy Students The MKdocs Material theme is paired with the mkdocs-git-revision-date-localized-plugin by default in your Fab Academy student repo. This plugin enables displaying the date of the last git modification of a page at the bottom of each page. To build your static site, this plugin must be installed in your local site folder with the line below \u2026 1 pip3 install mkdocs-git-revision-date-localized-plugin However, one may opt to not use it via the removal of the line - git-revision-date-localized found under the plugins section of your sites mkdocs.yml file. Following this setup, I build my static site locally with the command in my site folders terminal 1 mkdocs serve and followed the link given in my computer\u2019s web browser. You should get an output like this after the mkdocs serve command \u2026 INFO - Documentation built in X.XX seconds INFO - [XX:XX:XX] Serving on http://YOUR-LOCAL-SITE/ Auto Site Building \u00b6 GitHub Actions The easiest way for your static site to be built in GitHub pages upon a push is through GitHub Actions allowing for an automated workflow to run to build and pipeline your static site publicly. At the root of your repository, create a new GitHub Actions workflow, e.g. .github/workflows/ci.yml , and copy and paste the following contents: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 name : ci # (1) on : push : branches : # (2) - master - main jobs : deploy : runs-on : ubuntu-latest steps : - uses : actions/checkout@v2 - uses : actions/setup-python@v2 with : python-version : 3.x - run : pip install mkdocs-material # (3) - run : mkdocs gh-deploy --force You can change the name to your liking. At some point, GitHub renamed master to main . If your default branch is named master , you can safely remove main , vice versa. This is the place to install further MkDocs plugins or Markdown extensions with pip to be used during the build. For my site setup, I added the line \u2026 16 - run : pip install mkdocs-git-revision-date-localized-plugin \u2026 to install the Git Revision date plugin to my site, allowing for the date each page was updated to be displayed under all of the contents of the page. Site Customisation \u00b6 The basic setup and customization of your static site are covered wonderfully on the Mkdocs Material Theme Setup Documentation . However, following this basic theme setup, your site can be altered farther by extending the Material Theme - Witch can be read about here . All of my overrides can be found in this site\u2019s GitHub repo . Git Pull When working with other developers in a Git Repo, the Git Pull command is necessary to keep your local branch up to date with others\u2019 work. Running the line \u2026 1 git pull will pull in any pushed changes to your repository, allowing you to merge work/changes with work from other branches. After working on teddywarner.org for a couple of months, I began to develop a project template page that accumulates different front-end HTML, CSS & Markdown aspects I use on my pages, which can be found via the button below. Project Page Template Here I\u2019ve also compiled a bit of a mkdocs markdown cheat sheet with 10 sections for customization, formatting, or additional flair. Again, the Mkdocs Material Theme Setup Documentation covers the theme-specific markdown at length and is a nice resource while setting up specific theme-specific bits. This section compiles theme-specific markdown with overall markdown features & all of the markdowns behind it can be found in the following sections, or on this page source - linked below. Project Portfolio Site Source Code 1. Markdown Meta Data \u00b6 markdown_extensions : - meta 1 2 3 4 5 6 7 8 --- title : PROJECT-TITLE description : Nullam urna elit, malesuada eget finibus ut, ac tortor. template : custom.html hide : - navigation - toc --- 2. Basic Syntax \u00b6 Image & Caption Headings Hyperlink Blockquote ![ alt text ]( imageURL.jpg ){: align=right/left width=\"100%\"} <figcaption>Caption</figcaption> Caption Example # Heading 1 ## Heading 2 ### Heading 3 #### Heading 4 ##### Heading 5 ###### Heading 6 Heading 1 Heading 2 Heading 3 Heading 4 Heading 5 Heading 6 [ Hyperlink Example ]( URl ) Hyperlink Example > blockquote Vivamus id mi enim. Integer id turpis sapien. Ut condimentum lobortis sagittis. Aliquam purus tellus, faucibus eget urna at, iaculis venenatis nulla. Vivamus a pharetra leo. 3. Text Formatting \u00b6 markdown_extensions : - pymdownx.critic - pymdownx.caret - pymdownx.keys - pymdownx.mark - pymdownx.tilde Bold Text - **bold text** Italicized Text - *italicized text* Strikethrough - ~~Strikethrough~~ Subscript - H 2 O - H~2~O Superscript - X 2 - X^2^ 4. Buttons \u00b6 markdown_extensions : - attr_list 1 2 [ Solid Button :fontawesome-solid-download: ]( URL ){ .md-button .md-button--primary} [ Outline Button ]( URL ){ .md-button} Solid Button Outline Button 5. Different List Styles \u00b6 markdown_extensions : - def_list - pymdownx.tasklist : custom_checkbox : true Unordered List Ordered List Task List Definition List \u201cUnordered lists can be written by prefixing a line with a - , * or + list marker, all of which can be used interchangeably. Furthermore, all flavors of lists can be nested inside each other:\u201d 1 1 2 3 4 5 6 7 - Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. * Nullam dignissim ultrices urna non auctor. - Nam vulputate tincidunt fringilla. * Nam vulputate tincidunt fringilla. * Nullam dignissim ultrices urna non auctor. - Nullam dignissim ultrices urna non auctor. * Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Result - Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nullam dignissim ultrices urna non auctor. Nam vulputate tincidunt fringilla. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor. Nullam dignissim ultrices urna non auctor. Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. \u201cOrdered lists must start with a number immediately followed by a dot. The numbers do not need to be consecutive and can be all set to 1. , as they will be re-numbered when rendered:\u201d 2 1 2 3 4 5 6 7 8 9 10 11 12 13 14 1. Vivamus id mi enim. Integer id turpis sapien. Ut condimentum lobortis sagittis. Aliquam purus tellus, faucibus eget urna at, iaculis venenatis nulla. Vivamus a pharetra leo. 1. Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a. Nam vehicula nunc mauris, a ultricies libero efficitur sed. 2. Morbi eget dapibus felis. Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a. 1. Mauris dictum mi lacus 2. Ut sit amet placerat ante 3. Suspendisse ac eros arcu Result - Vivamus id mi enim. Integer id turpis sapien. Ut condimentum lobortis sagittis. Aliquam purus tellus, faucibus eget urna at, iaculis venenatis nulla. Vivamus a pharetra leo. Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a. Nam vehicula nunc mauris, a ultricies libero efficitur sed. Morbi eget dapibus felis. Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a. Mauris dictum mi lacus Ut sit amet placerat ante Suspendisse ac eros arcu 1 2 3 4 5 6 - [x] Lorem ipsum dolor sit amet, consectetur adipiscing elit - [ ] Vestibulum convallis sit amet nisi a tincidunt * [x] In hac habitasse platea dictumst * [x] In scelerisque nibh non dolor mollis congue sed et metus * [ ] Praesent sed risus massa - [ ] Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque Result - Lorem ipsum dolor sit amet, consectetur adipiscing elit Vestibulum convallis sit amet nisi a tincidunt In hac habitasse platea dictumst In scelerisque nibh non dolor mollis congue sed et metus Praesent sed risus massa Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque 1 2 3 4 5 6 7 8 9 10 11 12 13 `Lorem ipsum dolor sit amet` : Sed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus tellus non sem sollicitudin, quis rutrum leo facilisis. `Cras arcu libero` : Aliquam metus eros, pretium sed nulla venenatis, faucibus auctor ex. Proin ut eros sed sapien ullamcorper consequat. Nunc ligula ante. Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor. Result - Lorem ipsum dolor sit amet Sed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus tellus non sem sollicitudin, quis rutrum leo facilisis. Cras arcu libero Aliquam metus eros, pretium sed nulla venenatis, faucibus auctor ex. Proin ut eros sed sapien ullamcorper consequat. Nunc ligula ante. Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor. 6. Content Tabs, Code Styling & Annotations \u00b6 markdown_extensions : - attr_list - md_in_html - pymdownx.superfences - pymdownx.highlight : anchor_linenums : true - pymdownx.inlinehilite - pymdownx.snippets - pymdownx.superfences - pymdownx.tabbed : alternate_style : true theme : features : - content.code.annotate YAML C++ Python YAML EXAMPLE 1 2 3 theme : features : - content.code.annotate # (1) I\u2019m a code annotation! I can contain code , formatted text , images, \u2026 basically anything that can be expressed in Markdown. C++ EXAMPLE 1 2 3 4 5 6 7 8 9 10 void setup () { pinMode ( 0 , OUTPUT ); } void loop () { digitalWrite ( 0 , HIGH ); delay ( 500 ); digitalWrite ( 0 , LOW ); delay ( 500 ); } PYTHON EXAMPLE 1 import tensorflow as tf 7. Footnotes \u00b6 markdown_extensions : - footnotes 1 2 3 Here's a sentence with a footnote. [^3] [ ^3 ]: This is the footnote. Here\u2019s a sentence with a footnote. 3 8. Formatted Tables \u00b6 markdown_extensions : - tables 1 2 3 4 5 | Method | Description | | ----------- | ------------------------------------ | | `GET` | :material-check: Fetch resource | | `PUT` | :material-check-all: Update resource | | `DELETE` | :material-close: Delete resource | Method Description GET Fetch resource PUT Update resource DELETE Delete resource 9. Admonitions \u00b6 markdown_extensions : - admonition - pymdownx.details - pymdownx.superfences NOTE EXAMPLE Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. INFO EXAMPLE Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. ABSTRACT EXAMPLE Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. TIP EXAMPLE Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. SUCCESS EXAMPLE Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. QUESTION EXAMPLE Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. WARNING EXAMPLE Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. FAILURE EXAMPLE Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. DANGER EXAMPLE Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. BUG EXAMPLE Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. EXAMPLE Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. QUOTE EXAMPLE Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. 10. Icons & Emojis \u00b6 markdown_extensions : - pymdownx.emoji : emoji_index : !!python/name:materialx.emoji.twemoji emoji_generator : !!python/name:materialx.emoji.to_svg Icon & Emoji Search Engine :fontawesome-solid-globe-americas: :fontawesome-regular-laugh-wink: :fontawesome-regular-laugh-wink: :smile: Site Publishing \u00b6 Finally, after any changes are made to your site, you can merge your local changes back to your GitHub Pages repo to be built and published with the commands \u2026 git add . # (1) git commit -m \"Updated Site\" # (2) git push # (3) Stages all new changes made to your site. Gives your push a title that will be visible on GitHub Pushes changes to your GitHub - when prompted, enter your SSH password. Congrats! You now have built your very own static site with MKdocs and its Material Theme . Wooo as of 12/01/2021, teddywarner.org is now 100 Commits old!! 200 Commits - 5/02/2022! https://squidfunk.github.io/mkdocs-material/reference/lists/#configuration \u21a9 https://squidfunk.github.io/mkdocs-material/reference/lists/#configuration \u21a9 This is the footnote. \u21a9","title":"Project Portfolio Site"},{"location":"Projects/ProjectPortfolioSite/#project-portfolio-site","text":"Teddy Warner | Summer - 2021 | 6-7 minutes The behind the scenes of the site you are on right now :) This site relies on MKdocs , a static site generator is written in python to create the content of the site, as well as the MKdocs Material Theme for customization. I used this same static site generator to create my Fab Academy Documentation Site , however, that site runs strictly on the MKdocs Material Theme without custom alterations. This site relies on the same structure as the prior Fab Academy Documentation Site but includes experiments with entirely custom components, and an altered MKdocs Material Theme . In addition to all that, it\u2019s also built and hosted through my personal GitHub Pages repo, under my personal domain.","title":"Project Portfolio Site"},{"location":"Projects/ProjectPortfolioSite/#repo-setup-and-cloning","text":"To start the site I created a new GitHub Pages repo on my GitHub and cloned in some of my site files from my prior Fab Academy Documentation Site (the cloned files were just so site setup files, as well as a bit of content on my Fab Academy final project to be displayed on this site). I then pulled this repo to my local system folder with the command 1 git clone REPO-HERE # (1) Replace the text REPO-HERE with your site repo\u2019s Clone with SSH link. This can be found under the Clone button in most Git web interfaces (i.e. Gitlab, Github, etc.). Do I Need to Clone my Repo Locally? Modern Hosting Platforms such as GitHub or GitLab allow for Repo editing to take place directly in the browser, and thus technically speaking, one does not need to pull their site Repo locally. However, browser editing eliminates the possibility of locally hosting, and thus one cannot view changes before pushing publically. Despite this, If you\u2019d still like to work in a Browser-based editor, you may skip the SSH Setup and Site Publishing sections, and follow an editing and pushing workflow for your specific browser-based editor.","title":"Repo Setup and Cloning"},{"location":"Projects/ProjectPortfolioSite/#ssh-setup","text":"To clone a Git repository locally, an SSH key must be generated on your computer and then attached to your GitHub account. GitHub has really good documentation on creating a new SSH key and attaching it to your Git Web Interface (Github, Gitlab, etc.). The process for generating and attaching a new SSH key to your Git Web Interface is relatively pain-free when following this documentation and using the command written above. My process involved running these commands \u2026 ssh-keygen -t ed25519 -C \"<Your-SSH-Name-Here>\" # (1) Generating public/private ed25519 key pair. Enter file in which to save the key (/home/user/.ssh/id_ed25519) : # (2) Enter passphrase (empty for no passphrase) : # (3) Enter the same passphrase again : cat ~/.ssh/id_ed25519.pub | clip # (4) This generates a new SSH key on your computer. Click enter to confirm location. Enter a passphrase for your SSH key, you will need this password whenever you attempt to push your site. This copies your new SSH key to clipboard. Replace id_ed25519.pub with your filename. For example, use id_rsa.pub for RSA. Once copied to the clipboard, you can paste the newly generated SSH key in your SSH key settings in your Git Web Interface, to link your computer and your Git Web Interface. Now you can finally clone your site Repository locally as discussed above.","title":"SSH setup"},{"location":"Projects/ProjectPortfolioSite/#mkdocs-material-install-site-building","text":"Requirements Latest Version of Python Be Sure Your Python Installation is Installed to PATH in the setup wizard Latest Version of Git Open your cloned GitHub Pages repo in your code editor of choice, my personal favorite source-code editor is Visual Studio Code , so naturally, I used it. In a new terminal in the clone site folder, run the command 1 pip install mkdocs-material This will install all dependencies needed to run a static site with MKdocs , as well as the MKdocs Material Theme . Note for Fab Academy Students The MKdocs Material theme is paired with the mkdocs-git-revision-date-localized-plugin by default in your Fab Academy student repo. This plugin enables displaying the date of the last git modification of a page at the bottom of each page. To build your static site, this plugin must be installed in your local site folder with the line below \u2026 1 pip3 install mkdocs-git-revision-date-localized-plugin However, one may opt to not use it via the removal of the line - git-revision-date-localized found under the plugins section of your sites mkdocs.yml file. Following this setup, I build my static site locally with the command in my site folders terminal 1 mkdocs serve and followed the link given in my computer\u2019s web browser. You should get an output like this after the mkdocs serve command \u2026 INFO - Documentation built in X.XX seconds INFO - [XX:XX:XX] Serving on http://YOUR-LOCAL-SITE/","title":"Mkdocs Material Install &amp; Site Building"},{"location":"Projects/ProjectPortfolioSite/#auto-site-building","text":"GitHub Actions The easiest way for your static site to be built in GitHub pages upon a push is through GitHub Actions allowing for an automated workflow to run to build and pipeline your static site publicly. At the root of your repository, create a new GitHub Actions workflow, e.g. .github/workflows/ci.yml , and copy and paste the following contents: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 name : ci # (1) on : push : branches : # (2) - master - main jobs : deploy : runs-on : ubuntu-latest steps : - uses : actions/checkout@v2 - uses : actions/setup-python@v2 with : python-version : 3.x - run : pip install mkdocs-material # (3) - run : mkdocs gh-deploy --force You can change the name to your liking. At some point, GitHub renamed master to main . If your default branch is named master , you can safely remove main , vice versa. This is the place to install further MkDocs plugins or Markdown extensions with pip to be used during the build. For my site setup, I added the line \u2026 16 - run : pip install mkdocs-git-revision-date-localized-plugin \u2026 to install the Git Revision date plugin to my site, allowing for the date each page was updated to be displayed under all of the contents of the page.","title":"Auto Site Building"},{"location":"Projects/ProjectPortfolioSite/#site-customisation","text":"The basic setup and customization of your static site are covered wonderfully on the Mkdocs Material Theme Setup Documentation . However, following this basic theme setup, your site can be altered farther by extending the Material Theme - Witch can be read about here . All of my overrides can be found in this site\u2019s GitHub repo . Git Pull When working with other developers in a Git Repo, the Git Pull command is necessary to keep your local branch up to date with others\u2019 work. Running the line \u2026 1 git pull will pull in any pushed changes to your repository, allowing you to merge work/changes with work from other branches. After working on teddywarner.org for a couple of months, I began to develop a project template page that accumulates different front-end HTML, CSS & Markdown aspects I use on my pages, which can be found via the button below. Project Page Template Here I\u2019ve also compiled a bit of a mkdocs markdown cheat sheet with 10 sections for customization, formatting, or additional flair. Again, the Mkdocs Material Theme Setup Documentation covers the theme-specific markdown at length and is a nice resource while setting up specific theme-specific bits. This section compiles theme-specific markdown with overall markdown features & all of the markdowns behind it can be found in the following sections, or on this page source - linked below. Project Portfolio Site Source Code","title":"Site Customisation"},{"location":"Projects/ProjectPortfolioSite/#1-markdown-meta-data","text":"markdown_extensions : - meta 1 2 3 4 5 6 7 8 --- title : PROJECT-TITLE description : Nullam urna elit, malesuada eget finibus ut, ac tortor. template : custom.html hide : - navigation - toc ---","title":"1. Markdown Meta Data"},{"location":"Projects/ProjectPortfolioSite/#2-basic-syntax","text":"Image & Caption Headings Hyperlink Blockquote ![ alt text ]( imageURL.jpg ){: align=right/left width=\"100%\"} <figcaption>Caption</figcaption> Caption Example # Heading 1 ## Heading 2 ### Heading 3 #### Heading 4 ##### Heading 5 ###### Heading 6","title":"2. Basic Syntax"},{"location":"Projects/ProjectPortfolioSite/#3-text-formatting","text":"markdown_extensions : - pymdownx.critic - pymdownx.caret - pymdownx.keys - pymdownx.mark - pymdownx.tilde Bold Text - **bold text** Italicized Text - *italicized text* Strikethrough - ~~Strikethrough~~ Subscript - H 2 O - H~2~O Superscript - X 2 - X^2^","title":"3. Text Formatting"},{"location":"Projects/ProjectPortfolioSite/#4-buttons","text":"markdown_extensions : - attr_list 1 2 [ Solid Button :fontawesome-solid-download: ]( URL ){ .md-button .md-button--primary} [ Outline Button ]( URL ){ .md-button} Solid Button Outline Button","title":"4. Buttons"},{"location":"Projects/ProjectPortfolioSite/#5-different-list-styles","text":"markdown_extensions : - def_list - pymdownx.tasklist : custom_checkbox : true Unordered List Ordered List Task List Definition List \u201cUnordered lists can be written by prefixing a line with a - , * or + list marker, all of which can be used interchangeably. Furthermore, all flavors of lists can be nested inside each other:\u201d 1 1 2 3 4 5 6 7 - Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. * Nullam dignissim ultrices urna non auctor. - Nam vulputate tincidunt fringilla. * Nam vulputate tincidunt fringilla. * Nullam dignissim ultrices urna non auctor. - Nullam dignissim ultrices urna non auctor. * Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Result - Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nullam dignissim ultrices urna non auctor. Nam vulputate tincidunt fringilla. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor. Nullam dignissim ultrices urna non auctor. Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. \u201cOrdered lists must start with a number immediately followed by a dot. The numbers do not need to be consecutive and can be all set to 1. , as they will be re-numbered when rendered:\u201d 2 1 2 3 4 5 6 7 8 9 10 11 12 13 14 1. Vivamus id mi enim. Integer id turpis sapien. Ut condimentum lobortis sagittis. Aliquam purus tellus, faucibus eget urna at, iaculis venenatis nulla. Vivamus a pharetra leo. 1. Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a. Nam vehicula nunc mauris, a ultricies libero efficitur sed. 2. Morbi eget dapibus felis. Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a. 1. Mauris dictum mi lacus 2. Ut sit amet placerat ante 3. Suspendisse ac eros arcu Result - Vivamus id mi enim. Integer id turpis sapien. Ut condimentum lobortis sagittis. Aliquam purus tellus, faucibus eget urna at, iaculis venenatis nulla. Vivamus a pharetra leo. Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a. Nam vehicula nunc mauris, a ultricies libero efficitur sed. Morbi eget dapibus felis. Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a. Mauris dictum mi lacus Ut sit amet placerat ante Suspendisse ac eros arcu 1 2 3 4 5 6 - [x] Lorem ipsum dolor sit amet, consectetur adipiscing elit - [ ] Vestibulum convallis sit amet nisi a tincidunt * [x] In hac habitasse platea dictumst * [x] In scelerisque nibh non dolor mollis congue sed et metus * [ ] Praesent sed risus massa - [ ] Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque Result - Lorem ipsum dolor sit amet, consectetur adipiscing elit Vestibulum convallis sit amet nisi a tincidunt In hac habitasse platea dictumst In scelerisque nibh non dolor mollis congue sed et metus Praesent sed risus massa Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque 1 2 3 4 5 6 7 8 9 10 11 12 13 `Lorem ipsum dolor sit amet` : Sed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus tellus non sem sollicitudin, quis rutrum leo facilisis. `Cras arcu libero` : Aliquam metus eros, pretium sed nulla venenatis, faucibus auctor ex. Proin ut eros sed sapien ullamcorper consequat. Nunc ligula ante. Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor. Result - Lorem ipsum dolor sit amet Sed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus tellus non sem sollicitudin, quis rutrum leo facilisis. Cras arcu libero Aliquam metus eros, pretium sed nulla venenatis, faucibus auctor ex. Proin ut eros sed sapien ullamcorper consequat. Nunc ligula ante. Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor.","title":"5. Different List Styles"},{"location":"Projects/ProjectPortfolioSite/#6-content-tabs-code-styling-annotations","text":"markdown_extensions : - attr_list - md_in_html - pymdownx.superfences - pymdownx.highlight : anchor_linenums : true - pymdownx.inlinehilite - pymdownx.snippets - pymdownx.superfences - pymdownx.tabbed : alternate_style : true theme : features : - content.code.annotate YAML C++ Python YAML EXAMPLE 1 2 3 theme : features : - content.code.annotate # (1) I\u2019m a code annotation! I can contain code , formatted text , images, \u2026 basically anything that can be expressed in Markdown. C++ EXAMPLE 1 2 3 4 5 6 7 8 9 10 void setup () { pinMode ( 0 , OUTPUT ); } void loop () { digitalWrite ( 0 , HIGH ); delay ( 500 ); digitalWrite ( 0 , LOW ); delay ( 500 ); } PYTHON EXAMPLE 1 import tensorflow as tf","title":"6. Content Tabs, Code Styling &amp; Annotations"},{"location":"Projects/ProjectPortfolioSite/#7-footnotes","text":"markdown_extensions : - footnotes 1 2 3 Here's a sentence with a footnote. [^3] [ ^3 ]: This is the footnote. Here\u2019s a sentence with a footnote. 3","title":"7. Footnotes"},{"location":"Projects/ProjectPortfolioSite/#8-formatted-tables","text":"markdown_extensions : - tables 1 2 3 4 5 | Method | Description | | ----------- | ------------------------------------ | | `GET` | :material-check: Fetch resource | | `PUT` | :material-check-all: Update resource | | `DELETE` | :material-close: Delete resource | Method Description GET Fetch resource PUT Update resource DELETE Delete resource","title":"8. Formatted Tables"},{"location":"Projects/ProjectPortfolioSite/#9-admonitions","text":"markdown_extensions : - admonition - pymdownx.details - pymdownx.superfences NOTE EXAMPLE Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. INFO EXAMPLE Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. ABSTRACT EXAMPLE Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. TIP EXAMPLE Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. SUCCESS EXAMPLE Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. QUESTION EXAMPLE Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. WARNING EXAMPLE Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. FAILURE EXAMPLE Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. DANGER EXAMPLE Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. BUG EXAMPLE Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. EXAMPLE Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. QUOTE EXAMPLE Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.","title":"9. Admonitions"},{"location":"Projects/ProjectPortfolioSite/#10-icons-emojis","text":"markdown_extensions : - pymdownx.emoji : emoji_index : !!python/name:materialx.emoji.twemoji emoji_generator : !!python/name:materialx.emoji.to_svg Icon & Emoji Search Engine :fontawesome-solid-globe-americas: :fontawesome-regular-laugh-wink: :fontawesome-regular-laugh-wink: :smile:","title":"10. Icons &amp; Emojis"},{"location":"Projects/ProjectPortfolioSite/#site-publishing","text":"Finally, after any changes are made to your site, you can merge your local changes back to your GitHub Pages repo to be built and published with the commands \u2026 git add . # (1) git commit -m \"Updated Site\" # (2) git push # (3) Stages all new changes made to your site. Gives your push a title that will be visible on GitHub Pushes changes to your GitHub - when prompted, enter your SSH password. Congrats! You now have built your very own static site with MKdocs and its Material Theme . Wooo as of 12/01/2021, teddywarner.org is now 100 Commits old!! 200 Commits - 5/02/2022! https://squidfunk.github.io/mkdocs-material/reference/lists/#configuration \u21a9 https://squidfunk.github.io/mkdocs-material/reference/lists/#configuration \u21a9 This is the footnote. \u21a9","title":"Site Publishing"},{"location":"Projects/SerialUPDI/","tags":["Software","CAD","Autodesk Eagle","PCB","AVR","Microcontroller"],"text":".profilepic { display: inline; float: left; margin-top: -7px; width: 35px; height: 34px; border-radius: 50%; } .abtlinks a { color: var(--md-default-fg-color); } .share { float:right; margin-top: 0px; font-size: 1.1em; } .share a { color: inherit; } .twitter { padding-left: 0.2em; padding-right: 0.2em; } .share a.twitter:hover { color: #00acee; } .fb { padding-left: 0.2em; padding-right: 0.2em; } .share a.fb:hover { color: #3b5998; } .pin { padding-left: 0.2em; padding-right: 0.2em; } .share a.pin:hover { color: #E60023; } .ln { padding-left: 0.2em; padding-right: 0.2em; } .share a.ln:hover { color: #0e76a8; } .email { padding-left: 0.2em; padding-right: 1.5em; } @media (max-width: 40.55384615384616em) { .share { margin-top: -3.5em; margin-right: -1.4em; } } @media (max-width: 37.4em) { .share { margin-top: -4.8em; margin-right: -1.4em; } } @media (max-width: 35em) { .year { display: none; } .share { font-size: 1em; margin-top: 0.05em; margin-right: -1.5em; } } @media (max-width: 28em) { .profilepic { margin-top: -4.5px; width: 30px; height: 30px; } .abtlinks { font-size: 0.9em; } .year { display: none; } .share { font-size: 0.9em; margin-top: 0.05em; margin-right: -1.5em; } } UPDI Serial Programming \u00b6 Teddy Warner | Junior Year - 2021 | 24-31 minutes Many modern small chipsets rely on the Unified Program and Debug Interface ( UPDI ), a one-wire interface allowing for the changing of fuzes, burning of bootloaders, or uploading of sketches to any AVR Dx-series parts or any modern AVR Microcontrollers . Due to their reliance on the Unified Program and Debug Interface, these parts cannot be programmed with classic ISP style programmers, and thus a UPDI enabled programmer is required. Although UPDI is the only programming option in the case of these parts, the one-wire interface is superior to the four-wire of a classic ISP programmer and allows for quicker programming setup and less cluttered boards due to fewer programming pins. This USB -C UPDI programmer is built with a Ft232rl chip allowing for serial interfacing, and runs alongside the megaTinyCore library witch equips your IDE for serial UPDI programming via a portable python implementation. megaTinyCore Documentation \u00b6 In short, the megaTinyCore library is \u201cAn Arduino core for the tinyAVR 0-series, 1-series, and now the 2-series\u201d 1 . The megaTinyCore project was created and maintained by SpenceKonde . As mentioned above, the library equips your IDE for UPDI programming via a portable python installation and can be used alongside a handful of different programmer types. The USB -C UPDI Serial programmer documented alter on this page is currently the optimal choice out of these options due to its low component requirement and faster speeds than other programmers. In addition to serial programmers, One can use a 328p based board as a programmer (i.e. an Arduino or any of its clones) via megaTinyCore\u2019s jtag2updi sketch, or a designated microchip programming board or and UPDI programming tool that mimicks any listed above. Dr. Adam Harris , a mentor of mine during my cycle of Fab Academy has a Simple Fab-jtag2UPDI Board project where a 328p based board is used alongside the jtag2UPDI sketch and is a great option when creating an In-Circuit programmer though the library. I manufactured this board during my Electronics Production and continued to use it for the next 16 weeks of the course. Package Installation \u00b6 Software Requirement Arduino 1.8.13 is recommended for use with the megaTinyCore library Recent updates to the megaTinyCore library have simplified the installation process significantly. The library relies upon a board package that can be installed via the board manager witch can be installed with 3 simple steps included below 2 . http://drazzy.com/package_drazzy.com_index.json File -> Preferences, enter the above URL in Additional Boards Manager URLs Tools -> Boards -> Boards Manager\u2026 Select megaTinyCore by Spence Konde and click \u201cInstall\u201d. For best results, choose the most recent version. jtag2UPDI Programming \u00b6 As mentioned prior, jtag2updi is a sketch from the megaTinyCore library, allowing for the use of a 328p-based board (i.e. Arduino or a clone) as an In-Circuit programmer . To begin with, this programming approach, download the latest version of the jtag2udpi sketch via the button below (Code -> Download Zip ). Download the Latest jtag2udpi Sketch Extract the contents of this downloaded sketch folder by first unzipping the downloaded folder and next moving the contained sketch folder in the unzipped folder to a separate location. Finally, Rename this sketch folder to jtag2updi , leaving you with a folder similar to the one circled in red in the image below. Inside of this jtag2updi folder, navigate to the jtag2UPDI.ino project - circled and highlighted below - and open it in your IDE . This will open the jtag2updi project file system, leaving you with a blank jtag2updi sketch followed by multiple file tabs in your IDE (like shown in the picture below). You can next upload this sketch to your 328p-based board of choice as you would any other sketch. Tip As a first test to confirm the successful upload of this sketch to your board, hook up an LED to pin 6 of the board. If the board is successfully programmed, the LED will be dimly lit as shown below. This simple test eliminates a potential error while troubleshooting a project, and confirms the programmer \u2018s working condition. Once a board is programmed with the jtag2updi project, it will act as a programmer until the next sketch is uploaded, unless the board\u2019s reset line is cut. jtag2UPDI Usage \u00b6 To make use of a jtag2updi enabled In-Circuit programmer board, prepare a sketch in your IDE to upload to your desired board. For documentation purposes, I\u2019ll be uploading the simple blink sketch included below to a super simple ATtiny 412 based LED board I made in week 4 of my Fab Academy cycle and documenting it for use with the Arduino IDE . 1 2 3 4 5 6 7 8 9 10 void setup () { pinMode ( 0 , OUTPUT ); } void loop () { digitalWrite ( 0 , HIGH ); delay ( 500 ); digitalWrite ( 0 , LOW ); delay ( 500 ); } To upload code to your board via your jtag2updi enabled In-Circuit programmer board \u2026 Wire your board to your jtag2updi In-Circuit Programmer board - UPDI pin of the board to pin 6 of jtag2updi In-Circuit Programmer board with an inline 100-470 ohm resistor running between the UPDI pin and the In-Circuit Programmer, VCC to VCC , and GND to GND Under the Tools menu in the Arduino IDE , change your board to your board\u2019s chipset by navigating to the megaTinyCore board menu via Tools -> Board -> megaTinyCore and then selecting your chip group from the list. Next, specify your chip type under the Chip menu via Tools -> Chip . For use with you jtag2updi In-Circuit Programmer board, change the programmer option to Tools\u2013>Programmer \u2013> jtag2updi Change your COM port to connect via serial to your In-Circuit Programmer board if not already connected Finally, upload your sketch via the Upload Using Programmer button found under the IDE \u2018s Sketch menu - Not with the normal upload button (this will override your programmers jtag2updi sketch if done). Example Following these steps on my simple ATtiny 412 board yielded the 1/2 second blink example below. Congrats! You can now program any modern AVR Microcontrollers via UPDI and a jtag2updi enabled 328p-based board. Serial Programming \u00b6 Serial UPDI Programming with megaTinyCore Version 2.2.0 of the megaTinyCore library brings the implementation of a portable python implementation. This installation, based on pymcuprog , allows for a programming speed increase by a factor of 20 when compared to the prior jtag2udpi programming style. With this performance increase in addition to a smaller & cheaper hardware list, Serial UDPI programming with the megaTinyCore library is the most optimal form of programming I\u2019ve used on my boards to date. The serial programming style relies on this prior mentioned portable python installation alongside a USB -Serial adapter acting as the programmer in this case. Though this section of the page will document this programming style via a pre-made USB -Serial adapter (in this case an FTDI chip) and some other hardware bits, please note the USB -C UPDI Serial Programmer board documented later on this page - this board is a set hardware piece for this Serial UPDI programming style, and provides a permanent hardware programming board. To engage the Serial UPDI programming method without a board like this you\u2019ll need the required hardware\u2026 A USB -Serial Adapter - I\u2019ll be using an FTDI FT232 for this documentation, but boards based on the CH340G or the CP210 chips work great as well Some Jumper Wires A Schottky Diode - I tacked some leads to an SMD package (as shown below), but if you can get your hands on a through-hole package, that works great as well. A 470-ohm Resistor - If creating a UPDI programmable board, incorporate this resistor into your schematic using the pinout below, running the 470-ohm resistor inline to the UPDI pin. Any value between 100 and 1k ohms will do here, but 470 is the optimal value. Target Board Programming Headers __________________ -----| UPDI---\\/\\/------> -----| Gnd 470 ohms (100 ~ 1k) -----| Vcc |__________________ If not creating your own board, and there\u2019s no inline UPDI resistor, you\u2019ll need to include this resistor externally. With that said, wiring between your serial adapter and the target device is diagrammed in the schematics below. VCC of Adapter to VCC of Target GND of Adapter to GND of Target Schottky Diode between the Rx & Tx of Serial Adapter (Cathode to Tx ) Rx of Adapter to UPDI of Target - Here include the 470 ohms resistor as needed Ideal - internal resistor in the adapter - not more than 1k -------------------- To Target device DTR| __________________ internal Rx |--------------,------------------| UPDI---\\/\\/------> Tx---/\\/\\/\\---Tx |-------|<|---' .--------| Gnd 470 ohms (100 ~ 1k) resistor Vcc|---------------------------------| Vcc typ. 1k CTS| .` |__________________ Gnd|--------------------' If you make a 3-pin connector, use this pinout -------------------- or -------------------- To Target device DTR| External 470 ohms (100 ~ 1k) __________________ internal Rx |--------------,--\\/\\/------------| UPDI-------------> Tx---/\\/\\/\\---Tx |-------|<|---' .--------| Gnd resistor Vcc|---------------------------------| Vcc typ 1k CTS| .` |__________________ Gnd|--------------------' -------------------- Or with no internal resistor on the adapter - as long as the target has one -------------------- To Target device DTR| __________________ no Rx |--------------,------------------| UPDI---\\/\\/------> internal Tx |-------|<|---' .--------| Gnd 470 ohms (100 ~ 1k) resistor Vcc|---------------------------------| Vcc CTS| .` |__________________ Gnd|--------------------' -------------------- I rigged up the second included schematic on a breadboard as unfortunately the blinky board I\u2019m programming doesn\u2019t have a valid inline resistor I can use. Serial Programmer Setup on a Breadboard Serial Programmer Usage \u00b6 To program via your USB -Serial setup \u2026 Navigate to the Tools -> Programmer menu and select an iteration of the Serial- UPDI options (Based on upload speeds, the tinyAVR core offers 57600 baud, 230400 baud, and 460800 baud options - thus the different speed settings) Then, under Tools -> Port select the port connected to your USB -Serial adapter, if not already selected Finally, upload your sketch via the Upload button and watch as your board is programmed at lightning speeds! Note - this serial programmer setup does not give you a serial monitor You\u2019ll need to connect a serial adapter the normal way for that. The later documented USB -C UPDI Serial Programmer & ftdi2updi boards provide a switching feature between a serial programming and serial monitoring mode, allowing for all programming and monitoring work to be done without rework of connections. Be sure to check out the specific USB -C UPDI Serial Programmer usage section for use of this feature. Example For this example, I modified my prior used blink sketch to run a 5-second delay as opposed to the prior 0.5 seconds\u2026 1 2 3 4 5 6 7 8 9 10 void setup () { pinMode ( 0 , OUTPUT ); } void loop () { digitalWrite ( 0 , HIGH ); delay ( 5000 ); digitalWrite ( 0 , LOW ); delay ( 5000 ); } I uploaded this via the three-step process listed above, yielding the successful results below. Congrats! You can now program any modern AVR Microcontrollers via UPDI with a simple USB -Serial adapter with a speed increase by a factor of twenty when compared with the prior jtag2updi method. UPDI Serial Programmer Manufacturing \u00b6 I made countless PCBs during my cycle of the Fab Academy , one of the first being a tool to program the rest, an In-Circuit Programmer . Being one of the first boards I fabricated myself, from the PCB milling to soldering & stuffing, I hadn\u2019t yet taken up the practice of designing my boards, and for this assignment, fabricated the In-Circuit Programmer design of one of my mentors, Dr. Adam Harris . This board is a specialized Arduino-like board, running on an ATMega 328p with a programmer sketch provided by the megaTinyCore library. Project Origins The In-Circuit Programmer I fabricated in Fab Academy\u2019s operation is great, but due to new updates in the megaTinyCore library, the process can be optimized for faster speeds, and the board size and component requirements can be reduced. This board marks my first steps into the world of multi-layered PCB design and fabrication, a process I\u2019m super pumped to pick up and apply to future projects. The USB -C UPDI Programmer is a specialized piece of hardware for use with the prior discussed serial programming method and has a couple of advantages over rigging a programmer up on a breadboard. A permanent piece of the hardware enables the serial programming method to require a bit less setup, once the board has been made. Following that, this board includes \u201cmodes\u201d, allowing switching between serial programming and monitoring functions. When rigging a serial programmer up via a USB -serial adapter as documented prior, you cannot monitor serial from the board at the same time, but instead are required to require the board to the USB -serial adapter. The switching of \u201cmodes\u201d on this programmer eliminates this extra hassle, handling all the required connections at the flip of a switch located on the board\u2019s underside. USB -C UPDI Design \u00b6 It was this elimination of hassle that pushed me to create this piece of hardware, yielding a simple workflow when serial programming. The USB -C UPDI Serial Programmer is based on the FT232RL 3 IC , handling the USB protocol and USB to serial data transfer on the programmer . The FT232RL is broken out following the same wiring principals diagrammed in the prior serial programming documentation, converting the IC \u2018s Rx and Tx lines to a UPDI line, routed to a programming pin. Just before this Rx and Tx junction, a Double-Pole Double-Through switch allows for the switching of this conversion to UPDI to straightforward Rx and Tx lines, routed each to their corresponding pin. Thus, the programmer board includes a UPDI , Rx , and Tx output pin, in addition to a VCC and GND line. This 5 pin programming pinout can be mimicked on any board containing a AVR Microcontroller , allowing for programming and monitoring functions to be switched without reworking connections between the programmer and board. USB-C UPDI Programmer Eagle Schematic Then came the nesting process. Being my first double-sided board in Eagle, it took some work to get used to the use of vias between sides, but eventually, I worked out the process of changing Via\u2019s drill class through Eagle\u2019s Change -> Drill tool. I ended up using 0.6mm rivets for this board\u2019s vias, using 8 on the board in total. I nested bards on the board, including both the FT232RL and the USB -C female adapter on the top side, along with some smoothing capacitors, and on the bottom, the UPDI programming component array, as well as the DPDT switch. USB-C UPDI Programmer Eagle Board The nesting of the two highest pinout parts on the board\u2019s topside inspired my next experiment with this board, Solder Paste Stencil making. Although I feel pretty confident in my SMD soldering skills, soldering pads this small wouldn\u2019t only be a hassle, it would also be tedious time waste, and thus I settled on a solder paste stencil approach for the boards topside, while hand soldering the bottom half. I exported the Tcream layer of my programmer board from Eagle as a .pdf for cutting of the stencil from cardstock on a Epliog Fusion Pro 48 laser. Tcream board layer in Eagle Bill of Matierals - USB -C UPDI Qty. Part Cost URL x1 SMD DPDT Switch $1.50 link x1 CDBM1100-G $0.39 link x1 470 ohm SMD Resistor $0.10 link x1 1.5k ohm SMD Resistor $0.10 link x1 100nf SMD Cap $0.18 link x1 1uf SMD Cap $0.10 link x1 DX07S016JA1R1500 $1.59 link x1 FT232RL $4.19 link x11 Header Pins $0.14 link x1 Copper PCB Blank $0.70 link Total Cost- $8.99 ftdi2updi Design \u00b6 In addition to the prior USB -C UPDI Serial Programmer board, I created an alternative hardware programmer that makes use of a pre-existing FTDI chip, enabling it with the same switching functions feature as the prior board. This provided a workaround to 2021\u2019s silicone shortage, as due to backed-up supply chains, I wasn\u2019t able to get my hands on the FT232RL right away. The board\u2019s schematic is a cloned iteration of the prior programmer , but with the USB -C & FT232RL components removed, and replaced with headers for connection to an FTDI adapter, yielding the schematic below. First Iteration ftdi2updi Programmer Eagle Schematic I was compelled to expand on the original shape of an FTDI serial adapter for this board, as it expands on the functionality of the adapter itself. I used Inkscape to create the board shape, allowing for meshing with an FTDI serial adapter, with the board aligning two of the sides of the adapter and then imported this board shape into Eagle via an ulp as documented on my Fab Academy Final Project page. I then nested the components on both sides of the board, aligning the FTDI connection pins allowing for proper seating of the FTDI serial adapter with the board. First Iteration ftdi2updi Programmer Eagle Board Bill of Matierals - ftdi2updi Qty. Part Cost URL x1 SMD DPDT Switch $1.50 link x1 CDBM1100-G $0.39 link x1 470 ohm SMD Resistor $0.10 link x11 Header Pins $0.14 link x1 Copper PCB Blank $0.70 link x1 FTDI Serial Adapter $14.95 link Total Cost (W/out FTDI)- \\(2.83** </br> Final Cost- **\\) 17.78 Fabrication & Testing \u00b6 ftdi2updi \u00b6 I milled my boards with a Bantam PCB mill and its Bantam Tools Desktop Milling Machine Software . The software handles all toolpath generation from my Eagle board file, and conveniently, when paired with Bantam\u2019s PCB placement bracket, also handles the double-sided board milling process via a toggle switch in the interface. I followed the same milling process I have documented on my week 4 Fab Academy page, however after the top-side traces and holes were milled, I flipped the copper stock, aligning to the right-hand corner of the PCB alignment bracket as opposed to the left, and toggled the board to its bottom side in the Bantam Tools Desktop Milling Machine Software . With the stock realigned, I repeated the same milling process for the bottom side of the board. This whole process is showcased in this view from Bantam. I used a 0.005\u201d PCB engraving bit for the ftdi2updi\u2019s traces, and a 1/32\u201d for its holes and outlines, yielding the milled results below. After the milling, I washed off my board with some soap and water. The Bantam Tools Desktop Milling Machine Software makes the milling of double-sided boards super straightforward, not much harder than a single-sided PCB, however, the boards require the extra step of riveting vias between both sides of the board before soldering. This article on PCB Rivets from the Fab Docs walks through the process down into a couple of steps. First the via has to be inserted into its corresponding hole, I used 0.6mm vias here. Then I used a V-Shaped nail to chamfer the top of the via and finally pressed it flush with a flat press, each step shown in the three images below. Finally, to ensure a proper connection, I soldered over each side of the via and repeated this process for all four of the board\u2019s vias. Boards with Vias I finished the stuffing and soldering of this board, a simple enough process due to the small component size. Note The board that is being documented here is an early iteration of the ftdi2updi and contains an extra resistor, and thus your final board may not look exactly like the ones on this page until the Programmer Usage section. I ran two tests on the ftdi2updi, one proving each of the board\u2019s functions. Programming Test Beginning with its programming function, I uploaded a modified version of the same blink test sketch used above to my simple LED board \u2026 1 2 3 4 5 6 7 8 9 10 11 12 void setup () { pinMode ( 0 , OUTPUT ); } void loop () { digitalWrite ( 0 , HIGH ); Serial . println ( ' ON ' ) delay ( 5000 ); digitalWrite ( 0 , LOW ); Serial . println ( ' OFF ' ) delay ( 5000 ); } I uploaded this via the Programmer Usage process documented in the corresponding section below. The first upload was successful at a medium (230400) baudrate. Then I uploaded the test, and repeated it at the highest (TURBO 4.5v + 460800) baudrate, yielding the successful results below. Note The ftdi2updi serial adapter meshing headers were reversed in this iteration, and thus I attached the serial adapter upsidedown for this test, the proper orientation as outlined in the following Programmer Usage section. Serial Monitoring Test Next, I switched the programmer to its monitoring mode and hooked it up to Arduino RX & TX pins, shown below. Unfortunately, my simple LED board doesn\u2019t have serial communication pins, and thus this Arduino was my next best testing option. I uploaded this super simple serial print sketch to the Arduino \u2026 1 2 3 4 5 6 7 8 void setup (){ Serial . begin ( 9600 ); } void loop (){ Serial . println ( \"Hello World\" ); delay ( 5000 ); } and then opened the Arduino IDE \u2018s serial monitor on my ftdi2updi port, which successfully read the serial output printed, shown below - and also was able to transmit via serial, shown by the Arduinos receiving LED . Although this first iteration of the ftdi2updi worked, there were a couple of design flaws (Noted above) I\u2019ve flatted out in later versions including - a reversed FTDI header, oversized vias, an unnecessary 1k resistor, and improper meshing with an existing FTDI serial adapter. The final version of this programmer (and its CAM files) can be accessed in the repo linked by the download button at the bottom of the Fabrication & Testing section. Use this version as refrence whilst fabricating your own board. I ordered a couple of these final iteration boards from a PCB fab \u2026 Which turned out incredible. The Gerber files for these boards are included in the Repo linked via the download button at the bottom of the Fabrication & Testing section, along with an Eagle board file with silkscreen decals instead of milled ones. I soldered the components to this board, a process made even easier by the already plated vias, and lack of need to insert my own. ftdi2updi Front and Back USB -C UPDI \u00b6 Pending Compleation As mentioned prior, due to 2021\u2019s supply chain limitations, I cannot currently get my hands on an FT232RL, and thus, for now, the fabrication & testing sections will only include my ftdi2upid board. This section will be updated by future me once I can get an FT232RL. This USB -C UPDI Programmer Board is not yet complete Although you can download its files, the board is still in development and may not function properly. Again, this section will be updated upon its completion. Process Type - Vector Speed - 100.0% Power - 19.0% Frequency - 6.0% Download the UPDI Serial Programmers Project Files Programmer Usage \u00b6 Serial programming with the megaTinyCore library is incredibly straightforward, and when pair with the switching functionality of both of my hardware programmers, the process is streamlined. I\u2019ll be using a final iteration ftdi2updi board for this Programmer Usage documentation, however, these steps will work for either programmer style included on this page, regardless of fabrication technique. Both Serial UPDI programmers rely on the prior documented megaTinyCore library, which must be installed for programmer usage. This process is outlined in the Package Installation section of this page. Programming \u00b6 To use the UPDI programming function, toggle the programmers switch to UPDI as shown below, and then connect UPDI and GND lines to their corresponding pins. Here you can also run a VCC line to your target board, which provides 5v, shown in the wiring below. Note Connecting serial data lines here is totally ok, as the switch disconnects them from communication when in programming mode. The wiring shown here is just the required connections for UPDI programming. Switched to Progamming Mode Minimum Wiring for UPDI Programming Once connections are made between the programmer and the target board, you must configure your target board in your IDE . For this documentation, I\u2019ll continue using the Arduino IDE , however other IDEs with the megaTinyCore installed can be used for this (I may do some tests with PlatformIO in the future, and will update this page accordingly). First, you must select your target board\u2019s microcontroller by navigating to \u2026 Tools > Board > megaTinyCore and then selecting your microcontroller from the list, shown in the image below. Next, connect your programmer to your computer via a serial cable and, select your serial port by navigating to \u2026 Tools > Port and then select the serial port your programmer board is connected to (In my case this port was COM11 - shown below). If you\u2019re on windows, you can find this connection on Device Manager before your selection in the IDE . Finally, select your programming style. For all programmers documented on this page, the Serial UPDI w/ 4.7k resistor or diode series of styles are used, and you can select between three baudrate/speed options (highlighted in the image below) \u2026 SLOW (57600 baud) (230400 baud) (TURBO 4.5v + 460800 baud) Monitoring \u00b6 To use the serial monitoring function, toggle the programmers switch to Serial as shown below, and then connect Transmitting and Receiving Data lines as well as GND to their corresponding pins. Keep in Mind RX and TX lines must be switched between the programmer board and the target, with Transmitting of one going to Receiving of the other and vise versa. Here, as prior, you can also run a VCC line to your target board, which provides 5v. Note Connecting the UPDI line here is totally ok, as the switch disconnects it from communication when in monitoring mode. The wiring shown here is just the required connections for Serial monitoring. Switched to Monitoring Mode Minimum Wiring for Serial Monitoring To begin serial monitoring through the programmer in the Arduino IDE , first, ensure your programmer is connected to your computer via a serial cable, and the proper boart is selected in the IDE (as done in the prior programming section - and highlighted below). Then navigate to \u2026 Tools > Serial Monitor as selected in the picture below This will open the IDE \u2018s serial terminal, where incoming serial data is printed, and outgoing data can be transmitted via the input at the top of the window. I wired a programmer to a simple \u201cHello World\u201d printing Arduino, yielding the received results below. Congrats! You now know the methods to UPDI programming with the megaTinyCore library, and may have a cool hardware programmer to show for it . https://github.com/SpenceKonde/megaTinyCore \u21a9 https://github.com/SpenceKonde/megaTinyCore/blob/master/Installation.md \u21a9 https://drive.google.com/file/d/1sXxm9A5GLxVPGFNDkNBzLakp-TWlVKT2/view \u21a9","title":"UPDI Serial Programming"},{"location":"Projects/SerialUPDI/#updi-serial-programming","text":"Teddy Warner | Junior Year - 2021 | 24-31 minutes Many modern small chipsets rely on the Unified Program and Debug Interface ( UPDI ), a one-wire interface allowing for the changing of fuzes, burning of bootloaders, or uploading of sketches to any AVR Dx-series parts or any modern AVR Microcontrollers . Due to their reliance on the Unified Program and Debug Interface, these parts cannot be programmed with classic ISP style programmers, and thus a UPDI enabled programmer is required. Although UPDI is the only programming option in the case of these parts, the one-wire interface is superior to the four-wire of a classic ISP programmer and allows for quicker programming setup and less cluttered boards due to fewer programming pins. This USB -C UPDI programmer is built with a Ft232rl chip allowing for serial interfacing, and runs alongside the megaTinyCore library witch equips your IDE for serial UPDI programming via a portable python implementation.","title":"UPDI Serial Programming"},{"location":"Projects/SerialUPDI/#megatinycore-documentation","text":"In short, the megaTinyCore library is \u201cAn Arduino core for the tinyAVR 0-series, 1-series, and now the 2-series\u201d 1 . The megaTinyCore project was created and maintained by SpenceKonde . As mentioned above, the library equips your IDE for UPDI programming via a portable python installation and can be used alongside a handful of different programmer types. The USB -C UPDI Serial programmer documented alter on this page is currently the optimal choice out of these options due to its low component requirement and faster speeds than other programmers. In addition to serial programmers, One can use a 328p based board as a programmer (i.e. an Arduino or any of its clones) via megaTinyCore\u2019s jtag2updi sketch, or a designated microchip programming board or and UPDI programming tool that mimicks any listed above. Dr. Adam Harris , a mentor of mine during my cycle of Fab Academy has a Simple Fab-jtag2UPDI Board project where a 328p based board is used alongside the jtag2UPDI sketch and is a great option when creating an In-Circuit programmer though the library. I manufactured this board during my Electronics Production and continued to use it for the next 16 weeks of the course.","title":"megaTinyCore Documentation"},{"location":"Projects/SerialUPDI/#package-installation","text":"Software Requirement Arduino 1.8.13 is recommended for use with the megaTinyCore library Recent updates to the megaTinyCore library have simplified the installation process significantly. The library relies upon a board package that can be installed via the board manager witch can be installed with 3 simple steps included below 2 . http://drazzy.com/package_drazzy.com_index.json File -> Preferences, enter the above URL in Additional Boards Manager URLs Tools -> Boards -> Boards Manager\u2026 Select megaTinyCore by Spence Konde and click \u201cInstall\u201d. For best results, choose the most recent version.","title":"Package Installation"},{"location":"Projects/SerialUPDI/#jtag2updi-programming","text":"As mentioned prior, jtag2updi is a sketch from the megaTinyCore library, allowing for the use of a 328p-based board (i.e. Arduino or a clone) as an In-Circuit programmer . To begin with, this programming approach, download the latest version of the jtag2udpi sketch via the button below (Code -> Download Zip ). Download the Latest jtag2udpi Sketch Extract the contents of this downloaded sketch folder by first unzipping the downloaded folder and next moving the contained sketch folder in the unzipped folder to a separate location. Finally, Rename this sketch folder to jtag2updi , leaving you with a folder similar to the one circled in red in the image below. Inside of this jtag2updi folder, navigate to the jtag2UPDI.ino project - circled and highlighted below - and open it in your IDE . This will open the jtag2updi project file system, leaving you with a blank jtag2updi sketch followed by multiple file tabs in your IDE (like shown in the picture below). You can next upload this sketch to your 328p-based board of choice as you would any other sketch. Tip As a first test to confirm the successful upload of this sketch to your board, hook up an LED to pin 6 of the board. If the board is successfully programmed, the LED will be dimly lit as shown below. This simple test eliminates a potential error while troubleshooting a project, and confirms the programmer \u2018s working condition. Once a board is programmed with the jtag2updi project, it will act as a programmer until the next sketch is uploaded, unless the board\u2019s reset line is cut.","title":"jtag2UPDI Programming"},{"location":"Projects/SerialUPDI/#jtag2updi-usage","text":"To make use of a jtag2updi enabled In-Circuit programmer board, prepare a sketch in your IDE to upload to your desired board. For documentation purposes, I\u2019ll be uploading the simple blink sketch included below to a super simple ATtiny 412 based LED board I made in week 4 of my Fab Academy cycle and documenting it for use with the Arduino IDE . 1 2 3 4 5 6 7 8 9 10 void setup () { pinMode ( 0 , OUTPUT ); } void loop () { digitalWrite ( 0 , HIGH ); delay ( 500 ); digitalWrite ( 0 , LOW ); delay ( 500 ); } To upload code to your board via your jtag2updi enabled In-Circuit programmer board \u2026 Wire your board to your jtag2updi In-Circuit Programmer board - UPDI pin of the board to pin 6 of jtag2updi In-Circuit Programmer board with an inline 100-470 ohm resistor running between the UPDI pin and the In-Circuit Programmer, VCC to VCC , and GND to GND Under the Tools menu in the Arduino IDE , change your board to your board\u2019s chipset by navigating to the megaTinyCore board menu via Tools -> Board -> megaTinyCore and then selecting your chip group from the list. Next, specify your chip type under the Chip menu via Tools -> Chip . For use with you jtag2updi In-Circuit Programmer board, change the programmer option to Tools\u2013>Programmer \u2013> jtag2updi Change your COM port to connect via serial to your In-Circuit Programmer board if not already connected Finally, upload your sketch via the Upload Using Programmer button found under the IDE \u2018s Sketch menu - Not with the normal upload button (this will override your programmers jtag2updi sketch if done). Example Following these steps on my simple ATtiny 412 board yielded the 1/2 second blink example below. Congrats! You can now program any modern AVR Microcontrollers via UPDI and a jtag2updi enabled 328p-based board.","title":"jtag2UPDI Usage"},{"location":"Projects/SerialUPDI/#serial-programming","text":"Serial UPDI Programming with megaTinyCore Version 2.2.0 of the megaTinyCore library brings the implementation of a portable python implementation. This installation, based on pymcuprog , allows for a programming speed increase by a factor of 20 when compared to the prior jtag2udpi programming style. With this performance increase in addition to a smaller & cheaper hardware list, Serial UDPI programming with the megaTinyCore library is the most optimal form of programming I\u2019ve used on my boards to date. The serial programming style relies on this prior mentioned portable python installation alongside a USB -Serial adapter acting as the programmer in this case. Though this section of the page will document this programming style via a pre-made USB -Serial adapter (in this case an FTDI chip) and some other hardware bits, please note the USB -C UPDI Serial Programmer board documented later on this page - this board is a set hardware piece for this Serial UPDI programming style, and provides a permanent hardware programming board. To engage the Serial UPDI programming method without a board like this you\u2019ll need the required hardware\u2026 A USB -Serial Adapter - I\u2019ll be using an FTDI FT232 for this documentation, but boards based on the CH340G or the CP210 chips work great as well Some Jumper Wires A Schottky Diode - I tacked some leads to an SMD package (as shown below), but if you can get your hands on a through-hole package, that works great as well. A 470-ohm Resistor - If creating a UPDI programmable board, incorporate this resistor into your schematic using the pinout below, running the 470-ohm resistor inline to the UPDI pin. Any value between 100 and 1k ohms will do here, but 470 is the optimal value. Target Board Programming Headers __________________ -----| UPDI---\\/\\/------> -----| Gnd 470 ohms (100 ~ 1k) -----| Vcc |__________________ If not creating your own board, and there\u2019s no inline UPDI resistor, you\u2019ll need to include this resistor externally. With that said, wiring between your serial adapter and the target device is diagrammed in the schematics below. VCC of Adapter to VCC of Target GND of Adapter to GND of Target Schottky Diode between the Rx & Tx of Serial Adapter (Cathode to Tx ) Rx of Adapter to UPDI of Target - Here include the 470 ohms resistor as needed Ideal - internal resistor in the adapter - not more than 1k -------------------- To Target device DTR| __________________ internal Rx |--------------,------------------| UPDI---\\/\\/------> Tx---/\\/\\/\\---Tx |-------|<|---' .--------| Gnd 470 ohms (100 ~ 1k) resistor Vcc|---------------------------------| Vcc typ. 1k CTS| .` |__________________ Gnd|--------------------' If you make a 3-pin connector, use this pinout -------------------- or -------------------- To Target device DTR| External 470 ohms (100 ~ 1k) __________________ internal Rx |--------------,--\\/\\/------------| UPDI-------------> Tx---/\\/\\/\\---Tx |-------|<|---' .--------| Gnd resistor Vcc|---------------------------------| Vcc typ 1k CTS| .` |__________________ Gnd|--------------------' -------------------- Or with no internal resistor on the adapter - as long as the target has one -------------------- To Target device DTR| __________________ no Rx |--------------,------------------| UPDI---\\/\\/------> internal Tx |-------|<|---' .--------| Gnd 470 ohms (100 ~ 1k) resistor Vcc|---------------------------------| Vcc CTS| .` |__________________ Gnd|--------------------' -------------------- I rigged up the second included schematic on a breadboard as unfortunately the blinky board I\u2019m programming doesn\u2019t have a valid inline resistor I can use. Serial Programmer Setup on a Breadboard","title":"Serial Programming"},{"location":"Projects/SerialUPDI/#serial-programmer-usage","text":"To program via your USB -Serial setup \u2026 Navigate to the Tools -> Programmer menu and select an iteration of the Serial- UPDI options (Based on upload speeds, the tinyAVR core offers 57600 baud, 230400 baud, and 460800 baud options - thus the different speed settings) Then, under Tools -> Port select the port connected to your USB -Serial adapter, if not already selected Finally, upload your sketch via the Upload button and watch as your board is programmed at lightning speeds! Note - this serial programmer setup does not give you a serial monitor You\u2019ll need to connect a serial adapter the normal way for that. The later documented USB -C UPDI Serial Programmer & ftdi2updi boards provide a switching feature between a serial programming and serial monitoring mode, allowing for all programming and monitoring work to be done without rework of connections. Be sure to check out the specific USB -C UPDI Serial Programmer usage section for use of this feature. Example For this example, I modified my prior used blink sketch to run a 5-second delay as opposed to the prior 0.5 seconds\u2026 1 2 3 4 5 6 7 8 9 10 void setup () { pinMode ( 0 , OUTPUT ); } void loop () { digitalWrite ( 0 , HIGH ); delay ( 5000 ); digitalWrite ( 0 , LOW ); delay ( 5000 ); } I uploaded this via the three-step process listed above, yielding the successful results below. Congrats! You can now program any modern AVR Microcontrollers via UPDI with a simple USB -Serial adapter with a speed increase by a factor of twenty when compared with the prior jtag2updi method.","title":"Serial Programmer Usage"},{"location":"Projects/SerialUPDI/#updi-serial-programmer-manufacturing","text":"I made countless PCBs during my cycle of the Fab Academy , one of the first being a tool to program the rest, an In-Circuit Programmer . Being one of the first boards I fabricated myself, from the PCB milling to soldering & stuffing, I hadn\u2019t yet taken up the practice of designing my boards, and for this assignment, fabricated the In-Circuit Programmer design of one of my mentors, Dr. Adam Harris . This board is a specialized Arduino-like board, running on an ATMega 328p with a programmer sketch provided by the megaTinyCore library. Project Origins The In-Circuit Programmer I fabricated in Fab Academy\u2019s operation is great, but due to new updates in the megaTinyCore library, the process can be optimized for faster speeds, and the board size and component requirements can be reduced. This board marks my first steps into the world of multi-layered PCB design and fabrication, a process I\u2019m super pumped to pick up and apply to future projects. The USB -C UPDI Programmer is a specialized piece of hardware for use with the prior discussed serial programming method and has a couple of advantages over rigging a programmer up on a breadboard. A permanent piece of the hardware enables the serial programming method to require a bit less setup, once the board has been made. Following that, this board includes \u201cmodes\u201d, allowing switching between serial programming and monitoring functions. When rigging a serial programmer up via a USB -serial adapter as documented prior, you cannot monitor serial from the board at the same time, but instead are required to require the board to the USB -serial adapter. The switching of \u201cmodes\u201d on this programmer eliminates this extra hassle, handling all the required connections at the flip of a switch located on the board\u2019s underside.","title":"UPDI Serial Programmer Manufacturing"},{"location":"Projects/SerialUPDI/#usb-c-updi-design","text":"It was this elimination of hassle that pushed me to create this piece of hardware, yielding a simple workflow when serial programming. The USB -C UPDI Serial Programmer is based on the FT232RL 3 IC , handling the USB protocol and USB to serial data transfer on the programmer . The FT232RL is broken out following the same wiring principals diagrammed in the prior serial programming documentation, converting the IC \u2018s Rx and Tx lines to a UPDI line, routed to a programming pin. Just before this Rx and Tx junction, a Double-Pole Double-Through switch allows for the switching of this conversion to UPDI to straightforward Rx and Tx lines, routed each to their corresponding pin. Thus, the programmer board includes a UPDI , Rx , and Tx output pin, in addition to a VCC and GND line. This 5 pin programming pinout can be mimicked on any board containing a AVR Microcontroller , allowing for programming and monitoring functions to be switched without reworking connections between the programmer and board. USB-C UPDI Programmer Eagle Schematic Then came the nesting process. Being my first double-sided board in Eagle, it took some work to get used to the use of vias between sides, but eventually, I worked out the process of changing Via\u2019s drill class through Eagle\u2019s Change -> Drill tool. I ended up using 0.6mm rivets for this board\u2019s vias, using 8 on the board in total. I nested bards on the board, including both the FT232RL and the USB -C female adapter on the top side, along with some smoothing capacitors, and on the bottom, the UPDI programming component array, as well as the DPDT switch. USB-C UPDI Programmer Eagle Board The nesting of the two highest pinout parts on the board\u2019s topside inspired my next experiment with this board, Solder Paste Stencil making. Although I feel pretty confident in my SMD soldering skills, soldering pads this small wouldn\u2019t only be a hassle, it would also be tedious time waste, and thus I settled on a solder paste stencil approach for the boards topside, while hand soldering the bottom half. I exported the Tcream layer of my programmer board from Eagle as a .pdf for cutting of the stencil from cardstock on a Epliog Fusion Pro 48 laser. Tcream board layer in Eagle Bill of Matierals - USB -C UPDI Qty. Part Cost URL x1 SMD DPDT Switch $1.50 link x1 CDBM1100-G $0.39 link x1 470 ohm SMD Resistor $0.10 link x1 1.5k ohm SMD Resistor $0.10 link x1 100nf SMD Cap $0.18 link x1 1uf SMD Cap $0.10 link x1 DX07S016JA1R1500 $1.59 link x1 FT232RL $4.19 link x11 Header Pins $0.14 link x1 Copper PCB Blank $0.70 link Total Cost- $8.99","title":"USB-C UPDI Design"},{"location":"Projects/SerialUPDI/#ftdi2updi-design","text":"In addition to the prior USB -C UPDI Serial Programmer board, I created an alternative hardware programmer that makes use of a pre-existing FTDI chip, enabling it with the same switching functions feature as the prior board. This provided a workaround to 2021\u2019s silicone shortage, as due to backed-up supply chains, I wasn\u2019t able to get my hands on the FT232RL right away. The board\u2019s schematic is a cloned iteration of the prior programmer , but with the USB -C & FT232RL components removed, and replaced with headers for connection to an FTDI adapter, yielding the schematic below. First Iteration ftdi2updi Programmer Eagle Schematic I was compelled to expand on the original shape of an FTDI serial adapter for this board, as it expands on the functionality of the adapter itself. I used Inkscape to create the board shape, allowing for meshing with an FTDI serial adapter, with the board aligning two of the sides of the adapter and then imported this board shape into Eagle via an ulp as documented on my Fab Academy Final Project page. I then nested the components on both sides of the board, aligning the FTDI connection pins allowing for proper seating of the FTDI serial adapter with the board. First Iteration ftdi2updi Programmer Eagle Board Bill of Matierals - ftdi2updi Qty. Part Cost URL x1 SMD DPDT Switch $1.50 link x1 CDBM1100-G $0.39 link x1 470 ohm SMD Resistor $0.10 link x11 Header Pins $0.14 link x1 Copper PCB Blank $0.70 link x1 FTDI Serial Adapter $14.95 link Total Cost (W/out FTDI)- \\(2.83** </br> Final Cost- **\\) 17.78","title":"ftdi2updi Design"},{"location":"Projects/SerialUPDI/#fabrication-testing","text":"","title":"Fabrication &amp; Testing"},{"location":"Projects/SerialUPDI/#ftdi2updi","text":"I milled my boards with a Bantam PCB mill and its Bantam Tools Desktop Milling Machine Software . The software handles all toolpath generation from my Eagle board file, and conveniently, when paired with Bantam\u2019s PCB placement bracket, also handles the double-sided board milling process via a toggle switch in the interface. I followed the same milling process I have documented on my week 4 Fab Academy page, however after the top-side traces and holes were milled, I flipped the copper stock, aligning to the right-hand corner of the PCB alignment bracket as opposed to the left, and toggled the board to its bottom side in the Bantam Tools Desktop Milling Machine Software . With the stock realigned, I repeated the same milling process for the bottom side of the board. This whole process is showcased in this view from Bantam. I used a 0.005\u201d PCB engraving bit for the ftdi2updi\u2019s traces, and a 1/32\u201d for its holes and outlines, yielding the milled results below. After the milling, I washed off my board with some soap and water. The Bantam Tools Desktop Milling Machine Software makes the milling of double-sided boards super straightforward, not much harder than a single-sided PCB, however, the boards require the extra step of riveting vias between both sides of the board before soldering. This article on PCB Rivets from the Fab Docs walks through the process down into a couple of steps. First the via has to be inserted into its corresponding hole, I used 0.6mm vias here. Then I used a V-Shaped nail to chamfer the top of the via and finally pressed it flush with a flat press, each step shown in the three images below. Finally, to ensure a proper connection, I soldered over each side of the via and repeated this process for all four of the board\u2019s vias. Boards with Vias I finished the stuffing and soldering of this board, a simple enough process due to the small component size. Note The board that is being documented here is an early iteration of the ftdi2updi and contains an extra resistor, and thus your final board may not look exactly like the ones on this page until the Programmer Usage section. I ran two tests on the ftdi2updi, one proving each of the board\u2019s functions. Programming Test Beginning with its programming function, I uploaded a modified version of the same blink test sketch used above to my simple LED board \u2026 1 2 3 4 5 6 7 8 9 10 11 12 void setup () { pinMode ( 0 , OUTPUT ); } void loop () { digitalWrite ( 0 , HIGH ); Serial . println ( ' ON ' ) delay ( 5000 ); digitalWrite ( 0 , LOW ); Serial . println ( ' OFF ' ) delay ( 5000 ); } I uploaded this via the Programmer Usage process documented in the corresponding section below. The first upload was successful at a medium (230400) baudrate. Then I uploaded the test, and repeated it at the highest (TURBO 4.5v + 460800) baudrate, yielding the successful results below. Note The ftdi2updi serial adapter meshing headers were reversed in this iteration, and thus I attached the serial adapter upsidedown for this test, the proper orientation as outlined in the following Programmer Usage section. Serial Monitoring Test Next, I switched the programmer to its monitoring mode and hooked it up to Arduino RX & TX pins, shown below. Unfortunately, my simple LED board doesn\u2019t have serial communication pins, and thus this Arduino was my next best testing option. I uploaded this super simple serial print sketch to the Arduino \u2026 1 2 3 4 5 6 7 8 void setup (){ Serial . begin ( 9600 ); } void loop (){ Serial . println ( \"Hello World\" ); delay ( 5000 ); } and then opened the Arduino IDE \u2018s serial monitor on my ftdi2updi port, which successfully read the serial output printed, shown below - and also was able to transmit via serial, shown by the Arduinos receiving LED . Although this first iteration of the ftdi2updi worked, there were a couple of design flaws (Noted above) I\u2019ve flatted out in later versions including - a reversed FTDI header, oversized vias, an unnecessary 1k resistor, and improper meshing with an existing FTDI serial adapter. The final version of this programmer (and its CAM files) can be accessed in the repo linked by the download button at the bottom of the Fabrication & Testing section. Use this version as refrence whilst fabricating your own board. I ordered a couple of these final iteration boards from a PCB fab \u2026 Which turned out incredible. The Gerber files for these boards are included in the Repo linked via the download button at the bottom of the Fabrication & Testing section, along with an Eagle board file with silkscreen decals instead of milled ones. I soldered the components to this board, a process made even easier by the already plated vias, and lack of need to insert my own. ftdi2updi Front and Back","title":"ftdi2updi"},{"location":"Projects/SerialUPDI/#usb-c-updi","text":"Pending Compleation As mentioned prior, due to 2021\u2019s supply chain limitations, I cannot currently get my hands on an FT232RL, and thus, for now, the fabrication & testing sections will only include my ftdi2upid board. This section will be updated by future me once I can get an FT232RL. This USB -C UPDI Programmer Board is not yet complete Although you can download its files, the board is still in development and may not function properly. Again, this section will be updated upon its completion. Process Type - Vector Speed - 100.0% Power - 19.0% Frequency - 6.0% Download the UPDI Serial Programmers Project Files","title":"USB-C UPDI"},{"location":"Projects/SerialUPDI/#programmer-usage","text":"Serial programming with the megaTinyCore library is incredibly straightforward, and when pair with the switching functionality of both of my hardware programmers, the process is streamlined. I\u2019ll be using a final iteration ftdi2updi board for this Programmer Usage documentation, however, these steps will work for either programmer style included on this page, regardless of fabrication technique. Both Serial UPDI programmers rely on the prior documented megaTinyCore library, which must be installed for programmer usage. This process is outlined in the Package Installation section of this page.","title":"Programmer Usage"},{"location":"Projects/SerialUPDI/#programming","text":"To use the UPDI programming function, toggle the programmers switch to UPDI as shown below, and then connect UPDI and GND lines to their corresponding pins. Here you can also run a VCC line to your target board, which provides 5v, shown in the wiring below. Note Connecting serial data lines here is totally ok, as the switch disconnects them from communication when in programming mode. The wiring shown here is just the required connections for UPDI programming. Switched to Progamming Mode Minimum Wiring for UPDI Programming Once connections are made between the programmer and the target board, you must configure your target board in your IDE . For this documentation, I\u2019ll continue using the Arduino IDE , however other IDEs with the megaTinyCore installed can be used for this (I may do some tests with PlatformIO in the future, and will update this page accordingly). First, you must select your target board\u2019s microcontroller by navigating to \u2026 Tools > Board > megaTinyCore and then selecting your microcontroller from the list, shown in the image below. Next, connect your programmer to your computer via a serial cable and, select your serial port by navigating to \u2026 Tools > Port and then select the serial port your programmer board is connected to (In my case this port was COM11 - shown below). If you\u2019re on windows, you can find this connection on Device Manager before your selection in the IDE . Finally, select your programming style. For all programmers documented on this page, the Serial UPDI w/ 4.7k resistor or diode series of styles are used, and you can select between three baudrate/speed options (highlighted in the image below) \u2026 SLOW (57600 baud) (230400 baud) (TURBO 4.5v + 460800 baud)","title":"Programming"},{"location":"Projects/SerialUPDI/#monitoring","text":"To use the serial monitoring function, toggle the programmers switch to Serial as shown below, and then connect Transmitting and Receiving Data lines as well as GND to their corresponding pins. Keep in Mind RX and TX lines must be switched between the programmer board and the target, with Transmitting of one going to Receiving of the other and vise versa. Here, as prior, you can also run a VCC line to your target board, which provides 5v. Note Connecting the UPDI line here is totally ok, as the switch disconnects it from communication when in monitoring mode. The wiring shown here is just the required connections for Serial monitoring. Switched to Monitoring Mode Minimum Wiring for Serial Monitoring To begin serial monitoring through the programmer in the Arduino IDE , first, ensure your programmer is connected to your computer via a serial cable, and the proper boart is selected in the IDE (as done in the prior programming section - and highlighted below). Then navigate to \u2026 Tools > Serial Monitor as selected in the picture below This will open the IDE \u2018s serial terminal, where incoming serial data is printed, and outgoing data can be transmitted via the input at the top of the window. I wired a programmer to a simple \u201cHello World\u201d printing Arduino, yielding the received results below. Congrats! You now know the methods to UPDI programming with the megaTinyCore library, and may have a cool hardware programmer to show for it . https://github.com/SpenceKonde/megaTinyCore \u21a9 https://github.com/SpenceKonde/megaTinyCore/blob/master/Installation.md \u21a9 https://drive.google.com/file/d/1sXxm9A5GLxVPGFNDkNBzLakp-TWlVKT2/view \u21a9","title":"Monitoring"}]}